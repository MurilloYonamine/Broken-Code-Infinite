%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1503.i029.035.P.m005.c26.forest elements.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Даша
%%CreationDate: 3/27/2015
%%BoundingBox: 0 0 382 413
%%HiResBoundingBox: 0 0 381.6763 412.0469
%%CropBox: 0 0 381.6763 412.0469
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 120 128 8%%BeginData: 14168 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD2AFFA77BFD04A6FD71FFCA7BA57BA59F9F7BA7FD35FFCF7CA0A1
%FD1BFFCFA7A7FD17FFCF7AA59FA69FA67BA6A7FD34FFCF515150757BA7A7
%FD15FFA7517B507550A0CFFD10FFCFA17C507CA8A77B9F7B9F7BA7CFFD1B
%FFA8A07BA6A7FD14FFA8517B7B7B507B50507CFD13FFA8507B757B7B7B50
%A0FD10FF7550507B7A7BA8CAA1A7A0CAA8FD19FFA8CFA77B747B747BA7FD
%11FFCF7C507B7B9F7BA67B7B507CFD11FFA87C757B757B747B757550A8FD
%0FFFCF7C75507B75A8A0A1A1A77B7B7CCFFD16FFA77B507B7BA57B9F747B
%A7FD10FF7C507B7B9F7B7B7B9F7B5175FD10FFA87B50FD057B757B7B7B50
%CFFD10FFCFA87BA69F9FA1FFFD047BA7FD13FFA87C517B7BA69FA69FA69F
%9F7B7B7BFD0FFF509F7B9F7B9F7B9F7B9F75757DFD0FFFA74A7B747B507B
%747B507B505075FD10FFCFA09F7BA57BA0AECA75A6A8FD13FFA77B507B7B
%A57B9F7BA67B9F7B9F747A75FD0DFFA851749F7B7B7B9FFD047B5051A8FD
%0EFFA87B51FD067B9F7B7B7B9F7BA6CFFD0DFFA09F7BA69F9F7BC9A8FD15
%FF7DFD047BA69FA69FA69FA69FA69F7B7B7B7CFD0DFF759F7B9F7BA07B9F
%7BA67B7B50A6CFFD0BFFA77BA0FD047B507B507B7B9F7B7B7B9F7AA6CAFD
%0DFFA8A77B9F7BA1A1A77BA6A6A6A0FD0FFFA850507B7BA57BA69F9F7BA6
%9F9F7BA6757B5075A8FD0BFFA77B7B9F7B7B7B9FFD047B757B507BA8FD09
%FFCF7A9F7B9F7B9F7B7B757B7B9F7BA67BA69FA67BA0CAFD0EFFA1A7A775
%A67BA59FA59F9FA7FD0EFFCA507B757B9FA69FA69FA69FA69FA69F9F7B7B
%51FD0CFF7B7B9F7B9F7B9F7B9F7B7B7BA69FA67B7B7CCFFD06FFCF7B7B7B
%9F7B9F7B9FFD057B9F7BA67B9F7B9F74A7FD0CFFA87C75A1A1A17B7B7A9F
%7B9F7BA77C7C7DA8FD0AFFA875507B7BA67B9F7BA67B9F7BA67BA57B7B74
%757BFD0AFFCF50FD047B9FFD047B749F7BA67B9F7B7B7BFD06FF7B9F7BA6
%9FA69FA69FA67BA67BA69FA69FA69FA69F9F7BFD0BFFA7A0747B759AA8FF
%A7A67CA7A0CAA77B50757BFD0AFFA7507B7BA69FA69FA69FA69FA69FA69F
%9F7B7B75757CFD0AFF7C507B7BA67B9F7BA07B9F9FA69FA69FA67B7BFD05
%FFA89F7B9F7BA69F9F7BA69F9F7BA69F9F7BA69F9F7BA67B7B7BFD09FF7D
%50507B745075CAA1A1759FA0A876A67BA0A8FD0AFFCA507B757B9FA69F9F
%7BA69F9F7BA69FA67B7B7575507BFD0AFFA87C507B7B9F7B9F7B7B7BA57B
%A69F9F7B9F75CFFD04FFA67BA09FA69FA69FA69FA69FA69FA69FA69FA69F
%A69FA67B7BA7FD09FFA7A7757C7CCA76A7A8A77BCACF9F7BA6A6CFFD09FF
%CF50FD047B9F9FA69FA69FA69FA69FA67B7B757B51757CFD0CFF7C507B75
%7B757B75A69FA69FA69FA67B7B7CFFFFFFA77A7B7BA67B9F7BA67B9F7BA6
%7B9F7BA67B9F7BA67B9F7BA67B7BA8FD0BFFA1A1A076FD04FFA1A77B9F7B
%A0A7FD09FF5150507B507B749F7BA67BA57BA67BA57B7B747B747551FD0D
%FFA75150515051507B7BA67B9F7BA67B9F747BCFFFA77B9F7BA69FA69FA6
%9FA69FA69FA69FA69FA69FA69FA69FA69FA67AC9FD0DFF9AA0FFA7A77BA6
%7CA1A0A7FD0BFFA0507B75FD047BA69FA67B9F7BA67B9FFD047B517BFD0E
%FFA87C757C7C7B7BA69FA69FA69FA67B7B7BFFFF749F7B9F7BA69F9F7BA6
%9FA57BA69F9F7B9F7B9F7B9F7B9F7B9F7B7BA7FD0DFFA1A0FFA77B7B7BA6
%9AA175A8FD0AFF7C755075507B757B7B9F7B7B747B757B747B757B507551
%FD0FFFA7CAA8CAA17B7BA69F9F7BA67B7B50A7FFFFA67A9F7BA69FA69FA6
%9FA69F9F7A9F7B9F7BA07B9F7B9F7B9F7B9F9FFD0EFFCAA0FFFFFFA7A7A8
%A1757B507BFD08FF7C75507B517B757B7B7B757B7B7B75FD057B517550A8
%FD0FFFCAA1FFA1FF7B7B7BA69FA67B7B7BA8FFFFFFA8A67B9F7B9F7B9F7B
%9F7B7B7BA77CA7A09A757B747B747B7B7B7CFD0FFFA1A0FD04FFA8A07C7C
%757C7CFD07FFA87550515075507B747B747B507B75A1757B747B5075507B
%FD10FFA8A1A8A176CAA77B749F7B7B50A7FD07FFCA9F7B9F7B9F7BA0A7FF
%FFFFA19AA1FD087BFD10FFCA76FD05FFA8A0A1CFFD0AFF7C51507B517B51
%7B7B7B757B756FCAFF7B7B517B517B50FD11FFA0CAA0A1FFFF7C7B7B7B74
%A6FD09FFA8A67BA6A7FF75FFFFFFA16FA8FF7B7B757B7C7B7BFD11FFA19A
%FD06FF6FFD0DFF7C7550755051507B50507CA16ECAFFFF4A5050755075A8
%FD10FFA7A1A1A8FFFFFF7C7C7BA0A8FD0FFFCA6FCAA76FA1FFFFA175A1A8
%FFCAFD12FFCA75FD05FFCFA0FD0EFFCAA8A7FF7C50507B51FFA16EA1FFA0
%757C7B507BA8FD12FFA19ACAFFFFFFCAA1FFA8FD11FFA86F6E44A1A89A9A
%CACBFD15FFA175A8FD05FF76FD13FF7C7C5075FFA144A1CA6EA1FFA8A8A8
%FD13FFA175A8FFFFFFA89AA8A8FD13FFA7756E99A8FD18FFCA6FFD05FFCF
%A1FD16FF6F9A756FA1A16FFD19FF76CFFD04FFA1A7A8FD14FFA86F6EFD19
%FFA76FA8FD05FF76FD16FFA0446F6E766EA1FD19FFA0A8FD04FFA776FD16
%FF9A6EA0FD18FFCF6FFD05FFA8A0FD16FF9A6F6F6F6E75CAFD19FF76CFFD
%04FFA1A1FD16FFA0449AFD18FFA86FA8FD04FFCA76FD16FFA1444B204A75
%FD1AFF9AA8FD04FFCAA1FD15FFCA6F6FA0FD19FF6FCAFD04FFA89AFD16FF
%A16F264B44A1FD1AFF76FD05FFA1A8FD14FFCA6F6F6ECAFD18FFA86FA7FD
%04FFCA6FFD16FF9A4A4B206F6FFD1AFF9AA8FD04FFA1A1FD14FF756F6EA1
%FD1AFF6ECAFD04FFA89AFD15FFCA6E6F6F756F6FA7FD19FF75CAFD04FFA1
%A7FD13FFA16E6E6F6FA8FD18FFA86FA1FD04FFCA6FFD14FFCA6E6E6E6F6E
%6F4476FD18FFA876A8FD04FFA1A1FD12FFA19A6F756FA06FA1A8FD17FF44
%A7FD04FFA175FD13FFCA6F9AA06F6F9A6FA06FA1FD18FF75CAFD04FF9AA1
%FD11FFCACAA8FFA8FFFFFFA1A1A8FD15FFCAA1A8FD04FFCFA1FD13FFA8CA
%FFFFA1FFA8CAFFFFA8FD18FFA7CAFD04FFA8A8FDFCFFFDFBFFCACFFD75FF
%A850A0FD75FFA77B7BFD75FFA0507BA7FD59FFA8CFFD13FFCAFD04FFCF7B
%9F74A7FD58FFA175507CFD12FF7C7BFFFFFF7C7B9F7B50CFFD1AFFA8FD3B
%FFA75050514A7CFD11FF507BFFFFCFA07BA67B7B7CFD19FFA77C75A7A7CF
%FD36FF7C7B757B757B51FD10FFA15050A7FFA750A69F9F507CFD16FFA87C
%5075507B507B507B7C7CA8FD14FFCF7CFD1BFF7C50507B7B7B5075A8FD0E
%FFCA7C7B7B7CFFA77B9FA69F7B7BFD14FFCF7B75507B7B7B757B7B7B747B
%507CA7FD13FF7C50A8FD19FFA87B759F9FA67B7B50A7FD0EFFA7509F7451
%A77C7B9F7BA6747CFD11FFCFA77B507B5075507B747B507B747B747B5050
%7CFD12FF7C507CA8FD18FFA7509F7B9F7B7B505150A8FD0DFF7C7B7B9F51
%A07BA69FA69F7B7BFD0DFFA7A07CA77B7B7B9F7BA07B7B757B757B7B7B75
%7B507C7CFD12FFA7507B50A0FD18FF7C7B9FA69FA67B7B75757CFD0DFF7B
%7B9F7B7B509F9F9F7BA67B7BA7FD09FFA0A07B7B747B749F7B7B7B9F7B7B
%507C7575507B7B7B51A1A8FD13FF7C74507B7BCAFD16FF7C517BA69F9F7B
%A67B7B507BA8FD0CFF7B9F7B9F7B7B7BA69FA69FA674A8FD08FF7B7B7B9F
%7B9F7B9F7B9F7B9F7B9F7B7B7BA0757C7BA69FA6A0A6A7FD11FFA6A67B9F
%7BA67BCFFD14FFA7757BA69FA69FA69F9F7B7B50FD0CFFA8FD057B507B7B
%A67BA57B7BA7FD08FF7B50FD047B9F7B7B7B9F7B7B7B9F7B7B507B7B9F7B
%A67B9F7B7BA8FD0FFFA77B7BA69FA57B7B7CFD14FF7C50A67B9F7BA67B9F
%757B5075A8FD0BFFCA759F7BA67B7B9FA69FA69FA67BA7FD08FFCFA77B7B
%7BA07B9F7B9F7B9F7BA67B7B7B9F7BA69FA69FA69FA69FA6A8FD0EFFA77B
%A67BA67BA67B7B51A7FD12FF509F9FA69FA69FA69F9F7B757CFD0CFF7CFD
%057B759F7BA69FA57B7B75FD0BFF7B74747B7B7B7CA6757B507B507BA09F
%7B9F7BA69FA57BA67AA0FD0CFFA87B507B74FD057B755051FD11FFA7507B
%A69F9F7BA69FA57B7B50A7FD0BFFA87B7B9F7B9F7B7B9FA69FA69FA67B7B
%A7FD0BFFA6A07CCFA1A87C7B517B517B75A77BA7A09F7BA69F9F7BA6A7FD
%0CFFCF507B7B7B757B7B7B757B51CFFD11FFA7507B9FA69FA69FA69F9F75
%7B7CFD0BFFA8507B7B9F7B7B7BA67B9F7BA67B7B50A7FD10FF5150507B74
%7B747B5051A1FFA8A77B9F7BA8FD0EFFA87B507B747B507B5051507B7CCF
%FD10FF7C50759F7BA67B9F7BA67B7B5075A8FD0AFFA87B7BA07B9F7B9F9F
%A69FA69FA67B7BA7FD0DFFA87C75FD097B507BA8FFA1A0A1FD10FFA67B9F
%5175507B517B7BA09F9F7BFD10FFA7507B7BA69FA69FA69F7B7B7B50A8FD
%0AFF7C749F7B9F7B7B7BA69F9F7BA69F9F50A6FD0DFFA85075507B747B75
%7B747B745150CFFF7676FD10FFA77B9F7B9F7B7B759F7BA59FA67B7BA7FD
%0FFFA775747B7BA69F9F7B9F757B5051A1FD0AFF7B9F7B9F7B9F7BA69FA6
%9FA69FA69F7B7BFD0FFFA87C507B517B757B757C7BA0CA9AA1FD10FFA77A
%A69FA69FA69FA69FA69FA69FA69F9FA6FD0FFF507B7B7B9FA69F9F757B7B
%7B50A8FD09FFA875507B747B507B7B9F7BA69F9F7B9F747BA7FD0FFFA87C
%75A77C75A1A176CA6F75A1FD11FFA07B7B9F7B9F7BA67B9F7BA67B9F7B9F
%7B7BA8FD0EFF7C507B747B7B9F757B747B5051A7FD0AFF7CA0757B50FD04
%7B9F7BA67B9F7B7B74A7FD12FFA7CA75A1FF9AA76FA1FD12FFA8759F7B9F
%7BA69FA69FA67BA67BA67B9FA0FD0FFFA87551FD077B517551FD0DFFCAA1
%A17B7B747B507B757B507B7474A0FD14FFCF75CA6F9A75FD12FFCF507574
%7B757B7B9F7B9F7B9FFD047B5051A1FD0FFF7C75507B747B757B507550A7
%FD0EFFCAA1CA7C7B7B7B747B747B7B7B7CFD16FFCA75756E9AFD12FF7C7B
%7B7B75FD047B9F7B7B757B7B7B757B507CFD10FF7C75757B757B757550A7
%FD0FFFA175A8A7A8FFA0A075A0A1FFA8FD18FFCA6F6E75FD11FF7551507B
%747B507B747B507B747B507B747B747B50A0A8FD0EFFA850755075507550
%7CFD11FF76A1A1FFFFCAA8A1A1FD1CFFA144A0FD10FF7C5051FD137B50A6
%FD0FFF7C507B517B507BA8FD11FFA16FFFFFFFA1A86FA1FD1CFFA16E75FD
%10FF7C5075507B757B507B757B747B507B507B507B507B505150FD0FFFA8
%7C5051507BA7FD12FF76CAFFFFFFA19A75CAFD1CFFCA6E9AFD10FFA77B50
%75507B5075507B757B507B50517B7B5075507550A7FD11FFCF7576FD14FF
%9AA1FFFFFFA76F75FD1DFFA16F6FFD11FFA87C757551A07C514A5050754B
%A7A7FFA87C517551A7FD13FF756FFD14FF75FD05FF9A75FD1DFFCA6E75FD
%18FFA8A7A7766E9AFD1CFF7675FD13FFCA75A8FD04FFA86ECFFD1CFFA06F
%6FCFFD1AFF6F6F6EFD1CFFA16ECAFD13FF6FCFFD04FFA16FA8FD1CFF9A6E
%6FA1FD19FFA16F6F6FA1FD1BFF766FFD13FFA86FA8FD04FFA744CAFD1AFF
%CAA1446F4A6FA1FD17FFA86F446F6E6EA0FD19FFA86F4ACAFD13FFA8FD05
%FFA16FA8FD1AFFCA76A1759AA1A0A8FD15FFCAA09AC96FA0A1A0A7FD17FF
%A89A6E6F76FD19FFCAA1FD1EFFCFA8FD1CFFCAA8FD1BFFA8CAA7CACAFDFC
%FFFDFCFFFDFCFFFD13FFCFA8FD73FFCF7D7C50517CFD3AFFA7A6FD34FFA8
%FF7550507B75757CA8FD38FF9FA6CFFD31FFCF5151507B747B507B50504A
%A7FD36FFA79F7BCFFD30FFA7517575FD047B9F9F9F7B7B75FD35FFCFCE9F
%9FCFFFCFCFCAFD2CFF5075757B7B9F7B7B7BA67B7B507B7B7C7CFD32FF7C
%75A6A0CF7B9F74A7FD14FFCA7CFD15FFA875507B7BA69FA6FD067B757B50
%517CFD14FFC9A6A6A6CFFD18FF7575A1FF7B7B7AA7FD0FFFA8A8A8FFA775
%505050A7A8FFA8FD0FFFA87C507B50FD057B747B509F7B7B507B505075FD
%11FFA8A07A9F7B9F7ACFFD14FFA1A1A7A075A8A1A7A0A7FD0FFFCF7C507C
%7B7B757B7B7B74A6A0A6A7FD0DFFA87B50FD0B7B9FA69F9F7B7B507BA8FD
%0EFFA87C7B7BA69FA69FA6CFFD14FFA8507B7BA8A8A1CFA6CFFD0FFFA850
%7B747B507B757B7BA67B9F7B9FA7FD0CFFA8507B757B7B7B757B749F7B7B
%747B7B7B747B7B7B507BFD0DFFA8507B747B7B9F9FA57BA7A7FD14FF7C50
%507CA0A0A07BCF7DA7A7CFA8FD0AFFA775507B7B7B757B7BA69FA69FA67B
%A7FD0CFFA775509F9FA6FD067B757B757B7B9F7B7B517551FD0DFFA87575
%FD047B9F7B9F747B75A8FD0FFFCFA7A7A67B75CAA1A1A0A77551507550A7
%FD09FF7D75507B507B747B759F7B9F7BA67B9F7BCFFD0AFFA851507B747B
%7B7B747B5074517C5075507B7B7B505150A8FD0CFFA8FF7C75507B50A7A0
%A0757B5075759FA0FD0DFF7B7A747B74A7A8A176FF76FD04507CCAFD08FF
%A77550FD067BA69FA69FA69FA69FA6A6FD0BFF5075507B757B747B757C7B
%CACAA7A77C517B517B50A7FD0BFFCA7B7B7CA67BA67B7BA1CB7C7B7B7BA8
%A77BA6A7FD0DFFA09F7B9F7CCAA1A0A1CA7C7C7CCFFD09FFA875507B757B
%507B7BA07BA69FA57BA69F9F7B9FA8FD0AFFA87C7C5075507C7BA7CAA876
%CAA1CBA1A8A8A17BA7FD0AFFA87C747B507B7BA57BA67B7575A87C9F7BFF
%A69F7B9FA0FD0DFFA8A7A7FFA0A06FA8FD0EFFCA5075517B74A6A8A77B9F
%7BA59FA69FA69FA67BA7FD0CFFA8A075A8A8CAA8FFA8A1A1CAA8CAA1A1A8
%FD0CFFA7507B7B7B759F9FA6FD057BA69F9FA7CA7BA67BA7FD0FFFA07BA8
%6FA1FF7C507CFD0CFFA85051507B7BA8A1A77BA0A1A07B9F7BA67B9F7BFD
%0DFFA8A1A0A176A17CCF76A1A1CAA076A8FD0EFFA87C75507CA19F7BA651
%7B5076A0A07BA1A19F7A7BA8FD0BFFA8CFA7CF7D5051A09AA7507575A7A0
%A7A7CFFD08FFA7507B7B7B7CCACACAA8FFA09F9FA69FA69F9FA7FD0FFFA8
%A1769A7675769AA0A0FD12FFA8A77BFFA87BA0FFA175A0CF9ACA757C7BA7
%A7FD0BFF7C7B517B507C7CA09A9AFFFFA09F7B9F7B9F7BCFFD07FFA87550
%5075A8A1CAA7CAA8CAA79F7BA67B7B7BCFFD11FFCF766F6E6F76CAFD13FF
%CF9F9F7BA1507BA8FF759F7BFF7C7B747BA8FD0CFFA7505050754AA7FF76
%76FFA875749F7B7B7AA7FD09FFCFCF7CFFA1A1A8CAA8CAA8FFA09F7B9FA7
%FD15FF6F6FA0FD15FF7B9F9FA6A1A075CFFFA09FA5A17B747B50A8FD0DFF
%CF7B7B507B7CA175A1A8A1A09F7B9FA0CFFD0EFFA876A8A1A8A8A8A1FFA7
%9FA7FD16FF9A44A8FD16FFA7A6A7CAA1A876A16FA0A6CF7D7551A7FD10FF
%A8A8A8FFA16F6FA1FFFFA7A7A7FD11FF9AA1CAA8FF76FD1BFF766FA1FD1D
%FF766FA1FFFFFFCFFD17FF7599FD17FF76A1A7FF76A7FD1BFF7544A1FD1D
%FFA74ACAA8FD1AFF9A76FD17FFA76FA7769AFD1BFFCA6E6F76FD1BFFA8A7
%7B7B7BA6A8FD19FF75A0FD17FFA8756E6FA8FD1BFF756F4A76FD1BFFA850
%51507A75FD1AFF9A75FD19FFCACAFD1CFFCAA8CAA8FD1CFFCFA8CFA8FDFC
%FFFDFCFFFDFCFFFDFCFFFD04FFA8CACACAA8FD3DFFA8FD32FFCAC3999A99
%9A999A99C9CFFD37FF7D7D4B7551A1A1FD2FFF9A6E999999759975996EA1
%FD35FFA84A6F6E756F996E6F4BFD17FFA7A7A8FD14FF756F4B99759A996F
%6F6FA1FD34FFA84A9999996F9A759999994BFD13FFCFFFA79F7B9FA8FD13
%FF754A6F6E6F6E6F4A6F44A1FD1AFF7576FD18FF4B756F99759975996F75
%996F7DFD11FFA6FD047B9F7B9F7CA7CFFD10FF6F6F6F756F6F6F756F6FA1
%FD10FFC9A0A1A1CACACFCAC96F6FA1CAA1A1A0A1A8FD11FF7D6F9999999A
%7599759A75996F7CFD11FFA67B9F7BA67BA07B9F7AA0A7FD0EFFA8756E6F
%6E6F6E6F6E6F4AA1FD10FF6F996E996E996F996E99759A6F996E996EA8FD
%11FFA14A996F996F996F756F996F994AA8FD0EFFA8A77B9F7BA67B9F7B9F
%7B7B747B517CFD0DFF6F6F6F756F756F756F6F76FD0FFFCF9A99996F9A99
%9A999A9999759A999A9975A1FD11FF76FD04999A999A759A999A99757DFD
%0DFFA79F7B9F9FA69FA69FA69FA67BA67B7B51FD0DFF756E6F6E6F6F6F6E
%6F6E6FA8FD0EFFCA6F996F996F996F996F996F996F996F996EA1FD11FF75
%6F9975996F9975996F9975994A7DFD0DFFA07A9F7B9F7BA69F9F7BA69F9F
%7B9F757B50A7FD0AFFCA6E756F6F6F756F6F6F756EA1FD0EFFA7996F9975
%996F996F996F996F996F996F6F7DFD11FF4B9A6F9A9999759A75FD04996F
%7DFD0DFF7B9F9FA69FA69FA69FA69FA69F9F7B9F7B7B51FD08FFA8A86F6E
%4A6F6E6F4A6F6E6F6E6F446FA1FD0CFFCA6F996F996F996F996F996F9975
%996F996FA7FD11FF766F996F9975996F9999996F994BFD0DFFCFA07B9F7B
%A57B9F7BA67B9F7BA6FD047B5075A8FD08FF757576A16F6F759A6E6FA1FF
%A1A1A1FD0EFFA06F9A759A759A999A759A999A759A9975A8FD11FFA86F99
%9A6F9A99A09999759A4AA1FD0EFFA8A59FA69FA59FA69FA59FA59FA57B9F
%7B7BA7FD0AFFCFFFA79AA1FFFFA1A1FD13FFCFCAA8FFA8CAA8CFCAFFA8FF
%A8CAA7CAA1FD13FF7D4B6F996F996F9975994A76FD10FFA8A7A0CAA7C9A7
%A6A7C9A7CAA7A7A8CFA8FD4CFFA8766E9A997599994BA1FD6FFFA87C4A75
%764B4BFD26FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2015-03-27T00:02:27+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-03-27T00:02:27+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-03-27T00:02:23+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>240</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADwAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FVC+v7OwtJLu9mS&#xA;3toRykmkIVQPmcjKQiLPJQGIXv5xeRrZVMV1LeVBJ+rwueNB39QRjftmHPtHEOttgxST3yv5t0bz&#xA;LYfXNNlJAPGW3kossZ8HUFvoNaZkYc8cguLGUSE5y5i7FXYqtlliijaWV1jjQFndiAoA6kk9MBNK&#xA;xzUPzI8lWFxFBNqkUjy7hoKzoorxq7RB1XfxzGnrMUTRkzECWIefNbvL3U/qk8TQafbEmA7lJwaA&#xA;Skj4SP5c0XaufJKXDVRH2+blYIAC0hS5nLRR28krSoQLeOEsWBO4CBen0ZrISyEgRJbiA9Y8sDzN&#xA;9WkOutEWbibcJ/eAUPIScQF8Omddo/G4f3tfjvcDJw36U6zMa3Yq7FXYq7FXYqk915x8rWtwbafV&#xA;LdJlNGTmDQ+BIqB9OY8tXiiaMhbIQPcmsM8M8SzQSLLE4qkiEMrDxBGxy8SBFhivwq7FXYq7FWMe&#xA;d/PNp5asVMaC81KZvTt7NWANaVLPSpCgZiarVxxRvqzhAyLzy0/OjzfbXivqmmW8tix+NLcMsij/&#xA;ACW5yD/gh92azH2vK9wKbjgegeT/AMx/L/mmWS2sxLb3kS8zbThQzIDQshUsDSu/fNpp9ZDLsObT&#xA;KBDKsymDsVdiqH1C9isLC5vpq+jaxPPJTrxjUsafQMjOXCCT0SA8B8y/mFrXmu1+r3SRW+niYTRW&#xA;8QPL4AwUO5Pxfa8BvnM6vXzyenkHKhjAY/mubVfQtcufLGvW+tWkYl9PkktuSVV1dSpBI+8e4GZe&#xA;k1BxythONh9JaJq1rq+k2mpWpBhuolkABDFSwqUYj9pTsffOrx5BOIkOrhkUUbk0OxVA63o1jrWl&#xA;3GmXys1rcgCQIxVvhYMpBHgyg5DJjE4mJ5FINPHfM35Y22iSyfVNYRoCAYLKVQ1yORpvxKArX9qn&#xA;0Zzuu0kMW/F8OrlYpmXRDwzyWmm6bpMIEaR3ivNc3DGWEwySpJIkkQVKoskKPxBFaEftZDTa6NCE&#xA;ht57uTjAjd932pv5h/S3l7Vo7TS0aJrtQba+gWMy3VQpIRIlCooY04qoJ2LFtsu1csmKQjjHCD1H&#xA;VoEhMb8no3lG78xXOlBtethb3aNwQ7BpECj94ygnixNa/qGbjSTySh+8FScWYF7J3mUwdirsVdir&#xA;BfNf5saXol/+j7K1OqXSU+sGORY4oyf2edHq3iKZrtT2jDEa5lthiJYZd+afN2sTTzyX8thbS8lj&#xA;s4vhAjPaux6dzmhz9pZZE70HJjhCVtotgY+IQg/z1Nf6ZgcRbeEJh5T85ah5QeW2uYGu9PnIZIw/&#xA;HgwPxMlQ25HUZs9D2gcNiri0ZMVvZdI1ew1fT4r+xk9S3mFQehBHVWHYg9c6fFljkiJR5FxCKNIz&#xA;LEOxVjP5ka3eaL5N1C+sm4XVEiik7oZXCFh7gE098xtZkMMZI5s4Cy8PtLOOIeq1ZLlxWWdyWZmb&#xA;cmpzj5zMju54FInK2Sn5b1m38sedbbVrqIvZtyV/T6qHXgzU7la1pmy0GcQkCejRljb6PjkjljWS&#xA;Ng8bgMjDcEEVBGdUDbhLsKrZJI4o2kkYJGgLO7GgAG5JJwEgCyryjzP+Yeq3GoXNvp0yLpg5RBfT&#xA;RxKhFGLF1Jo3tTbOa1XamQzIgfR97mQwit+bAo9Gt1LvBHIsbkkKCWVa9hUdvfNZLJZbhFQhsLgT&#xA;kysjQb0C1De1cSRXmik0i00sodURf5a9cr4mVJhp895otzFf2cvGSFgzIKhWBO6mnUHvluHPLHIS&#xA;HREoginsPlXzHFr+li8WP0pEcxzxVrRwAdjtsQc67R6oZocXJwMkOE0nGZTB2KsV846D5YaGfV9T&#xA;uPqE3D0xdlyF50pHVP2yPAdc12s0eGdznse9ux5JDYPK0Lz2sV7aGLUpBfLp/wBS+KlZbd3W4+Bl&#xA;Zo1kXb+biR7ZqcPZ8R6ieIdzsYxB5nbhv7eXvTPTPOmpWdw31GYRoyqsslyqyzyla7yufs0JPFEo&#xA;iDYDIz7UyRPo2DRKAnzZDp35iav+lIRcgXNvKeL2tvGDJuNmjpuTXsTlun7WynIOIXHuAa54I1sz&#xA;O383+V57ia2j1S29eB/SkjaRUPOtKLypy3/lrm+Goxk0JDZxeEpvlzF2KsM/N2/1Gy8kXctjIYmd&#xA;44p5FPFhE7Ubifc0X5HMPXylHEaZ4xu8X8uQBpYWVOUaLVm7AkdT9OcjkLnRZRlLY7FUq8woTBE/&#xA;KgVqFfEkdfwycGMmS/klrEVtqeqabdXSRG79KSzt3anNwGD8K9TxArnQ9kZQLjbiZg9jzeOO7FXm&#xA;351eYVtNMs9EMatHqrk3Er/sRwsh+H/KLEb9qZq+1MxjDhH8TdhjZt50oAUAdANvlnLua2SAKnYD&#xA;AlTh039IkyuwWFCVj2qT4nfDxUxq2W+W/POseWY3tr1H1PS1VRAeVHioaUBPL4afs/dTNpo+1JYx&#xA;UvUGnJhvk9Z0jVbTVtNt9RtCWt7heSVFCKGhBHiCCDnSYsoyREhyLiEUaYj+Z+vwQ6cNHiPO5uiD&#xA;KEYVREIYBh1+Ltmq7X1IEPDHMt+CG9vPLS2Man1FBY9O+cyS5iJApsMCVJ7WByWK7ncnDaFUAAAA&#xA;UA6DAlxAIodxiqM8s63d6FrEDG4MelzS0uozUpxbYtxHdRvUeGbDQas4pjf09WrLDiHm9mVldQyk&#xA;MrCqsNwQe4zsAbde3iryfzr+X/nvUdSu7qO8TUbF5jNa2ryuhiXcKqxlSnwKxFVNT8zmm1ehzZJE&#xA;8Vx7nIxzjy5MOsLEaHeJqt5cqbnR7y1ZNKjEizssr7txkVHVXIKceP2qE9qx02CWLeR5dHPxQkbj&#xA;/DIH3M71ryb51vLa3u500+4ulY3NxCiqX9ZzuDJOpWREG1CVXiAKNSps1mlzTox4dvn9riHLC6F0&#xA;kmrQwWX1JYJATPb3EOpQFDHGk8qhWAIKy8xG7fbalGDJQNmJqsngRAiBchvts3Akgg/Py/H7UT5F&#xA;8k+VdSunXULa5u3jUvGGJFpQNQbpxYt24sSOuDszFjyH1RN/Y0ZiRyewAACg2A6DOjcR2KvAvzJ8&#xA;9R+ZtVTTLaPjpunSyFZCameQfBzp0Cjfj3p92c52jq/E2HIOVihSXaDdxR1tmFGdqoQPbp+GaaYc&#xA;iJTvK2bsVSTXbyGQC3Td0arN2G3T8csiGEilugaTqWq+bLC0sDxuPUSRZK09NY25s9f8mlcz9JjM&#xA;pAR520zNB9QZ1rhuxVj3nTyVpfmvT0tbxmhmgJa1ukoWjLCjCh6q1BUZj6jTRyiiyjKnz49xcaHe&#xA;XOk38TeraSNGT0Ox8D2PUZyubARIjq5sZ7NjWY7r9xHE4d9h0pSuUnHW7Litl0SBIkQAKFAFB0GU&#xA;M1txF60EkVac1K1+eIUs8/KDWRd+Xn04oEfTH41U/aSZmcE+/LlnVdk5uLHw/wA39Lg5o0bef6rp&#xA;eq2epSrqcUvq8y0srAkPvUuG7g+Oc9nw5IyPEDblxkCNlX14aV5rT55jUzaNzABXmKex3+7GlcF1&#xA;MxpItjM0cg5ROEajLWlRtvlvgTq6PyRxBBXN7cWsrpOQkif3sZFTGxPwo4G6uQGPE70G/UVsnppR&#xA;jZ2+9l0tTh1pORDMGr0r8P8ADKOFjaOsbLU9cuRa2EBlYEFuO6rXbk7dFGW4NPPIaiLRKYHN7jpd&#xA;mbLTbSzLczbQxxF/HgoWv4Z2mGHBAR7hTrpGzaJyxDsVYN+a9nbvZ6Ffuq+rZ6vZAOehjkmXmjf5&#xA;JKqx+QzH1A2B8w52hkbkO+JRnnTyhqOsCS5stQlRxGE/R7N+4cAkmm6gM3v+HbG1uill3EiPLo4+&#xA;LIBzeYaxp8mlkwxLNdX0ENyt1BLCyejbkJ6cqRnlyCtI5DV4qQx+JftYf5fwoUfX5VydhE1Ek8rF&#xA;e9mH5aecNdma20S50qSS2Qsi38UbRRwqqV4yArxJ5ftcqmvc75foNTkNQlCh3uBmj1t6Zm2aEq80&#xA;6/D5f0C81eWMyraoCIgacndgiCu9AWYVOVZ8vhwMu5MRZp8s3F2Zb2W6jRYfVkaQRJXivIk8RUk0&#xA;Fab5yszxEuYEzs7mQokynjIDUEdiDmNIUaZgo+fWLyWPgzhB3K/CT9OQEQniWRT6hHZx3MTsLS4Z&#xA;1jlBqrMho4B8RXfLZ4TEAkc0kGJooC7ufSQtWsjHYHv4nBGNsCWZfknod3qHmltbLgW+mqwcVHJn&#xA;nRkVePhxJNfbNx2ZhufF0i05ZbU95zfuM7FXYqxDz95f0K7FnqOo2Uc4ik+rzyEUbhOpSLdaE0nM&#xA;fU7AnMbPhhKjIN+Dex+Nv2W8/wBV8raRSW3063WLUzb6Q1hHH9qWW6E4lQfRF6jMenHNdqtHGUai&#xA;PVt+lyuHa/OX2UgIruWKaSz1Ffqt7AeMkb/D29857JiMTRG6YytTmnnvLy303TmD3N1IIgRuAXPE&#xA;b9uu57YcWIzkAOZWUqD1zyF5Qby1pckU0qy3lywe4ZK8BxFFVa0JpvvTOt0Ok8GNHmXByT4iySWO&#xA;OWN4pFDxyAq6HcFSKEHMwgEUWtg13+UulSTl7a8lgiJr6RUSUHgGJU/fXNPPsWBO0iA5A1BQ2ueR&#xA;E0WHT9T0exOrmwkY6lp0vFnuoZFAqgI484mHJVHXcb5cOzceMAgcVd/Vtw5RK4yNXyPcx/zT+bNj&#xA;rUmn+VtGkuNEkv54rfU72dPq72kZYK0Siuz9iagDx32tnnBqI2/Q5eDQmFzlUqGw72/Nnlby4jWu&#xA;geWUuri900Fbq0tITcKHlo3qXE7NHGkjd+TdKdABmNrNGMlCJ3DQDOfrmQAe/wDQFfTPyYvZ7J5b&#xA;+7+p3TH9xAFWXiu396VbjyPgrED+Y5THsbbeW7RPMAdt2e+T/J9h5asDDCfWu5qG6uiKFyK8QFqe&#xA;IWubLSaSOGNDn1LROZkU/wAy2DsVdirA/wA6JfR8oQy0r6eoWj0PT4ZK5j6n6fi53ZwvJ/mlnmZD&#xA;gsJ83aVa6h588sQXC8oJoL83cdSBKkHoSRo1OyyEN+vKMkbnH4ubgmY4pkd8f0szgggt4UggjWGG&#xA;McY4o1CqoHYKNgMvApwySTZX4oQmraVZatptxp19H6lrcoUlXofEEHsQdx75DJATiYnkUg08kv8A&#xA;/nH+7FwTYatGbcn4RPGQ6jwJQkN9wzUy7KN7SbhmYt5s/LzzH5WmT0w9/ZSIGN1DE3BX/aRlHIrT&#xA;se+YWp0MoHvHezhkBQvlnQk1nS/M97euoXRtOnkjiLcXW44sYzwBHT02G/fJ6PSg8RI5D7XIgCJw&#xA;sbGTKPImraDF+SeoTa1bJc22nXc0cML1UvOyo8QVkKuCWmpyBqBXtmygIHCeIWG/WYTPUgDqGLx/&#xA;ll56n02x1BNPadL6JZVCOpdA+6h1YgrUUOa2WhyDcDYuLmlGMyAdg9Y/KPyLqnlu0vLrVAI7u+4K&#xA;LZWDemkfI/Ey1HIluxzZ6DTSxgmXMuJknfJ6Dmwa3Yq7FUHrOmRappN5p0rFEu4XiMg6qWFA491O&#xA;4yMo2KZ458MhLuef/l8kN15xuWu4f9yui6TZ6fMXqTHNFJNFKy9v3gQMp/lPucx8O8t+YAc/VWMY&#xA;r6ZSJ+5X/NfyzpskA111aJo0kjuZo+7CMm3Mg3+EyKIqjf4h2GY+u0UMnq5Fo0vqPD+PP9aK8j+R&#xA;9K0jW9QmSQ3k1iY7dJ5F48JXj9SXiASP7uWMffh0mghikTzIYZZHhHmzvNi47sVdirsVedfnT5O0&#xA;XVPKl7rEkaQ6ppsfqxXYorOqkAxOf2gR9mvQ9O9cbU4wYk9Q7Hs7USjkEf4Sh/8AnH7VI7vyTJai&#xA;IJLY3UiSSDrL6tJQ7Hu3xcfkBg0crhSe1YVlvvD03Mp1rsVdirsVdirzz8+Yy/5d3TA7RzwMflz4&#xA;/wDG2Y2r+h2HZh/fD3F6BBL6sMctKeooanhUVzJDgEUWK61LX8yfLMVPs2epNX/WEI/41ymX94Pi&#xA;5WMfuZ++P6WW5c4jsVdirsVdir5n/P0foPzvdXULtaw6nZxSXPpEoJQzGNlYKfi5NECQe+/vms1M&#xA;Tx7dXouz8gOG5fwlJfyuE3m7U9J8s+p/uES8k1C7gIpUrGocP1rVYgq+HI5HHAmQgeXNs1GWMYHK&#xA;Pqqn1kAAAAKAdBm1eZdirsVdirsVdirDtFCj80PMlFAJsdPLEAAk/vdz4mm2UR/vD7g5mT+4h75f&#xA;oTvzdbC68qazblQ3q2NygU+JiYD8csyC4n3NGA1kifMKfk23ni8u2s9ywe9vwb68ddwZbo+qwB8E&#xA;5BF9gMGMelOoIMyByG3yTrLGl2KuxV2Kvnn88/zCudR1SbyvZMY9NsJALxgf7+daGh/yYztT+bfs&#xA;M1uqzWeEcnoOzdIIx4zzPJ6J+Rlhpdn5Fh+p3cV1cXMjXF/6ZqYpXAAiYdVKoo696kbZk6UAQ2df&#xA;2lKRy7igOT0LMl17sVdirsVdirAPz0/8lvf/APGW3/5PLmPqvoLn9m/3w+P3Mw8vyibQdNmBJElr&#xA;A4J6nlGp3y6HIOJlFTPvYnr8x/5W55Vi6BbO+Ynx5J0/4TKZ/wB5H4uViH+Dz94Z3mQ4LsVdirsV&#xA;akkSNGkkYJGgLO7GgAG5JJxUB8lfnL5li86+ZLiSBuOn2oFtYSAfaSNiTIa0+2zEj2pmqy5rnY5P&#xA;TabR8OLhPM7rPyZ1a28qecNPmmb/AEW4Zre7kO1BOAnP2CsFJ9hjiy+sErqdLeExHPm+uc2rzLsV&#xA;dirsVdirsVYXoMvP80/NK0p6dpp618aq7f8AG2UQ/vJfBzco/cQ98k/82Sen5V1mTlw4WNy3OtKU&#xA;hY1rlmT6T7nHwC8kfeHeU/8AlFtG/wCYG2/5Mrjj+ke5c/8AeS95TXJtTsVdiqE1TTIdRt/Qllnh&#xA;WtedtPLbv0IpyiZTTfIyjbOEzE3t8d2JN+Sv5cOyM2mMzq3J3a4uCXNannWQ1rlP5aHc5f8AKObv&#xA;+wIuH8sfLljqJ1HQ3udDu2AEhsJAsbgGtHhlWaIj24/jkhgiDY2YHWTkKlUh5ssUEKASWIFCxpU+&#xA;+1MucRvFXYq7FXYqlHmvyvYeZ9Em0e/klitpmRneAqslY2DChdXHUeGQyYxMUW7BmOOXEOaO02wh&#xA;0/TrXT4WZobOGOCJnILlYlCKWIAqaDfJRFCmucuIknqgLvytYXXmew8xySzC90+GSCGJWX0SsoIY&#xA;spUtX4uzDInGDIS7myOciBh0KcZNpdirsVdiqWeYfLumeYNPOn6kJWtWIZ44ppIeVOz+my8l9m2y&#xA;E4CQotuLLLGbjzY7efk5+Xt1JZt+i1gWz6RwsyCVafZmNeT771rX3ptlZ00D0ciPaGYXvz/GynD+&#xA;Sn5cxLdJ+jC63IAo8sjGKhr+6blyX78A0sO5J7RzGt+TMNM0+DTrCCxgaR4bdeCNNI0slB4u5LHL&#xA;4ihThzmZGyicLF2KuxV2KuxVKrLy5Y2nmDUddjeU3eppDHOjFTGot1KrwAUMK13qTkBACRPe2yzE&#xA;wEekf0orV9Nh1TSrzTJ2dIL6CS2leMgOElQo3EsGFaHwyUo2KY45mMhIdF+n2UVhYW1jCWaK1iSC&#xA;NnoWKxqFBagArQeGIFCkTlxEnvRGFi7FXYq7FVs0scMTzSsEjjUu7HoFUVJwEgCyqVeW/NOleYra&#xA;W408vxgk9ORJAFYdw1ATs3bKNPqYZgTHoylAx5pvmQxdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVSseZtGPmA+Xxcf7lBF65hoacetOVKcqb08Mq8aPHwX6k&#xA;8Jq0s/MfV307yvOkahpdRb6jHyrQeurBjt4KDT3zF7SzeHhPnt82eKNyYF+VOpnSvMtxpVzIqRXy&#xA;BVqaAzIaxgE+Kuwp3OansjPwz4Tyl97dnjs9kzpXFdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVSnzT5l0/y5o8uqX1SiEJHEtOUkjfZRa/f8sqz5hjjxFlGNlgPlr88rfUNXist&#xA;TsFsoLhwkVykhcIzGiiQFV2J/aHTwzX4e0xKVSFW2SxUHqmbVpdirsVUru5itLWa6mJEUEbSyEde&#xA;KAsfwGCUqFlXztF5pvIvO0XnJ3McVzeVkjYcilqx9PgadaQim2czHV/v+Pz+z+xyzj9NM1/MPUod&#xA;T8y2kVvcCezs7ZZSgrxEs1WVvcmMqcPbGYSmADsB+PsXTxYlfwOup2VxE3GQyooPSjBgVNc1mA+o&#xA;e9umH0NncuudirsVdiqB1TXdI0uCSe/uo4UiALgmr79KIKsa/LKsueEBcjSREnk8x82/nVKjS2eg&#xA;2/BHHFNUm7EjcrEV7duR+jNVm7VuxjHxbo4e959qWr6rrLpPql9LfOgpGXaiLT+VFooOajLqckz6&#xA;i3xiAmFj5y812AhW11W4WODaOJ29ROP8pWQMCP1ZOGuyx5SQcYLKtE/Oy+tr2Y+Y4hLZSLW3+pRg&#xA;SI4I2Id1qvEnetc2Wn7VJJ4xt5NUsPc9dsry3vbK3vbZudvcxpNC9CKpIoZTQ7jY5uoyEgCORcch&#xA;WySuxV2KpZ5n1d9H8v3+pogkktYWeJG6F+iA+3IjKs+TggZdyYizSSflx5xk8xaOfr8kK6vbuy3E&#xA;EZAJSoKScKkgENT55RotV4sLP1MskKLLszGDsVdirsVdiqje3UdpZz3ctfSt43lenXiilj+rIylQ&#xA;JUPneeXWvNWoSarq07ei5LW8FSY4wT8KopNAAO/8c5DVauU5bufDHSSa7pwtnZepShDAUqpyrFJM&#xA;g+j/ACb5hs9e8vWl/bSF/gEVwG+2syABw3v3+Rzr9PlGSAIcGQop1l7F2KsW/M+eSLyPqSxTCGWc&#xA;RQKxNKiWVEdRTxQtmJr5cOGRZ4xcg8Su7RJbJ7dBQcaIB2K7jOPjKjbsCNkb5deSa2a4mJaZuKMx&#xA;60RABhzSJkiA2X6+gNoj91fb6QchBMnvWiySy6PYSSkmV7eJpCevIoCfxzucJJgCe4OtlzRmWIea&#xA;+ffzJ1nSNbk0nToY4hCqF7iZSxYuob4BUDiK0775pdd2jPHPgiOTfjxAiywjVNa1fVb767e3cjyb&#xA;cERmSNKAfYUH4fHNLm1WTJKyXJjjAQTLzmeaQmSZyWeVyWYk9SWNTlEpEmyzAAWSQqwelVZ14sQS&#xA;KjwNOuIkQpCXS2EaLwR5EuWbkClGj40P7FAalu9enbLoyjW/NgQUdY6BLJErXUvxsiPRDsvNQ3Ha&#xA;nxLWje+V5CImgyEU+8taX5O0uUy6zp8uomU8XlkdWjjHKoKxgKT71OZul1WGP1xv8dzVPHLoXucA&#xA;hEEYgCrAFX0ggooSnw0A7Uzq41W3Jwl+FXYq7FXlX5n6zHrsZ0az5KbC65TuzcVd4wyFeI7BjsT3&#xA;H05zvaevEj4YHI83Lw4jzYt5ZN35c1UawvpySxxtH6XxEMrkVqRx8Ns1um1ZxSuIbZY7G73XTNQh&#xA;1Cxgu4qUmRXKBgxQsASpI7r0OdhiyccRLvcAijSJyxDsVdirsVeZ/ml5wvRep5U0mT0pbiPlqdwA&#xA;CUicbRLXoWXc+1M0/aetMBwR+Lfhx3uxWCJYYY4l+zGoUH5CmcwS5qVeYoYzFHIR8RJQ+6kVycCx&#xA;kyv/AJx/mn5a5bVJt0MDgdg59Rf+GC/hnSdkk+oe5xMz2DNw0OxV5j+cWrO8+naEqD0m/wBPmkYV&#xA;J9MlEVfpJJzS9sZqiId7kaeO9vPpP7tt6bHfOdctMdJRk0+EMACQW28CajIy5pHJ2qxLJYS8v2Ry&#xA;U+BGMeank9R/K/WbjU/KkRuGLzWcjWpkbcsECstfkrgZ13ZuYzxb9NnX5Y0WW5sGtL9W8v6Lq6Bd&#xA;Rs4rgqCEd1HNQf5W6jKcuCGT6hbISI5PLLn8pPM9teOljLBcWjN+7kkcowWu3JadflXNDk7HyX6S&#xA;CHJjnCXeZ/LS+V1J1i4kka5j/wBxptERkadac0lEjK4C16jqN+vw5DN2dHFG5y36UzGTiFhh7X+p&#xA;PWixxg9BU1+k75ruGLKyradfWUMN22ou8d0PT+qFELo4HMyBjWq/scfpy6OOEo86kokzeXRNZjs0&#xA;vhbGawe1W8F3EQYxGU9Rqk0oVHb7sOTs7LHkLFXYSMgJrrdIKKOe5nFpb28k9wxC+gENd/Go2zFh&#xA;hnKXCAbZGQD07yHpWvabps0OruamStvCziQotN/iBYUPgDnV9nYcuOBGT4ODmlEnZk2bBqdirGfz&#xA;G1XWNL8p3d5pBCXilAHPElVZqMUDbFqZi6zLKGMkc2eMWXgkWt3d07TyzNLcOS0ryHk5Y9ST1zks&#xA;lkknq5sTSpNrDiPjI4HsST+GQEE8TJvybevml7x75bSAo0K2rFgbhmHwjpw+Hrua16ZuOzJCOSjK&#xA;vLvaMoscnu+dE4rsVdirsVfPWoXbXP5h65LKfj+tzQLXwhJjX/hUzkO0ZE5Je9zsPIJlmub0r8wx&#xA;qbRHrRlegPzBr+rJw5sZMz/IW5sBpuqWSpx1COdZJ3JrzjZeKU/1SrffnUdlSBiR1cLMN3qmbVpd&#xA;irw/8z9cil87T289xGYbCFIrdV6q0gDy8mH7Vaf51zmu1pmWShyDl4KAYvPdW0kLokqs1AaKQe/t&#xA;mp4SG8lkNskaW8axnkgUBW61GVlkF0qo0Tq+yMpDH2I3xVk/5K6oht9R0ppF5K63MMdKMQw4SN8h&#xA;xTOk7Gy7Sh8fx9jhZx1enZu2h2Kqd1C09tLCsjQtKjIJYzR0LCnJT4jqMEhYpXhHmf8AKvzDoFq+&#xA;oRS/piIyVnaONvXVSK+oy1eo8d9s57VdmziOIHicqGUHZj0mlaxHpaaq+n3I02QMyXfpkpxXqxp9&#xA;lfAtse2YB0mQR4qNNt711XN5Z16aeKxe1EE11ZPqMAmYLWCMkHb+eg5cfDMiGgybe62QiTG/OmZ+&#xA;SdVudR8jReUfL7NdajfwzNqN3LUW+nQXBZSGIrykK1KIO5rsM3GmBGPgG5+5lLT+FPjnyB28/wBj&#xA;1Ty9oFrolh9Whkknlkb1Lq7mPKWaXiF5sen2VCqBsAABmdCHCHBy5TM2meTanYq7FXjnnLzG+t6x&#xA;6EiGC1sneONCTVmDULN2BNM5LtHVnLOqoRc/Dj4Qxe68r6TcymQBomY1YRMAK/IhqfRmCMsgzMAv&#xA;tfLGkW+5jMzeMp5fgKD8MTlkUiIRlxBCsA4UiEW8YWigewpkATaXrPkrzavmC1lDwmG6teAmoeSs&#xA;GBowP+xO2dfoNb48TYohwMuPhLI8z2p2KuxV83+ebWXSPP8AqqNVBcTm6hfsfW/eVFf8piM5XtDF&#xA;WSXz+bmYjsmVpqVtLbq7yqrgfvASBv365qzFvBSXVtR+sSEKf3EdeJ8fEnJxixJZP+Q/qv5n1SUf&#xA;3P1U8v8AWaVSv4A5vuyh6z7nGzcnuOb1x3YqketeSPKusvLLf6dDJcyqVa5C8ZdxQHktCSOxOUZN&#xA;NjnuRuyjMh423lLTmGowWC/V9Q0u3tfr8Mjlv9KNzcW8qL1oJeMTx/5NPGuajPoRKJ4PqH7XYyhQ&#xA;BH8RNe6gfs3UL/yj5u0cxme0ljZ0kkVYmWUiOIqHZhEXooMi9c12TQ5YjeP6fuaozB5KOk6B5i16&#xA;5SK0iklMsbSpJIeEZjU0JDNRSOW23fI4dJkmaiEylXN6N+WfkPWdG1GbU9VVbdzEYYbcMrseTAlm&#xA;KFlA+HbfNx2boZ45GU9tnHy5ARQej5uWh2KuxV2KpFq3kbynqiS/WdMgWaUMGuoUEM/xVqRLHxfv&#xA;4/PK5Yono3w1OSPIn9Dxf8wLrX/KcuhWdzbs50Zbm1sNSBJiu7G4T0xG5p8EsSfCR9OYOYyhQ7vu&#xA;dzpYwy8RB+qiR3Efoen/AJNafb2n5d6U0UKxSXKvPOwAq7NI1GY9/hAHyzL0wqAdZ2hMnMfJm2Xu&#xA;E7FXYqx3zt5z0zy1pU0k1wiahLFJ+j7cgsXlCnhVR0XlSpOY+p1Eccdzv0ZRjbwA6lq1zPLd31y0&#xA;9zcNzkdqHc/gPkM5LLPjlZ5ubHYIy01No/tMQ3dqVB+jKTFmJKtxrBZaBq+wFB9OARTxIRtSmbqA&#xA;T4mpw8LHiZR+V/nObSteew1S6hh0q9UsssgCBJV+z8dB1G3xbZuey9QIHhOwLRmje73MEEAg1B3B&#xA;GdE4rsVdirB/zS8iWvmHS21BG9HU9Oid4nC8vUjUFzEwG/X7J7fTmDrdKMkb/iDZjnTwaC/hMYEh&#xA;4sBQ+B+7OXlAuXa1jPqF1DZWaNJLO6xxINi7ueKqK+5yzHjJNdSgl9A/lj5Hfyto8n1sq2p3rK90&#xA;VNQgUHhGD341NT4nOm0Wm8KO/wBRcTJOyzLMxg7FXYq83bRU1H84b6jmKytrSyvb6BRtcXMTP9X5&#xA;nwTZvmozF4byn4Ox8Th047ySB5Dqmf5nX50mztNXZOdtGt1Z3LAboLuBljYnspmRFPzyec0La9HH&#xA;jJj12PyP6kL+SthKvk2z1O4k9Se7iWGFR0it7ZnSNB83LufdvbBph6bZdoy/eGI6feWf5kOA7FXY&#xA;q7FXYq7FXmH/ADkPEr+RbdzWsV/Ewp7xSrv/AMFmJrPo+Ls+yT+9Pu/UyD8o5xN+XOhuKbQum3/F&#xA;crp/xrlunPoDj68Vmky/LnEdirsVeMfnR5O8wXWsprdnA95ZGFIpFiBd4ihPVBU8TWtR7199N2jp&#xA;5mXEBYb8UhVPNbVtTeQW0drJPPsBGiMX36fCATmn8Ek7N/E6S8ngmeG5gaKWM8XjYFWUjqGVt65C&#xA;WKtlt1tcX17eLZ2Fu1xcyAmO3iVpJW4gkkKm5oBXpk4acy5AllRrirZPpfJfnm20ldSuNJlMBYgx&#xA;hf3yj+Z4hVwv0fPLpaDII8VFrGQMfjstX1S6W3trSWeetFhiRmYE+IAyvHiJNAWUkvpfyPpWpaV5&#xA;T03T9SfnewRkS78uNWLKlf8AIUhfozqNNCUMYEubiTNlPMvYuxVxAIodweoxV4h+Zn5U2mkWN/5i&#xA;0y4EdlDSSWwdTVebhaRuO1W6EbeOabVdngXKJ27nL09zkI9Sm35P/l7pn1Kw82XM31meZDJaW/Gi&#xA;QtUoWO55MKbdh+OW6LRCNTJssdRcJGHc9ZzaOM7FXYq7FWA+WJuX5uec42IqsGnBB34iAE/i2Y8D&#xA;+8l8HPzD/B8f+d97JfOdvDceUdaimQSRtY3BKsKiqxMQfoIqMtyi4n3ONpyRkjXeGMfkVcGX8uLG&#xA;M9LeW4jHyMrSf8b5TpT6A5PaYrMfg9AzJcB2KuxV2KuxV2KvHP8AnIzX7VNH0/Qo5Fa7mn+tTRgg&#xA;skcaMq8h25NJt8swtZPYB3HZOI8Rn0qk0/ILzJp935Pj0QTKNQ015eVuSAxilkMgdR3Xk5B8D8xk&#xA;tJMGNdQ1dqYSMnF0L0/Mt1jsVdirsVdirHfOb+VNP0m51nXLKzuPqsZMRuYo3d3A+CNC4Jqx2GU5&#xA;owq5AFuwY5TkIx6vmbyD5jg0TzvputXhIgimb6yyivFJkaN2oP5RJXbNZhmIyBem1OHjxGAfW1pd&#xA;2t5bR3VpKk9tMoaKaNgyMp7gjbNwDfJ5SUSDR5quFDsVdirsVdirEvzYvbG1/L7WTeOFWaAwwqTu&#xA;0zmkYA7/ABb/ACGU6ggQNuXoYk5o0gPyPlMn5baaDIH9N7hKDqo9dzxP31+WR0v0Bn2kP3x+H3M8&#xA;zIcF2KuxV2Kqa21sk7zpEizyACSUKA7AbDk3U0wUmzVKepWMOoaddWExZYbuGSCRkNHCyqUJU70N&#xA;DtjIWKTCXCQR0S7yn5V03yvpI0vTmla1EjSr6zKzAvSoqqrttkceMQFBsz55ZZcUuac5NpdirsVd&#xA;irsVdirHL/8ALvyVfC8NxpFu01+G+sXAQerVv2kc7q1d6jKjhgejkR1eWNVI7L9L8geT9M+pNbaV&#xA;bi5sERILto09aqCgdnABZu9cMcMRW3JZ6rJK7Josgyxx3Yq7FXYq7FUp1fyn5a1m5iudV02C9ngH&#xA;GJ5kD0WtaUOxHzyEscZcw24884CokhLI/wAsfI8esT6oukwGS5h9GS2aNDbdal1hI4q5pQkfxOQ8&#xA;CF3TadZl4RHiO3zTrSNB0XRonh0qyisopG5SJCoQE+JplkYCPJpyZZT3kbR+Sa3Yq7FXYq7FWO+a&#xA;/IPlvzSE/S8U0jxgCJknlQJRqkrHy9KrdC3CtO/TKsmGM+bkYNVPF9P3N+UvImh+VFnTSDcLFcHl&#xA;JDLM0kfKv2gh+EGlBXrQY48QhyXPqZZfqpkOWuO7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqtkkjjjaSRgkaA&#xA;s7saAACpJOJNKwDWfzo8r29ldHSna+v4qLbxFJEjkYmleZH2V69q9s12XtLGAeHctoxF59qX5oef&#xA;7+ZZUvI9PVPswWyDiT4sX9Rj99M1WTtTITsa9zaMQZz5O/OHTrxLPTddD2+rSt6LXIQC3dq0Q1Bq&#xA;pbavw0r7Zs9N2jGQAl9X2NU8RHJ6TmzanYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUr8zav+itGnuxT&#xA;1QOENenNtgfo65ia3UeFiMhz6e9sxQ4pU7yxqj6lotvcy/31Ckp8WQ0r9PXHQ5zlxCR59Vyx4ZUm&#xA;mZbW7FXYq7FVOO6tpZHjjlR5IjSRFYFlP+UB0wCQKsR1/wDNjyho9xLaGaS9vIX9OW3tULlT3+Nu&#xA;MZp0IDVrmHm1+OBq7LZHGSn2geZ9D1+3M+l3Sz8QDLF0kjLdA6HcZkYs8MguJYGJHNNMtQ7FXYq7&#xA;FXjf54+YfXu9P0OyuXIRXlv4om+BuRCxq5B6rwbY+OaXtTPyiD72/DHqwjSbSwYtHM3pqAOArSpP&#xA;Xc5z8iXKAC5XjsL9tlnjWo7HY7/fg5heRQ9xbTz8rqNGiRZPUSRNuBBqKH2ycZ8JQRbL9K/OPzPY&#xA;ahC+rlL7S6BJlSNUm2FOakcRyrua7H2zb4O1J36tw0Swjo9n0nVbPVtNt9Rsn52t0geJiKGh6gjx&#xA;B2Ob7HMTiJDkXHIpF5NDsVdiqF1HVNP063a4vZ0giAJBcgFqCtFHVj7DK8mWMBcjQSATyYufzN08&#xA;v8FlMYq7MxRWI8eNT+vNSe28d/Sab/yx72TaRq9nqtkt3aMTGSVZWFGVh1Vhvvm0wZ45Y8UeTTKJ&#xA;iaKMy5i7FXYq7FUJqOr6VpiRvqN3DZpK3CN53WNS1K0qxAyE8kY8zSQCXl/nHXdR1DzxJoqSNJo0&#xA;untNAYyHjLRRPL64I2+0DGTX8c1OsBy5OC/TX4P6HKwCqPmq3mp+aLFLbR/L8czWUSqst/HEW9a4&#xA;feQK5Vh8DHiaHYjrXMbKc2EDHiuu+uZLMxid5c+5n/lez1m20xf0xctcXsh5MrUIjHZAR19zm40e&#xA;PJGH7w3L7nEyEE7JvmUwdiqTebfMWm6FolzdXtwIGMbrbqCBK8nHYRgndqn6Mpz5YwiSSyjGy+aN&#xA;OEoEspZg0uzNUgsCamvjU5yU5kHYuYAjbOzEkvpRAAsakn+pymUu9kAya0023tqsgId04S0JowqD&#xA;Q+IqMr4zyZ8IZj+X+sSWmrLp0kp+p3akRRGpVZl3Xj/LyUGv0Zt+yNURPgJ2P3tGohtb0zOmcN2K&#xA;pN5x1mz0jy3fXl1M9uvpNFHLEKyCSQcU4Co+IE165TqMghAksoiy+btCggkctcy8Fdtz3qPFu3XO&#xA;PylzYhG3tvbQyAQziYHqAOnhv0OVgsios8JQCNHaRAWmI+IBR+0Qo+EDxOTjCR5ItEWutSxW4jjM&#xA;bRCo3Hj8qZAwSJILVRFEjAusvqCoKdOR3/DJw3KC9c/IldbXy/di8DjTfVU6aJAQN+RlKV/YLEdN&#xA;q1986Tszi4Df09HEy1b0zNm1OxVSvDMLScwV9cRsYqAE8+J40B264JXWyh8xz6jq1zcBtVuJ5r+F&#xA;nDLdM5dGJ+IBX+z0Gwzjs85yPqJc6IA5Mk09719OjuntpWgdjHHOqEoXH7IPjlH5eZFgGmwSCYaT&#xA;+al1oVv9VisoJ7NGZ2JZo5GZjU1f4l6bD4c2Oj7QOKIhwghpyYxI29S0HzhomtJCLWYpdSxrKbWQ&#xA;FXWoqVqRxLL34nN9h1uPIeEH1dzjSxkbp3mUwdiriQASeg32FT9wxV5j5983eVtd0e50eeK5Vlbl&#xA;FclFX0pkqFbi7Ke5BBptmj1faOKYMKk5OPDK7Yb5N0bXrDTdS1BL2NLRrO6FqAS6tOkXqPC6fCQJ&#xA;IFY1HdQd+NMGgB4TIHbf5uTCuIAjqPv5/NOrzV7vy7puna3csJ7GzSG00u0rx9a4WEerKwoT/ehy&#xA;x7n57DPCccgyHeMeQ86/BJXIOIkAbnn5IbTvz281XF5HD+irW69VgsVvAsyysSdlBLSVP+xyce08&#xA;hNUC4pwgPZ9Pnup7GCa7t/qlzIgaW25iT02P7PMAA0zcwJIsii0FEZJD56/N8+YP8XF9ZQCzHJdM&#xA;EZXibcMSDsa8qn4q7/RTOd7R4+P1fD3OTiqkv8uaQutaglkl3DatKp9B5iQHk6LGtNuTHpX9dAdf&#xA;p8HiT4br3tspULTi2sFszEI0dorm2guA9CefOFJzUCv2RJ9H44dVglCXCLogfHZtqjX47kZJHLFM&#xA;0M0bRSqFYo44tRwGFQdxscxMmKUNpCkg2tJkHxRuY5FIZHU0KsNwQRkYyINhSHsmg6ouq6Rb3yo0&#xA;fqqeSPSoZGKN091zt9NmGXGJDq62caNI/L2KXeYfL+na/pU2magrNbzUNUPF1ZTVWU70IyvLijkj&#xA;wnkkGi8V82/lTPpUwbTTcvbAkPI0ck4AqSspMCEhQpo/w8gw2BB21Gfs6vpc3HUhz3Q1p5V0NvSE&#xA;+rPqDNHMV/R5VlLpHzQEAeooFCJFZQ4+1TjyZYQ7PgOZv3NvhS67e9kd7Boekana3/l1If0Pfaff&#xA;3MDwtzkmmaGKCO2Xdn5epIvEHfk5GZ4xwgbgNiCnFD0kS+oSj95N/jud5hsfLc1nC2q26SehIts8&#xA;tktWlvJfjlghaOhlaFI0gSm3qPVh8LZHLhhIeofJjHFxHb3/AA7z7+fuRVj+TWm6rwvL6O40mJgO&#xA;NjHIHYDbasgdl2HVjVia8U+zkR2bCW/0uPlyAbDf8fj9r0/TtPtNOsYLG0T07a2QRwpuaKooNzuc&#xA;2MICIAHIOMTaIySGO+fLzzTaaCZfLVv9Yv8A1FVwFDukRB5OiNszV4ilD8sxtVLIIegbsoAXu8Dv&#xA;NSvZtXebUXmfVBLSUScvXEgb7IXqKHoB07Zy2Q5DPe+JzBVMle3kcG0vbdzdseMtq4IlZm7U+1yN&#xA;coOOYnRB4rbLFJBomui1eG1nblpE88RvNPDPw3PFyu5dX4swrWv3Cmw0+pkJcJHoPREe4c2S6Bp+&#xA;n6bq9lcXECBbeZPrJuvsRrISjGQyVC8RU1bwynScYzA8O177IlC47Ks179V1G4mt5mhZJZHhkTnE&#xA;xRySrLXi1GRtvEZRn4seY0aN9GQG1F7DoZvjpFo1+4ku2iVpWApUkV++nXOw0/F4Y4vqp186vZG5&#xA;cxdirGvMPlbylqdzyvXS2vX2MkcixyN81aoY+9MwNTosOQ3LaXk2wySHJ5Lf6tptpDqemabZy6Xr&#xA;Wnreme1llM1tdqtvLDLIRROEscUjuhC0alDWozDwzjC4AESF+dufp5mUgJbg1v3b2iotc8t+WvLm&#xA;lwalpq+YtS1a0juZUkYCK2gm/fRwRkrJwP7zmwABJPL+XLcuaGOIEhxWx1RlKRraIPz6WznyTf8A&#xA;kC2sY763srXQ7yWoaKaRGnUf67EsAfA0+WWafPpwLHDE+9wpRl72cW91bXMfqW8qTRno8bBl+8Vz&#xA;YRmJCwbayKVMkhjvnryfB5p0R7EukF0rB7a6aMOUIIJHZgGGxocx9TpxljXVlCVFgGj/AJS6noN4&#xA;2pX88V9YadwuY7aENzl4MGkFCNigBKrvzNBtmuxdmcM+KW4DfHIJbd6ZeXL6L9A6Y0kgRIRby3Xp&#xA;jl/odtpdo80ajflyuPSjp1NaZnQOw/HQOVmj6z8fmZSr7LV9V0L9IXEoeMt5hk9NY41f4VkYm4n9&#xA;RqU9OKOdIwf9UdWGYus0UcoJ/j/BahKhY+n8AfOmP6X5f13VdSOnxwtaNCT9allU8UoaHtufAd80&#xA;WDQZMk+GqrmyllAFvT/Kvl0aDphs/rDXLvIZXcjiAWAFFWpoNs6fR6XwYcN24WSfEbTnMtg7FXYq&#xA;k+t+UPLmtsJdQska6T+7vIyYrhNqDjNGVkHyrTISxxlzDdj1E4cjt3dHzv5q8sapZfmcnly2v5Sb&#xA;q4iW0vJD+8C3gUNJIVpycA0Zurcc1mSBGTht6DBmjLBxkch9z3fy5+XOg6JNb3PO41C7tE9O0mvJ&#xA;PUECkUIgjAWOKv8AkrXNhDCI+bo82rnMEbAHu6+9lOXOK7FXYq7FXnn5gprD3xH1KmnUVUuYkDvK&#xA;SKkSFauAp6Dp3+Wg7W8YmgPR3jr73KwcPxYv5ms/O94umXiQ3s8tpEwU29vOlxGA1auxWMOwUDjx&#xA;YlvDqxJwZpwjIk8Q8t26EIG9wPeVnnjVNDvNe8u39vdRNeiOQ3siJ6R+t27IIw0Mg9SOQNKxo+/2&#xA;fAZZ2hKQiDD6/JuwYpRhIEf2Hnuoeb49QtdBh1KSxlWe+uWXUtauRyuGGxhjiZvjii4rxNAAaZjz&#xA;yZfABIPEeZPPyaDk/hvYdAm/5P6Tc3V1cXd5YCbS2iBt7q4QMPWVwB6PMb7cuRXuBlnZenJJlONj&#xA;pf6GnLLoHr2b5xnYqhNX0yPU9NuLCSWWFLhOJlgcxyL3BVl/2j32yGSHFEhINPAPMP5P+crC8dbW&#xA;A6nbMxMdzAV5Gv8AOjHkD49R75ocugyROw4g5McoRuoaHrPl3yRNPr+lqt7JFPDaaqjLJJDHNbtC&#xA;Le5A5UDq5EbVNDRfh+HMrHhMIXIb97l6URlkHCfh8ejJ9FkvNY/Lqw0XyrbK/oWdv9fv5TxjE7Ir&#xA;zQQk/wB5JyJ57hVG1a7ZbljLJh4YDp+AwzxEcplPvNBIbPyJ5rln9I2U3M7GSUKiD6dlzRDQZpGu&#xA;GkSzRen+TvJkGgRNLI/rahMvGWQVCKOvFB/E5v8AQ6AYRZ3kXDy5eL3MlzYNTsVdirwa38yab5O1&#xA;XUdA1aN1+oXkP1ONFZmmtY5Z7yIggcQXb6vGRWlAOwOa8TECQfx1/U704ZZoiceo+3Yfrep+RdKv&#xA;orGXWdXTjrmssLm8Qinoof7m3AO4EaUBrvXMvFE1Z5l1epmCeGP0x/Fsmy1xnYq7FXYq7FXYq+Y/&#xA;M3muG+/OaLV43rZ2eo20UbA0BjtpFRzXwYqx+RzVTyXlvzelw4DHTcPUxP2vpzNq807FXYq7FXYq&#xA;7FVG9uRa2c1yUaQQo0hRd2IUVoPfIylQtQ8D1nzVoGp/mLY+ZobMvFYNSYD4PWMUjmGah/aCcOvh&#xA;7DNFm18fEEgNg7LHlkMRh3vZ/KOqvrPl61upoSoeNEb1Ny7KoDtQ9i9abn79s22ky+JjBIcCYop2&#xA;AAAAKAbADMlg7FXYq7FXYqxX81FVvy810EVH1YnfxDAjKdR9BcrRf30feu/K9LdPy+0IQKEQ2qMw&#xA;Ap8bVLn6XqcOD6AutJ8aV97KMtcV2KuxV2KuxVTktbaSVJZIkeWP+7kZQWX5E7jBSRIqmFDsVdir&#xA;sVdirsVdiqCGh6ICCNPtgR0Pox/0yPAO5n4ku8o3JMHYq7FXYq7FXYq7FUH+htI5cvqNvy8fSSu/&#xA;0ZDwo9wTZRaIkaBEUIiiiqooAPYDJAUhvCrsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirDPOH5naZ5dvWsBAbq&#xA;9jRXlXmI0QP9mrEMd/lmHqNWMZqrLsdJ2ccseK6DFT+eGoVPHS4QOwMrH8aZifylLuc/+Ro/zinX&#xA;l784bHUL22s76yNo91IkEMqSCRDJIwVAQQhFSw8cvw68SkAQ42o7JMImUZXT0PNg6h2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxVi/m/8yPK/laWO1v5ZbjUpl9SHTLOMz3LJWnMqKBF/wAp2AyvJljDmW7D&#xA;p55D6QwO5/5yHnFzS08rTSWld3nu4opqd/3caTxg+zSjMY66FucOychDL/Kn5u+UfMV7Fp0Zn07U&#xA;p15QWl/GIjLT7QicF45CPBWOZGPNGfIuHm0s8f1BmuWuO7FXYq7FXYqoXd/Y2aq13cRW6saK0rqg&#xA;J9uRGQnkjH6iB70gE8lZHSRFeNg6MKqymoIPcEZIG9whvCrsVdirsVfLP55ASfmVqqvuFFrx+i3i&#xA;Yfjmp1J/eF6bs+IOAfjqw4alqAFPrMtD/lt/XMbhDsLTDyHSHznoTO/w/pW2ldj/AJVyrE5bjPrH&#xA;vDjZ41il7pPsfN08k7FXYq7FXnUf54eXTK6SabqCKpIEnCHjQdyWlXMD+UIebtT2Rl7x9v6kVD+d&#xA;PkiTZpZompXiyoT8vgdsmNdj8/kwPZWby+bEPMH5w65qWq29roTR6LpkcgebUbsLPJIqGvH0o/Uo&#xA;rdKDc/zLlMteCdtg5ePsrhiTL1S7gye5/O7yxExWKyvp6dGVIlU/8FKG/wCFyw9oY/Nx49kZTzIZ&#xA;R5P81W3mfSW1G3ge3RZngaKQgsClDX4dtwwzKxZBOPEHA1GA4p8JTvLGl2KuxVB61qQ0zRr/AFIp&#xA;6osbeW5MYNOXooX417V44CUxFmnyek15qN1canqEom1DUibu/nJ5Ahvi4gfyRj4EA2AG3fNDnyGU&#xA;rev02EQgAF1bam0TuvXnyoaCv7IqDT3OVbuQsuIUkiMJchJB6lvOCVaORd0mU9VeNupH9BkoSINh&#xA;hkgJRovpr8u/Mv8AiPydpmpyNW8aIQ6ih2KXcP7udSO37xT9Gb+EuIAvHZsZhIhkeTa3Yq7FWE+f&#xA;vNs9pDDa6NeR/WmdlufTZHkQKNhTfjXNP2nrjAAY5C+rkYcd8w8/1K61XWJxdajNzmVRGtQBsvst&#xA;AK9c5/PqJZDcjZcqMAOSL0fzj5h0K2FrblWtlcsElUsN+oBqCAaV2zI0/aGTFHhjyYTxCW5Zvov5&#xA;reWb0+hfyjTb31FiEMpLKxcVVlcCnHsS1KZ0Gn7Rx5BZ9JcWeIgs0zYNTsVU7i5t7aB7i5lSGCMc&#xA;pJZGCIoHdmNABgJpIBJoPkz8ztdsdd886pqVg3OzkdI4ZP5xDEsXMezFKj2zT55iUyQ9Xo8RhiET&#xA;zYvlTkr4ZpIZkmibjJGwdGHUMpqDiFIvZ9Z+R/zE0DzXaRLaXCjVBAJbywIYPGQQr0qKMvI9R4jN&#xA;xizRmNubymp0k8R3Hp72U5c4rsVQ2qTSwaZdzRAmWKGR4wOpZUJFPpyMzQLPGLkB5vkpoZD9qO2a&#xA;nRObMv3eoRnOW9q36t4BxCW3HwpGKf8ABMDjQVYwua09G2J/1Yz/AMRZsOytoJwd4bZiexRAB9xG&#xA;Oyvc/wDnH9XHk+/LoE5anOQF+zT0oR8NCRSo7HN1o/7sPLdpf3xemZlOA7FXYqwn86bi7t/yv197&#xA;XlyaFI5in2hbyzJHcHbwhZ8ry3wmm7TgcYt8/uI0uZIxRAQ8cRGy8WblGNuxXOeeyCly3KkH1AQT&#xA;FSpqopSnuMKqj1SJIio5k8mWvQsRRPppv4E4Fe1/84/Ws0fky+vGqYNR1W6ubRqUDRBY4Oa+zNCz&#xA;ZvdLEiAt5TXzEspp6ZmQ4TsVSTztdXNr5W1Ca2JWYIqhl6hXdUYj/Yscw9fMxwyI5tmIXIPH7W2S&#xA;NQ/VyNz23zjCXYIjAlbKgeNkPcUwqxrVbMOObACSPapFSKnb8cthKmEg9c/KXzdrWu2moW2ruJ7j&#xA;T2i4XQUKXSYNQMFAFV9PrnU9namWWJ4ujhZYAM+zYtSA1vQdI1ywbT9WtUu7RyGMb12YdGVgQyn3&#xA;ByMoCQotmPLKBuJosR1T8l/Jdxpb6fp1v+ivVkV57mIetMyLX92HnMjIpNCePhlMtNEihs5cO0cg&#xA;lcjxfjyUn/InyAdGfT0t5luGoRqRkLXAYHY/77p2I4U+nfB+UhVJ/lPLxXfw6J95c/L7ytoWiDSY&#xA;bKK5icf6VLcxpI87VrWSooadh0GWQwxiKpozaqc5cRNJvpuiaNpauumWFtYrJQyC2hSENTpy4Ba0&#xA;rk4xA5BpnklL6iSjckwdiriARQ9MVYbL+UXkSSR3+pSJzYsVSeZVBJrsA2wzFOjx9znjtPMBz+xa&#xA;fyg8jn/j2n/6Sp/1F6YPyWPuT/Kefv8AsVJPyl8isKLYyxeJjurla/R6lPww/ksXcgdp5/532BDT&#xA;fk15OcNwN7FXoUupdvlyLZE6HGzHauYdzI/LHlnTvLemfo6waV4TI8zPO3OQvIaklqDMnHjEBQcL&#xA;NmOSXEeabZNqdirsVUrq1tru2ltbqJZradGjmhcBldHFGVgeoIOKg0+f/PX5T635biafSo5NX8uo&#xA;W9OKNWkvbKM7qhUcjPCvSoHJR4gZrc+j/ii7zR9pcoz+bBotTE1q8sczyWUPwz3Cx3HpREDpJKiO&#xA;EPs1DmD4EudO1Oqx3Vsr8nflZ5h82r67ltJ8vyEq19KhW6uEOz/VomA4hgSPVenWoU9czMGjJ3k6&#xA;3V9pAXGG76MsLG1sLG3sbSMQ2lrGkNvEvRY41Cqo+QGbQOhJtXxQ7FVk0MU8LwzIJIpFKyI24KkU&#xA;IOCUQRR5KCxZvy30Yz8lnmSD/fIKmnsGIJp881B7FxGV2a7nI/MSp0n5caMYnWOedZD9h2KsF+gK&#xA;tRiexcVbGVr+Yk2Py30SgrPc1puQ0fX/AIDD/IuHvl9n6l/MSUf+VWeWn9b6w1xP6oovJwvDwI4B&#xA;an51Htkodj4Y87LE55FPtA8uaToNkbTTovTRjzldjyd2pTkzfR8sz8GCOKPDFrlInm//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:09677068FBD3E411A45E9CE2833E86E0</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:09677068FBD3E411A45E9CE2833E86E0</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0D9B5FF82AD3E41185B9AFFC89C74A3A</stRef:instanceID>
            <stRef:documentID>xmp.did:0D9B5FF82AD3E41185B9AFFC89C74A3A</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0D9B5FF82AD3E41185B9AFFC89C74A3A</stEvt:instanceID>
                  <stEvt:when>2015-03-25T23:11:44+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:09677068FBD3E411A45E9CE2833E86E0</stEvt:instanceID>
                  <stEvt:when>2015-03-27T00:02:27+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -412.047 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 412.047 li
381.676 412.047 li
381.676 0 li
cp
clp
[1 0 0 1 0 0 ]ct
151.755 293.153 mo
151.44 294.116 151.159 295.093 150.934 296.083 cv
150.823 296.583 150.724 297.083 150.674 297.601 cv
150.652 297.86 150.639 298.123 150.677 298.405 cv
150.716 298.649 150.698 298.853 150.676 299.106 cv
150.56 300.076 150.282 301.055 149.992 302.01 cv
149.697 302.941 149.361 303.973 148.971 304.762 cv
149.682 305.172 li
150.134 304.119 150.346 303.19 150.613 302.181 cv
150.851 301.185 151.076 300.189 151.14 299.141 cv
151.151 298.893 151.149 298.583 151.09 298.329 cv
151.043 298.112 151.031 297.865 151.034 297.62 cv
151.043 297.127 151.101 296.626 151.168 296.127 cv
151.314 295.131 151.519 294.138 151.755 293.153 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.6 .247059 .160784 rgb
f
154.081 335.214 mo
141.856 335.214 li
141.856 335.214 145.961 327.411 145.868 321.892 cv
145.826 319.314 145.365 315.693 143.087 313.589 cv
141.309 311.946 120.597 306.747 119.818 298.705 cv
119.818 298.705 119.831 297.479 120.711 299.921 cv
121.27 301.473 124.581 304.966 131.044 307.293 cv
137.818 309.733 144.593 310.852 146.371 313.042 cv
148.15 315.231 153.486 313.728 153.486 313.728 cv
153.486 313.728 150.75 319.61 154.081 335.214 cv
cp
f
155.63 313.771 mo
157.39 313.204 162.52 312.905 165.395 308.253 cv
168.267 303.599 172.236 299.696 174.289 298.705 cv
172.92 298.705 li
172.92 298.705 168.267 302.64 165.805 305.652 cv
163.343 308.662 160.741 310.578 157.457 311.126 cv
154.172 311.673 149.771 313.452 149.361 315.779 cv
148.951 318.104 152.567 318.242 152.567 318.242 cv
152.567 318.242 153.095 314.587 155.63 313.771 cv
cp
f
149.063 292.607 mo
149.063 292.607 148.603 295.159 148.788 297.44 cv
148.973 299.723 150.263 305.379 149.891 307.842 cv
149.518 310.305 149.361 315.779 149.361 315.779 cv
147.373 314.957 li
147.373 314.957 148.059 314.044 148.059 311.033 cv
148.059 308.022 148.996 308.392 148.665 305.195 cv
148.332 302.004 147.993 295.982 148.665 292.059 cv
149.336 288.135 149.063 292.607 149.063 292.607 cv
cp
f
148.665 314.145 mo
148.665 314.145 148.364 309.675 144.774 308.475 cv
138.797 306.475 136.016 304.1 134.647 299.538 cv
133.828 299.538 li
133.828 299.538 135.534 304.276 138.797 306.475 cv
141.763 308.475 146.326 310.76 146.701 313.371 cv
147.253 317.208 147.839 315.605 148.665 314.145 cv
cp
f
148.665 313.862 mo
148.665 313.862 150.066 308.833 151.983 307.654 cv
153.899 306.473 154.261 298.628 154.081 294.795 cv
154.81 294.795 li
154.81 294.795 154.899 297.076 154.81 299.175 cv
154.72 301.272 153.988 305.104 154.081 306.473 cv
154.172 307.842 152.718 308.299 151.755 309.85 cv
150.795 311.4 150.889 315.14 150.889 315.14 cv
148.665 313.862 li
cp
f
164.026 298.081 mo
164.026 298.081 160.283 302.274 160.193 304.966 cv
160.102 307.661 151.755 313.497 151.344 314.137 cv
149.958 313.224 li
149.958 313.224 151.257 311.875 154.081 309.85 cv
155.997 308.475 158.355 307.08 159.188 304.966 cv
160.28 302.204 161.925 299.173 164.026 296.802 cv
166.123 294.43 164.026 298.081 164.026 298.081 cv
cp
f
138.238 310.311 mo
138.482 308.625 137.431 307.273 136.287 306.462 cv
135.712 306.028 135.041 305.746 134.467 305.428 cv
133.899 305.104 133.359 304.685 132.862 304.229 cv
131.862 303.319 130.999 302.249 130.221 301.128 cv
129.47 299.993 128.698 298.831 128.26 297.531 cv
128.634 298.856 129.349 300.06 130.049 301.241 cv
130.778 302.409 131.596 303.535 132.579 304.526 cv
133.071 305.023 133.602 305.481 134.207 305.869 cv
134.814 306.244 135.409 306.528 135.915 306.952 cv
136.94 307.722 137.676 309.004 137.44 310.115 cv
138.238 310.311 li
cp
f
149.64 306.483 mo
147.992 304.511 146.682 302.175 145.774 299.723 cv
144.866 297.262 144.411 294.615 144.538 291.968 cv
144.276 294.604 144.591 297.304 145.384 299.854 cv
146.188 302.407 147.373 304.83 149.013 307.011 cv
149.64 306.483 li
cp
f
143.422 308.184 mo
142.691 307.466 142.039 306.577 141.702 305.609 cv
141.521 305.115 141.507 304.645 141.51 304.068 cv
141.498 303.511 141.461 302.956 141.398 302.402 cv
141.146 300.189 140.506 298.063 139.757 296 cv
140.378 298.106 140.879 300.261 140.988 302.435 cv
141.017 302.979 141.019 303.523 140.997 304.062 cv
140.959 304.582 140.939 305.229 141.113 305.786 cv
141.438 306.924 142.064 307.896 142.841 308.766 cv
143.422 308.184 li
cp
f
132.477 308.079 mo
130.727 307.622 128.976 307.183 127.216 306.768 cv
125.455 306.362 123.697 305.949 121.89 305.685 cv
121.419 305.616 120.996 305.636 120.677 305.414 cv
120.33 305.206 120.028 304.883 119.76 304.542 cv
119.222 303.847 118.801 303.048 118.42 302.24 cv
117.666 300.61 117.076 298.901 116.583 297.167 cv
116.993 298.923 117.502 300.661 118.183 302.344 cv
118.531 303.181 118.914 304.01 119.447 304.772 cv
119.719 305.146 120.022 305.517 120.435 305.796 cv
120.876 306.116 121.405 306.109 121.814 306.184 cv
123.569 306.493 125.317 306.957 127.056 307.412 cv
128.794 307.875 130.529 308.363 132.255 308.869 cv
132.477 308.079 li
cp
f
153.63 307.284 mo
154.143 306.131 154.697 304.979 155.313 303.881 cv
155.625 303.334 155.95 302.787 156.332 302.324 cv
156.511 302.061 156.735 301.999 157.008 301.61 cv
157.202 301.306 157.324 301 157.44 300.69 cv
157.875 299.457 158.132 298.201 158.383 296.942 cv
158.626 295.684 158.831 294.421 159.007 293.153 cv
158.755 294.409 158.473 295.654 158.154 296.891 cv
157.831 298.123 157.492 299.363 157.004 300.517 cv
156.88 300.799 156.742 301.081 156.575 301.307 cv
156.495 301.461 156.1 301.681 155.898 301.946 cv
155.446 302.449 155.094 302.994 154.749 303.544 cv
154.066 304.648 153.46 305.78 152.887 306.94 cv
153.63 307.284 li
cp
f
163.056 310.118 mo
162.771 308.812 162.849 307.342 163.203 305.994 cv
163.542 304.627 164.29 303.393 165.011 302.132 cv
167.205 298.37 li
167.558 297.736 167.9 297.094 168.2 296.429 cv
168.448 295.778 168.862 295.043 168.585 294.339 cv
168.826 295.045 168.384 295.749 168.106 296.385 cv
167.779 297.029 167.407 297.651 167.027 298.267 cv
164.66 301.918 li
163.888 303.133 163.05 304.375 162.612 305.823 cv
162.171 307.259 161.997 308.76 162.259 310.307 cv
163.056 310.118 li
cp
f
165.122 308.023 mo
167.444 306.901 169.672 305.632 171.768 304.148 cv
172.809 303.4 173.816 302.598 174.708 301.67 cv
175.581 300.754 176.412 299.677 176.615 298.396 cv
176.344 299.66 175.473 300.666 174.564 301.523 cv
173.64 302.388 172.604 303.126 171.539 303.807 cv
169.399 305.157 167.115 306.299 164.795 307.271 cv
165.122 308.023 li
cp
f
116.134 291.394 mo
115.175 290.398 114.603 289.085 114.657 287.653 cv
114.767 284.71 117.433 282.421 120.61 282.538 cv
120.632 282.539 120.646 282.545 120.665 282.545 cv
120.657 282.373 120.622 282.207 120.632 282.034 cv
120.695 280.245 121.606 278.699 122.962 277.676 cv
122.535 276.982 122.286 276.213 122.316 275.394 cv
122.406 272.995 124.664 271.087 127.56 270.777 cv
128.487 268.266 131.079 266.491 134.104 266.604 cv
135.518 266.657 136.814 267.12 137.869 267.854 cv
137.869 267.793 137.857 267.737 137.857 267.678 cv
137.964 264.778 140.572 262.519 143.679 262.634 cv
144.166 262.652 144.625 262.745 145.071 262.87 cv
146.5 261.243 148.788 260.227 151.338 260.322 cv
155.121 260.462 158.141 262.991 158.581 266.157 cv
159.254 265.947 159.973 265.831 160.723 265.857 cv
164.064 265.984 166.677 268.594 166.563 271.696 cv
166.558 271.908 166.506 272.104 166.474 272.311 cv
167.792 272.722 168.849 273.692 169.4 274.944 cv
170.317 274.452 171.402 274.181 172.557 274.227 cv
175.251 274.322 177.434 276.076 177.957 278.336 cv
178.021 278.336 178.078 278.317 178.137 278.321 cv
181 278.429 183.224 281.122 183.103 284.347 cv
183.102 284.434 183.077 284.514 183.07 284.604 cv
185.052 285.359 186.449 287.475 186.357 289.942 cv
186.263 292.493 184.615 294.559 182.478 295.088 cv
182.507 295.339 182.545 295.595 182.533 295.857 cv
182.418 298.995 179.553 301.439 176.135 301.313 cv
173.758 301.224 171.762 299.901 170.791 298.055 cv
169.602 299.166 167.842 299.853 165.88 299.78 cv
163.367 299.684 161.26 298.394 160.325 296.621 cv
159.497 296.807 158.624 296.915 157.703 296.884 cv
155.307 296.794 153.218 295.89 151.813 294.559 cv
151.399 294.641 150.974 294.687 150.532 294.669 cv
150.225 294.66 149.932 294.609 149.639 294.551 cv
148.826 297.178 146.23 299.053 143.202 298.941 cv
142.638 298.918 142.104 298.81 141.585 298.666 cv
140.437 300.456 138.251 301.643 135.759 301.55 cv
134.816 301.514 133.932 301.294 133.137 300.941 cv
132.066 302.733 129.918 303.928 127.464 303.834 cv
125.234 303.756 123.338 302.631 122.304 301.029 cv
122.233 301.031 122.163 301.046 122.089 301.042 cv
121.055 301.006 120.105 300.665 119.298 300.132 cv
118.521 300.613 117.6 300.879 116.62 300.839 cv
113.993 300.741 111.948 298.538 112.044 295.917 cv
112.129 293.579 113.893 291.71 116.134 291.394 cv
cp
.490196 .45098 .137255 rgb
f
123.154 289.417 mo
122.398 288.632 121.947 287.597 121.99 286.468 cv
122.075 284.149 124.177 282.347 126.683 282.438 cv
126.696 282.44 126.709 282.445 126.727 282.445 cv
126.716 282.31 126.689 282.181 126.696 282.043 cv
126.748 280.636 127.464 279.415 128.535 278.61 cv
128.196 278.065 127.999 277.457 128.025 276.813 cv
128.094 274.922 129.874 273.42 132.154 273.176 cv
132.884 271.198 134.929 269.8 137.309 269.89 cv
138.424 269.93 139.443 270.295 140.277 270.874 cv
140.277 270.829 140.265 270.784 140.265 270.734 cv
140.351 268.452 142.403 266.671 144.85 266.764 cv
145.233 266.776 145.597 266.852 145.948 266.949 cv
147.073 265.67 148.876 264.866 150.884 264.94 cv
153.864 265.052 156.241 267.043 156.588 269.537 cv
157.118 269.374 157.684 269.28 158.279 269.302 cv
160.908 269.402 162.965 271.459 162.875 273.9 cv
162.869 274.065 162.831 274.222 162.806 274.384 cv
163.846 274.709 164.678 275.471 165.112 276.459 cv
165.835 276.071 166.686 275.856 167.596 275.893 cv
169.721 275.969 171.438 277.35 171.852 279.131 cv
171.898 279.131 171.945 279.116 171.992 279.118 cv
174.246 279.201 176 281.325 175.905 283.863 cv
175.901 283.934 175.885 283.996 175.879 284.066 cv
177.439 284.661 178.539 286.329 178.468 288.272 cv
178.392 290.282 177.094 291.906 175.411 292.326 cv
175.437 292.524 175.464 292.724 175.457 292.931 cv
175.366 295.403 173.109 297.327 170.414 297.229 cv
168.541 297.159 166.972 296.115 166.207 294.661 cv
165.269 295.537 163.885 296.079 162.336 296.021 cv
160.359 295.944 158.699 294.928 157.962 293.533 cv
157.309 293.678 156.623 293.764 155.896 293.739 cv
154.01 293.669 152.363 292.956 151.257 291.906 cv
150.93 291.975 150.596 292.007 150.25 291.995 cv
150.007 291.986 149.776 291.949 149.544 291.904 cv
148.908 293.971 146.861 295.447 144.475 295.359 cv
144.031 295.34 143.609 295.256 143.202 295.146 cv
142.295 296.553 140.577 297.487 138.613 297.414 cv
137.869 297.389 137.173 297.211 136.547 296.935 cv
135.706 298.348 134.014 299.288 132.079 299.217 cv
130.324 299.152 128.83 298.267 128.015 297.002 cv
127.959 297.005 127.906 297.018 127.846 297.013 cv
127.029 296.985 126.282 296.717 125.647 296.297 cv
125.035 296.679 124.311 296.887 123.539 296.854 cv
121.469 296.777 119.857 295.043 119.934 292.978 cv
120.003 291.138 121.39 289.663 123.154 289.417 cv
cp
.588235 .541176 .164706 rgb
f
135.594 277.189 mo
135.594 278.539 137.282 279.633 139.363 279.633 cv
141.444 279.633 143.132 278.539 143.132 277.189 cv
143.132 275.836 141.444 274.743 139.363 274.743 cv
137.282 274.743 135.594 275.836 135.594 277.189 cv
cp
.760784 .686275 .27451 rgb
f
138.994 280.138 mo
138.994 281.25 140.389 282.152 142.104 282.152 cv
143.822 282.152 145.212 281.25 145.212 280.138 cv
145.212 279.022 143.822 278.119 142.104 278.119 cv
140.389 278.119 138.994 279.022 138.994 280.138 cv
cp
f
135.392 279.633 mo
135.392 280.47 136.438 281.146 137.725 281.146 cv
139.014 281.146 140.058 280.47 140.058 279.633 cv
140.058 278.797 139.014 278.119 137.725 278.119 cv
136.438 278.119 135.392 278.797 135.392 279.633 cv
cp
f
158.459 283 mo
158.459 284.021 159.914 284.851 161.708 284.851 cv
163.504 284.851 164.958 284.021 164.958 283 cv
164.958 281.975 163.504 281.146 161.708 281.146 cv
159.914 281.146 158.459 281.975 158.459 283 cv
cp
f
160.83 285.808 mo
160.83 286.892 162.507 287.77 164.572 287.77 cv
166.638 287.77 168.312 286.892 168.312 285.808 cv
168.312 284.727 166.638 283.848 164.572 283.848 cv
162.507 283.848 160.83 284.727 160.83 285.808 cv
cp
f
157.091 285.385 mo
157.091 286.7 158.376 287.77 159.965 287.77 cv
161.554 287.77 162.838 286.7 162.838 285.385 cv
162.838 284.066 161.554 283 159.965 283 cv
158.376 283 157.091 284.066 157.091 285.385 cv
cp
f
143.771 289.107 mo
143.771 289.848 144.986 290.447 146.487 290.447 cv
147.983 290.447 149.201 289.848 149.201 289.107 cv
149.201 288.369 147.983 287.77 146.487 287.77 cv
144.986 287.77 143.771 288.369 143.771 289.107 cv
cp
f
149.958 273.493 mo
149.958 274.677 151.34 275.637 153.045 275.637 cv
154.75 275.637 156.133 274.677 156.133 273.493 cv
156.133 272.308 154.75 271.349 153.045 271.349 cv
151.34 271.349 149.958 272.308 149.958 273.493 cv
cp
f
151.755 276.148 mo
151.755 276.924 152.736 277.554 153.945 277.554 cv
155.152 277.554 156.133 276.924 156.133 276.148 cv
156.133 275.373 155.152 274.743 153.945 274.743 cv
152.736 274.743 151.755 275.373 151.755 276.148 cv
cp
f
125.707 289.866 mo
125.707 291.028 126.931 291.968 128.445 291.968 cv
129.954 291.968 131.182 291.028 131.182 289.866 cv
131.182 288.708 129.954 287.77 128.445 287.77 cv
126.931 287.77 125.707 288.708 125.707 289.866 cv
cp
f
127.896 291.512 mo
127.896 292.417 129.573 293.153 131.644 293.153 cv
133.713 293.153 135.392 292.417 135.392 291.512 cv
135.392 290.603 133.713 289.866 131.644 289.866 cv
129.573 289.866 127.896 290.603 127.896 291.512 cv
cp
f
125.707 292.392 mo
125.707 293.469 126.688 294.339 127.896 294.339 cv
129.104 294.339 130.086 293.469 130.086 292.392 cv
130.086 291.317 129.104 290.447 127.896 290.447 cv
126.688 290.447 125.707 291.317 125.707 292.392 cv
cp
f
128.445 293.153 mo
128.445 294.06 129.322 294.795 130.402 294.795 cv
131.489 294.795 132.366 294.06 132.366 293.153 cv
132.366 292.244 131.489 291.51 130.402 291.51 cv
129.322 291.51 128.445 292.244 128.445 293.153 cv
cp
f
122.971 291.131 mo
122.971 291.827 124.194 292.392 125.707 292.392 cv
127.218 292.392 128.445 291.827 128.445 291.131 cv
128.445 290.436 127.218 289.866 125.707 289.866 cv
124.194 289.866 122.971 290.436 122.971 291.131 cv
cp
f
167.311 292.392 mo
167.311 293.469 168.413 294.339 169.772 294.339 cv
171.133 294.339 172.236 293.469 172.236 292.392 cv
172.236 291.317 171.133 290.447 169.772 290.447 cv
168.413 290.447 167.311 291.317 167.311 292.392 cv
cp
f
145.818 187.133 mo
145.69 183.495 145.663 179.893 145.926 176.243 cv
146.063 174.462 146.299 172.499 146.947 170.79 cv
148.447 165.643 li
154.139 144.901 li
149.547 165.922 li
148.313 171.174 li
147.784 172.865 147.769 174.524 147.755 176.313 cv
147.786 179.832 148.1 183.401 148.507 186.907 cv
145.818 187.133 li
cp
.6 .247059 .160784 rgb
f
142.288 197.671 mo
140.754 196.483 138.926 195.471 137.042 194.86 cv
136.092 194.56 135.113 194.365 134.128 194.328 cv
133.651 194.295 133.157 194.384 132.522 194.296 cv
131.92 194.213 131.39 194.047 130.88 193.818 cv
128.866 192.877 127.311 191.387 125.874 189.856 cv
124.449 188.302 123.164 186.638 122.005 184.896 cv
123.286 186.549 124.682 188.112 126.194 189.537 cv
127.705 190.943 129.36 192.282 131.216 192.982 cv
131.671 193.153 132.163 193.257 132.599 193.287 cv
133.007 193.333 133.559 193.214 134.125 193.203 cv
135.235 193.164 136.338 193.305 137.404 193.56 cv
139.542 194.096 141.506 194.996 143.374 196.237 cv
142.288 197.671 li
cp
f
153.5 208.043 mo
150.979 206.561 148.627 204.945 146.409 203.037 cv
145.308 202.08 144.252 201.045 143.332 199.833 cv
142.872 199.229 142.453 198.567 142.126 197.822 cv
141.763 197.114 141.665 196.114 141.564 195.572 cv
141.292 194.536 140.55 193.255 139.816 192.151 cv
139.054 191.017 138.216 189.916 137.328 188.854 cv
135.555 186.728 133.618 184.714 131.522 182.913 cv
130.472 182.026 129.375 181.173 128.211 180.544 cv
127.622 180.184 127.121 180.162 126.275 179.745 cv
125.591 179.384 125.008 178.955 124.436 178.515 cv
122.185 176.727 120.2 174.72 118.227 172.697 cv
114.317 168.631 110.595 164.4 106.963 160.098 cv
110.778 164.237 114.679 168.302 118.745 172.177 cv
120.786 174.097 122.86 176.015 125.092 177.634 cv
125.651 178.027 126.228 178.407 126.802 178.679 cv
127.219 178.892 128.155 179.052 128.785 179.419 cv
130.124 180.095 131.28 180.954 132.405 181.848 cv
134.631 183.654 136.669 185.655 138.564 187.796 cv
139.51 188.867 140.414 189.98 141.254 191.161 cv
142.081 192.384 142.889 193.51 143.392 195.192 cv
143.563 196.026 143.61 196.448 143.909 197.003 cv
144.175 197.538 144.538 198.06 144.954 198.554 cv
145.789 199.545 146.795 200.447 147.861 201.283 cv
149.997 202.945 152.381 204.414 154.78 205.662 cv
153.5 208.043 li
cp
f
136.73 164.103 mo
136.73 164.103 145.757 180.9 148.606 198.301 cv
149.684 204.883 150.053 210.182 150.31 213.264 cv
150.909 220.467 150.004 224.17 148.51 228.227 cv
146.935 232.502 142.165 232.457 142.893 233.357 cv
142.893 233.357 145.922 234.639 149.185 233.176 cv
152.448 231.713 153.363 235.971 154.81 236.213 cv
156.112 236.434 156.16 231.488 158.297 232.727 cv
161.354 234.496 165.462 233.738 165.462 232.838 cv
165.462 232.838 158.522 230.926 157.847 223.727 cv
157.172 216.525 157.29 213.488 156.727 209.775 cv
156.165 206.064 157.109 203.588 157.088 200.607 cv
157.067 197.626 157.76 193.376 156.727 187.95 cv
154.139 174.366 154.526 164.325 158.091 157.688 cv
155.205 157.688 li
155.205 157.688 155.021 161.967 154.231 163.501 cv
153.442 165.036 153.017 172.018 153.407 174.366 cv
153.797 176.715 154.34 192.905 153.893 198.188 cv
153.447 203.471 150.046 193.1 149.128 186.746 cv
148.211 180.395 139.29 167.627 139.177 164.252 cv
139.065 160.877 136.73 164.103 136.73 164.103 cv
cp
f
162.943 169.726 mo
164.709 172.092 166.19 174.711 167.132 177.584 cv
167.592 179.021 167.906 180.537 167.903 182.11 cv
167.917 183.676 167.554 185.304 166.759 186.751 cv
165.227 185.804 li
165.969 184.726 166.423 183.426 166.555 182.044 cv
166.7 180.664 166.56 179.225 166.261 177.816 cv
165.646 174.992 164.458 172.253 162.943 169.726 cv
cp
f
175.831 163.501 mo
175.963 166.868 175.669 170.264 174.94 173.586 cv
174.195 176.893 172.971 180.184 170.837 182.978 cv
169.784 184.362 168.441 185.614 166.995 186.563 cv
165.711 187.497 164.463 188.633 163.25 189.765 cv
160.818 192.048 158.495 194.457 156.136 196.878 cv
154.273 194.923 li
156.779 192.687 159.3 190.414 161.937 188.263 cv
163.268 187.188 164.59 186.133 166.102 185.188 cv
167.53 184.376 168.747 183.373 169.822 182.146 cv
171.96 179.7 173.369 176.612 174.305 173.422 cv
175.23 170.216 175.746 166.867 175.831 163.501 cv
cp
f
164.067 158.919 mo
165.307 159.73 166.915 160.238 168.697 160.238 cv
171.813 160.238 174.427 158.722 175.359 156.634 cv
175.924 156.827 176.548 156.939 177.208 156.939 cv
179.754 156.939 181.821 155.328 181.821 153.339 cv
181.821 151.35 179.754 149.738 177.208 149.738 cv
176.434 149.738 175.715 149.901 175.075 150.162 cv
175.151 149.891 175.201 149.609 175.201 149.317 cv
175.201 147.303 173.305 145.669 170.967 145.669 cv
169.811 145.669 168.767 146.07 168 146.717 cv
166.324 145.092 163.846 144.038 161.046 144.038 cv
160.044 144.038 159.095 144.204 158.193 144.448 cv
156.913 142.95 154.584 141.938 151.895 141.938 cv
148.866 141.938 146.268 143.211 145.143 145.028 cv
144.509 144.67 143.789 144.45 143.008 144.45 cv
141.113 144.45 139.513 145.66 138.898 147.343 cv
134.63 147.933 131.632 149.321 131.632 150.938 cv
131.632 152.738 135.341 154.247 140.378 154.697 cv
140.372 154.796 140.346 154.89 140.346 154.988 cv
140.346 157.889 142.93 160.238 146.121 160.238 cv
147.307 160.238 148.412 159.912 149.329 159.353 cv
150.662 161.116 153.375 162.339 156.541 162.339 cv
159.965 162.339 162.878 160.919 164.067 158.919 cv
cp
.490196 .45098 .137255 rgb
f
161.859 155.97 mo
162.728 156.538 163.85 156.896 165.096 156.896 cv
167.278 156.896 169.104 155.834 169.756 154.373 cv
170.153 154.508 170.588 154.585 171.048 154.585 cv
172.831 154.585 174.276 153.459 174.276 152.07 cv
174.276 150.681 172.831 149.551 171.048 149.551 cv
170.508 149.551 170.004 149.665 169.555 149.849 cv
169.611 149.658 169.643 149.459 169.643 149.255 cv
169.643 147.849 168.321 146.708 166.686 146.708 cv
165.877 146.708 165.146 146.986 164.609 147.44 cv
163.437 146.301 161.706 145.566 159.747 145.566 cv
159.046 145.566 158.385 145.683 157.75 145.851 cv
156.854 144.805 155.228 144.099 153.348 144.099 cv
151.231 144.099 149.411 144.987 148.625 146.258 cv
148.18 146.007 147.678 145.853 147.133 145.853 cv
145.807 145.853 144.692 146.698 144.257 147.876 cv
141.275 148.287 139.177 149.258 139.177 150.39 cv
139.177 151.648 141.772 152.705 145.294 153.021 cv
145.29 153.09 145.272 153.155 145.272 153.221 cv
145.272 155.252 147.081 156.896 149.311 156.896 cv
150.139 156.896 150.911 156.665 151.554 156.274 cv
152.484 157.508 154.382 158.363 156.597 158.363 cv
158.991 158.363 161.029 157.372 161.859 155.97 cv
cp
.588235 .541176 .164706 rgb
f
147.757 161.539 mo
147.246 161.539 146.749 161.574 146.261 161.626 cv
146.32 161.323 146.369 161.017 146.369 160.7 cv
146.369 157.606 143.525 155.097 140.014 155.097 cv
139.008 155.097 138.066 155.322 137.219 155.691 cv
136.526 152.945 133.805 150.894 130.54 150.894 cv
127.804 150.894 125.462 152.341 124.361 154.416 cv
123.626 154.14 122.832 153.976 121.993 153.976 cv
119.858 153.976 117.978 154.981 116.806 156.514 cv
115.605 155.646 113.924 155.097 112.047 155.097 cv
108.681 155.097 105.937 156.849 105.543 159.104 cv
104.557 158.876 103.5 158.738 102.382 158.738 cv
97.4321 158.738 93.4175 161.183 93.4175 164.201 cv
93.4175 167.218 97.4321 169.665 102.382 169.665 cv
102.404 169.665 102.424 169.66 102.446 169.66 cv
102.966 173.288 106.812 176.107 111.488 176.107 cv
114.476 176.107 117.124 174.95 118.783 173.171 cv
119.425 173.438 120.131 173.588 120.874 173.588 cv
122.671 173.588 124.253 172.714 125.216 171.383 cv
126.713 174.173 129.927 176.107 133.661 176.107 cv
136.741 176.107 139.465 174.79 141.167 172.767 cv
141.863 173.271 142.731 173.588 143.688 173.588 cv
145.593 173.588 147.178 172.388 147.622 170.776 cv
147.667 170.778 147.709 170.785 147.757 170.785 cv
152.25 170.785 155.894 168.716 155.894 166.163 cv
155.894 163.61 152.25 161.539 147.757 161.539 cv
cp
f
141.16 162.101 mo
140.794 162.101 140.439 162.125 140.091 162.162 cv
140.133 161.945 140.168 161.727 140.168 161.499 cv
140.168 159.289 138.136 157.496 135.628 157.496 cv
134.909 157.496 134.238 157.657 133.631 157.923 cv
133.137 155.961 131.193 154.493 128.859 154.493 cv
126.907 154.493 125.233 155.527 124.446 157.011 cv
123.919 156.813 123.352 156.694 122.754 156.694 cv
121.229 156.694 119.885 157.414 119.046 158.509 cv
118.189 157.889 116.989 157.496 115.647 157.496 cv
113.243 157.496 111.283 158.75 111.001 160.36 cv
110.296 160.196 109.542 160.098 108.743 160.098 cv
105.206 160.098 102.339 161.846 102.339 164 cv
102.339 166.156 105.206 167.904 108.743 167.904 cv
108.758 167.904 108.773 167.901 108.788 167.901 cv
109.16 170.494 111.909 172.508 115.249 172.508 cv
117.383 172.508 119.275 171.681 120.459 170.41 cv
120.919 170.601 121.423 170.706 121.954 170.706 cv
123.237 170.706 124.368 170.082 125.057 169.133 cv
126.125 171.125 128.422 172.508 131.09 172.508 cv
133.291 172.508 135.236 171.565 136.453 170.122 cv
136.951 170.481 137.571 170.706 138.252 170.706 cv
139.616 170.706 140.748 169.85 141.064 168.699 cv
141.096 168.701 141.127 168.706 141.16 168.706 cv
144.37 168.706 146.973 167.226 146.973 165.403 cv
146.973 163.578 144.37 162.101 141.16 162.101 cv
cp
.678431 .607843 .215686 rgb
f
181.606 168.415 mo
181.384 168.415 181.178 168.448 180.969 168.478 cv
181.012 168.207 181.061 167.938 181.061 167.656 cv
181.061 164.253 177.972 161.488 174.161 161.488 cv
173.011 161.488 171.939 161.767 170.987 162.213 cv
169.877 159.924 167.358 158.318 164.419 158.318 cv
160.458 158.318 157.25 161.225 157.25 164.811 cv
157.25 165.359 157.346 165.884 157.49 166.393 cv
156.627 165.945 155.624 165.676 154.542 165.676 cv
151.407 165.676 148.859 167.837 148.859 170.506 cv
148.859 173.175 151.407 175.34 154.542 175.34 cv
155.655 175.34 156.685 175.059 157.559 174.589 cv
158.256 176.535 160.084 177.936 162.253 177.936 cv
163.481 177.936 164.591 177.477 165.458 176.739 cv
166.872 178.646 169.586 179.956 172.74 179.956 cv
176.014 179.956 178.815 178.552 180.172 176.529 cv
180.622 176.687 181.1 176.782 181.606 176.782 cv
183.997 176.782 185.934 174.91 185.934 172.599 cv
185.934 170.288 183.997 168.415 181.606 168.415 cv
cp
f
177.511 168.624 mo
177.356 168.624 177.209 168.646 177.06 168.667 cv
177.089 168.474 177.125 168.282 177.125 168.083 cv
177.125 165.661 174.926 163.692 172.213 163.692 cv
171.394 163.692 170.631 163.892 169.953 164.206 cv
169.165 162.578 167.369 161.436 165.277 161.436 cv
162.457 161.436 160.172 163.503 160.172 166.056 cv
160.172 166.446 160.242 166.819 160.343 167.185 cv
159.729 166.864 159.016 166.674 158.245 166.674 cv
156.013 166.674 154.2 168.214 154.2 170.11 cv
154.2 172.015 156.013 173.553 158.245 173.553 cv
159.036 173.553 159.772 173.352 160.393 173.019 cv
160.889 174.405 162.19 175.402 163.734 175.402 cv
164.609 175.402 165.4 175.073 166.015 174.549 cv
167.023 175.906 168.957 176.839 171.201 176.839 cv
173.532 176.839 175.525 175.839 176.492 174.399 cv
176.812 174.511 177.153 174.579 177.511 174.579 cv
179.215 174.579 180.593 173.246 180.593 171.6 cv
180.593 169.958 179.215 168.624 177.511 168.624 cv
cp
.760784 .686275 .27451 rgb
f
154.803 179.242 mo
154.426 177.493 152.708 176.17 150.644 176.17 cv
149.917 176.17 149.243 176.349 148.647 176.64 cv
147.685 174.243 145.043 172.51 141.898 172.51 cv
140.315 172.51 138.864 172.962 137.678 173.7 cv
136.753 172.97 135.563 172.51 134.245 172.51 cv
132.418 172.51 130.812 173.36 129.867 174.652 cv
125.952 174.771 122.819 177.259 122.819 180.326 cv
122.819 180.392 122.842 180.452 122.843 180.517 cv
122.249 180.403 121.624 180.326 120.962 180.326 cv
117.597 180.326 114.869 181.9 114.869 183.837 cv
114.869 185.775 117.597 187.35 120.962 187.35 cv
121.763 187.35 122.522 187.255 123.219 187.097 cv
123.28 189.731 125.829 191.855 128.978 191.855 cv
131.147 191.855 133.014 190.836 133.999 189.347 cv
135.256 190.861 137.247 191.855 139.513 191.855 cv
142.654 191.855 145.273 189.958 146.103 187.381 cv
147.427 188.342 149.267 188.939 151.306 188.939 cv
155.332 188.939 158.594 186.622 158.594 183.76 cv
158.594 181.806 157.053 180.125 154.803 179.242 cv
cp
.490196 .45098 .137255 rgb
f
149.665 180.079 mo
149.396 178.827 148.167 177.88 146.689 177.88 cv
146.168 177.88 145.687 178.009 145.259 178.216 cv
144.57 176.501 142.681 175.262 140.428 175.262 cv
139.295 175.262 138.258 175.585 137.409 176.112 cv
136.748 175.587 135.896 175.262 134.952 175.262 cv
133.643 175.262 132.497 175.868 131.818 176.794 cv
129.017 176.88 126.774 178.659 126.774 180.856 cv
126.774 180.901 126.791 180.945 126.792 180.992 cv
126.365 180.91 125.918 180.856 125.448 180.856 cv
123.037 180.856 121.084 181.981 121.084 183.368 cv
121.084 184.755 123.037 185.881 125.448 185.881 cv
126.018 185.881 126.562 185.813 127.062 185.7 cv
127.104 187.587 128.928 189.106 131.182 189.106 cv
132.735 189.106 134.071 188.376 134.776 187.311 cv
135.675 188.396 137.102 189.106 138.722 189.106 cv
140.97 189.106 142.844 187.747 143.438 185.902 cv
144.386 186.591 145.702 187.021 147.164 187.021 cv
150.043 187.021 152.378 185.36 152.378 183.313 cv
152.378 181.913 151.274 180.711 149.665 180.079 cv
cp
.588235 .541176 .164706 rgb
f
345.004 208.824 mo
345.004 208.824 344.788 212.068 344.942 215.693 cv
345.098 219.377 346.102 223.498 345.932 225.473 cv
345.479 230.652 341.292 233.826 339.555 233.9 cv
338.448 233.949 340.391 235.463 342.395 234.662 cv
344.401 233.861 344.915 235.867 345.61 236.166 cv
346.307 236.469 347.01 235.064 347.612 235.064 cv
348.215 235.064 349.92 236.352 351.125 236.209 cv
352.333 236.066 350.118 235.105 350.825 234.613 cv
351.329 234.262 352.366 235.893 354.471 235.188 cv
356.581 234.484 354.438 235.467 352.03 232.053 cv
349.62 228.639 351.575 225.555 351.069 223.365 cv
349.803 217.906 349.645 209.814 349.645 209.814 cv
345.004 208.824 li
cp
.6 .247059 .160784 rgb
f
368.209 185.927 mo
368.209 180.699 366.653 176.013 364.188 172.752 cv
366.038 169.989 367.149 166.468 367.149 162.625 cv
367.149 157.077 364.836 152.188 361.319 149.305 cv
361.325 149.086 361.34 148.874 361.34 148.656 cv
361.34 140.94 356.936 134.686 351.502 134.686 cv
347.717 134.686 344.436 137.723 342.792 142.169 cv
337.682 142.769 333.678 148.33 333.678 155.106 cv
333.678 155.66 333.713 156.202 333.766 156.736 cv
327.932 159.457 323.653 168.243 323.653 178.687 cv
323.653 189.104 327.911 197.875 333.727 200.618 cv
333.702 200.917 333.678 201.216 333.678 201.521 cv
333.678 208.186 339.415 213.59 346.489 213.59 cv
352.993 213.59 358.352 209.02 359.174 203.107 cv
364.377 201.049 368.209 194.146 368.209 185.927 cv
cp
.490196 .45098 .137255 rgb
f
362.161 181.572 mo
362.161 177.545 360.961 173.938 359.063 171.426 cv
360.487 169.298 361.344 166.586 361.344 163.628 cv
361.344 159.357 359.561 155.59 356.854 153.368 cv
356.858 153.203 356.87 153.038 356.87 152.869 cv
356.87 146.928 353.477 142.111 349.293 142.111 cv
346.377 142.111 343.852 144.451 342.584 147.877 cv
338.651 148.338 335.565 152.619 335.565 157.839 cv
335.565 158.264 335.594 158.683 335.633 159.092 cv
331.141 161.188 327.848 167.955 327.848 175.996 cv
327.848 184.021 331.125 190.773 335.606 192.885 cv
335.586 193.116 335.565 193.348 335.565 193.581 cv
335.565 198.714 339.983 202.875 345.432 202.875 cv
350.442 202.875 354.567 199.358 355.202 194.803 cv
359.209 193.218 362.161 187.902 362.161 181.572 cv
cp
.588235 .541176 .164706 rgb
f
355.858 176.167 mo
355.858 173.229 354.985 170.595 353.598 168.761 cv
354.639 167.207 355.264 165.229 355.264 163.07 cv
355.264 159.953 353.963 157.204 351.985 155.582 cv
351.989 155.46 352 155.341 352 155.217 cv
352 150.881 349.522 147.363 346.469 147.363 cv
344.34 147.363 342.497 149.072 341.571 151.572 cv
338.7 151.909 336.446 155.035 336.446 158.845 cv
336.446 159.155 336.469 159.461 336.499 159.759 cv
333.217 161.289 330.815 166.228 330.815 172.099 cv
330.815 177.955 333.208 182.885 336.477 184.426 cv
336.463 184.594 336.446 184.763 336.446 184.936 cv
336.446 188.681 339.672 191.718 343.651 191.718 cv
347.305 191.718 350.315 189.149 350.782 185.824 cv
353.706 184.67 355.858 180.787 355.858 176.167 cv
cp
.760784 .686275 .27451 rgb
f
254.409 223.725 mo
253.604 216.525 253.745 213.488 253.073 209.775 cv
252.792 208.219 252.833 206.884 252.963 205.634 cv
244.586 205.634 li
245.01 208.82 245.241 211.438 245.422 213.264 cv
246.137 220.467 245.059 224.168 243.278 228.225 cv
241.401 232.5 235.711 232.457 236.583 233.357 cv
236.583 233.357 240.194 234.639 244.081 233.176 cv
247.971 231.713 249.063 235.969 250.788 236.213 cv
252.34 236.432 252.397 231.488 254.946 232.725 cv
258.588 234.496 263.485 233.738 263.485 232.838 cv
263.485 232.838 255.213 230.926 254.409 223.725 cv
cp
.6 .247059 .160784 rgb
f
278.879 203.313 mo
279.077 202.74 279.217 202.147 279.217 201.526 cv
279.217 197.85 275.532 194.872 270.989 194.872 cv
268.026 194.872 265.452 196.148 264.002 198.048 cv
261.981 196.215 259.122 195.065 255.944 195.065 cv
252.024 195.065 248.584 196.81 246.61 199.438 cv
244.858 198.807 242.903 198.441 240.831 198.441 cv
240.608 198.441 240.391 198.461 240.172 198.468 cv
238.577 195.526 234.215 193.41 229.069 193.41 cv
222.575 193.41 217.309 196.777 217.309 200.931 cv
217.309 201.287 217.36 201.633 217.434 201.974 cv
213.063 203.457 210.088 206.375 210.088 209.736 cv
210.088 214.6 216.313 218.539 223.991 218.539 cv
227.067 218.539 229.899 217.9 232.202 216.828 cv
234.782 218.902 238.145 220.316 241.649 220.316 cv
245.483 220.316 248.713 218.627 250.944 216.229 cv
252.305 216.846 253.881 217.221 255.583 217.221 cv
259.065 217.221 262.057 215.725 263.59 213.545 cv
265.315 216.469 269.555 218.539 274.524 218.539 cv
281.024 218.539 286.292 215.006 286.292 210.645 cv
286.292 207.314 283.219 204.474 278.879 203.313 cv
cp
.490196 .45098 .137255 rgb
f
271.329 200.39 mo
271.479 199.959 271.584 199.511 271.584 199.044 cv
271.584 196.273 268.805 194.028 265.379 194.028 cv
263.147 194.028 261.206 194.988 260.112 196.423 cv
258.588 195.041 256.432 194.172 254.036 194.172 cv
251.079 194.172 248.489 195.486 246.999 197.469 cv
245.678 196.992 244.204 196.719 242.641 196.719 cv
242.473 196.719 242.309 196.732 242.145 196.735 cv
240.94 194.519 237.651 192.922 233.774 192.922 cv
228.874 192.922 224.905 195.463 224.905 198.594 cv
224.905 198.862 224.944 199.124 225 199.382 cv
221.706 200.501 219.461 202.7 219.461 205.234 cv
219.461 208.902 224.153 211.871 229.944 211.871 cv
232.264 211.871 234.397 211.389 236.135 210.584 cv
238.081 212.145 240.616 213.213 243.256 213.213 cv
246.147 213.213 248.583 211.936 250.266 210.131 cv
251.293 210.594 252.481 210.879 253.764 210.879 cv
256.387 210.879 258.647 209.748 259.803 208.107 cv
261.102 210.311 264.299 211.871 268.047 211.871 cv
272.946 211.871 276.918 209.207 276.918 205.918 cv
276.918 203.408 274.602 201.266 271.329 200.39 cv
cp
.588235 .541176 .164706 rgb
f
270.649 185.629 mo
270.721 185.264 270.772 184.895 270.772 184.518 cv
270.772 180.146 265.717 176.605 259.477 176.605 cv
255.334 176.605 251.725 178.171 249.758 180.5 cv
247.342 178.738 243.141 177.568 238.35 177.568 cv
230.852 177.568 224.776 180.428 224.776 183.96 cv
224.776 184.398 224.87 184.822 225.047 185.236 cv
221.895 186.298 219.788 188.189 219.788 190.354 cv
219.788 193.68 224.749 196.375 230.87 196.375 cv
232.161 196.375 233.393 196.248 234.545 196.029 cv
235.178 199.756 240.081 202.656 246.043 202.656 cv
250.932 202.656 255.102 200.703 256.795 197.945 cv
258.465 198.264 260.28 198.441 262.184 198.441 cv
270.292 198.441 276.868 195.282 276.868 191.387 cv
276.868 189.006 274.407 186.906 270.649 185.629 cv
cp
.678431 .607843 .215686 rgb
f
264.34 184.709 mo
264.393 184.447 264.43 184.18 264.43 183.906 cv
264.43 180.743 260.772 178.18 256.258 178.18 cv
253.258 178.18 250.647 179.314 249.225 180.997 cv
247.475 179.724 244.436 178.879 240.969 178.879 cv
235.543 178.879 231.145 180.947 231.145 183.503 cv
231.145 183.819 231.213 184.126 231.342 184.426 cv
229.061 185.193 227.538 186.563 227.538 188.129 cv
227.538 190.536 231.125 192.486 235.555 192.486 cv
236.489 192.486 237.381 192.394 238.215 192.235 cv
238.674 194.932 242.221 197.031 246.536 197.031 cv
250.073 197.031 253.092 195.617 254.317 193.623 cv
255.524 193.853 256.838 193.981 258.215 193.981 cv
264.083 193.981 268.842 191.694 268.842 188.877 cv
268.842 187.154 267.061 185.633 264.34 184.709 cv
cp
.760784 .686275 .27451 rgb
f
231.7 179.069 mo
232.26 182.409 237.366 185.026 243.588 185.026 cv
247.471 185.026 250.911 184.004 253.092 182.425 cv
258.635 182.209 263.014 179.676 263.014 176.573 cv
263.014 176.361 262.993 176.15 262.952 175.941 cv
265.129 175.119 266.618 173.567 266.618 171.766 cv
266.618 169.112 263.422 166.962 259.477 166.962 cv
256.399 166.962 253.797 168.282 252.795 170.12 cv
251.795 168.282 249.194 166.962 246.114 166.962 cv
243.37 166.962 241.018 168.013 239.821 169.539 cv
238.899 169.353 237.928 169.229 236.903 169.229 cv
231.875 169.229 227.797 171.652 227.797 174.641 cv
227.797 176.475 229.346 178.091 231.7 179.069 cv
cp
.490196 .45098 .137255 rgb
f
235.532 175.786 mo
235.954 178.303 239.799 180.273 244.483 180.273 cv
247.405 180.273 249.997 179.502 251.637 178.313 cv
255.811 178.149 259.108 176.244 259.108 173.908 cv
259.108 173.748 259.09 173.589 259.063 173.432 cv
260.7 172.813 261.823 171.644 261.823 170.289 cv
261.823 168.289 259.417 166.67 256.446 166.67 cv
254.127 166.67 252.168 167.665 251.413 169.049 cv
250.661 167.665 248.702 166.67 246.383 166.67 cv
244.319 166.67 242.549 167.462 241.647 168.613 cv
240.952 168.47 240.221 168.379 239.448 168.379 cv
235.663 168.379 232.592 170.203 232.592 172.453 cv
232.592 173.832 233.76 175.049 235.532 175.786 cv
cp
.588235 .541176 .164706 rgb
f
243.627 171.482 mo
244.184 171.482 244.725 171.453 245.256 171.406 cv
246.487 172.229 248.368 172.766 250.504 172.766 cv
254.215 172.766 257.221 171.175 257.221 169.218 cv
257.221 168.555 256.856 167.94 256.256 167.41 cv
257.909 166.461 258.918 165.217 258.918 163.848 cv
258.918 160.886 254.211 158.482 248.403 158.482 cv
244.495 158.482 241.09 159.573 239.28 161.189 cv
235.803 162.053 233.391 163.914 233.391 166.076 cv
233.391 169.061 237.975 171.482 243.627 171.482 cv
cp
.678431 .607843 .215686 rgb
f
244.331 167.867 mo
244.731 167.867 245.122 167.847 245.506 167.813 cv
246.395 168.404 247.752 168.793 249.295 168.793 cv
251.973 168.793 254.143 167.645 254.143 166.231 cv
254.143 165.754 253.879 165.311 253.448 164.929 cv
254.641 164.242 255.37 163.344 255.37 162.356 cv
255.37 160.218 251.971 158.482 247.778 158.482 cv
244.958 158.482 242.499 159.27 241.192 160.437 cv
238.682 161.059 236.942 162.404 236.942 163.965 cv
236.942 166.118 240.249 167.867 244.331 167.867 cv
cp
.760784 .686275 .27451 rgb
f
244.344 162.615 mo
245.637 162.615 246.805 162.125 247.657 161.337 cv
248.036 161.441 248.428 161.514 248.842 161.514 cv
251.325 161.514 253.338 159.5 253.338 157.012 cv
253.338 154.602 251.44 152.649 249.059 152.533 cv
249.059 152.525 249.061 152.519 249.061 152.512 cv
249.061 148.869 247.586 145.917 245.766 145.917 cv
243.944 145.917 242.469 148.869 242.469 152.512 cv
242.469 153.06 242.512 153.582 242.575 154.094 cv
240.848 154.748 239.631 156.33 239.631 158.188 cv
239.631 160.634 241.741 162.615 244.344 162.615 cv
cp
.490196 .45098 .137255 rgb
f
244.983 162.615 mo
245.889 162.615 246.709 162.271 247.307 161.718 cv
247.575 161.79 247.848 161.843 248.139 161.843 cv
249.881 161.843 251.295 160.429 251.295 158.68 cv
251.295 156.99 249.963 155.62 248.292 155.537 cv
248.292 155.532 248.293 155.527 248.293 155.521 cv
248.293 152.966 247.258 150.895 245.979 150.895 cv
244.702 150.895 243.667 152.966 243.667 155.521 cv
243.667 155.907 243.696 156.274 243.741 156.633 cv
242.528 157.094 241.672 158.202 241.672 159.508 cv
241.672 161.225 243.153 162.615 244.983 162.615 cv
cp
.588235 .541176 .164706 rgb
f
52.168 213.892 mo
53.1997 212.792 54.1709 211.513 55.0391 210.212 cv
55.9072 208.896 56.6934 207.521 57.3535 206.084 cv
58.6797 203.217 59.5356 200.087 59.5938 196.866 cv
59.8379 200.077 59.2754 203.351 58.1875 206.423 cv
57.6475 207.963 56.9707 209.457 56.1987 210.903 cv
55.4131 212.352 54.5645 213.729 53.5195 215.079 cv
52.168 213.892 li
cp
.6 .247059 .160784 rgb
f
49.7886 183.868 mo
52.0947 187.59 53.4888 192.08 53.4063 196.599 cv
53.4482 201.002 53.5073 205.384 53.6924 209.756 cv
53.8809 214.121 54.1631 218.482 54.7173 222.748 cv
55.3608 227.222 55.5059 231.722 55.54 236.22 cv
50.147 235.953 li
50.5225 231.676 50.7993 227.363 50.5918 223.086 cv
50.4424 218.591 50.583 214.157 50.8149 209.738 cv
51.0498 205.32 51.4126 200.919 51.79 196.543 cv
52.333 192.279 51.627 187.88 49.7886 183.868 cv
cp
f
43.9946 198.286 mo
44.937 200.201 45.6348 202.24 46.1899 204.317 cv
46.7539 206.38 47.0938 208.571 47.3467 210.655 cv
47.688 212.628 48.501 214.537 49.5962 216.226 cv
50.6816 217.899 52.0996 219.49 53.5659 220.665 cv
51.8203 222.725 li
50.1294 221.041 48.8779 219.242 47.8364 217.229 cv
46.8242 215.223 46.1489 213.046 46.0034 210.781 cv
45.9668 208.618 45.8677 206.56 45.5303 204.455 cv
45.2017 202.369 44.729 200.288 43.9946 198.286 cv
cp
f
30.8018 209.298 mo
28.8228 206.03 27.2305 202.632 25.9927 199.074 cv
24.79 195.53 23.9585 191.784 24.2051 188.056 cv
24.2612 191.787 25.3774 195.38 26.8315 198.748 cv
28.311 202.111 30.167 205.344 32.2852 208.278 cv
30.8018 209.298 li
cp
f
34.0103 180.268 mo
32.0938 184.232 31.2734 188.646 31.7393 192.951 cv
32.0469 197.333 32.3398 201.731 32.5039 206.141 cv
32.6655 210.55 32.7368 214.973 32.5195 219.43 cv
32.2397 223.739 32.4458 228.083 32.7534 232.396 cv
29.1567 232.575 li
29.1235 228.114 29.1987 223.646 29.7686 219.204 cv
30.2554 214.901 30.4678 210.528 30.5854 206.152 cv
30.7017 201.774 30.6899 197.388 30.6626 192.989 cv
30.5029 188.515 31.7813 184.039 34.0103 180.268 cv
cp
f
38.6792 191.288 mo
38.0952 193.128 37.772 195.038 37.5981 196.944 cv
37.4116 198.872 37.4873 200.733 37.5942 202.704 cv
37.5996 204.736 37.0391 206.717 36.186 208.532 cv
35.3091 210.354 34.2124 211.999 32.7764 213.521 cv
31.5527 212.202 li
32.8643 211.015 34.0728 209.504 34.9878 207.91 cv
35.9019 206.307 36.5566 204.521 36.6943 202.684 cv
36.7368 200.802 36.812 198.788 37.1514 196.889 cv
37.4785 194.973 37.9531 193.079 38.6792 191.288 cv
cp
f
48.6196 187.449 mo
48.9741 186.889 49.1909 186.243 49.1909 185.546 cv
49.1909 183.558 47.5361 181.947 45.4424 181.801 cv
45.5425 181.353 45.6128 180.894 45.6147 180.418 cv
45.6226 178.264 44.5854 176.368 42.9956 175.147 cv
43.7813 174.29 44.2754 173.152 44.2808 171.889 cv
44.2881 169.878 43.0815 168.146 41.3599 167.415 cv
41.6826 166.317 41.8706 165.08 41.876 163.766 cv
41.8887 160.558 40.8301 157.791 39.2891 156.494 cv
39.4663 155.97 39.5791 155.412 39.5806 154.824 cv
39.5879 153.013 38.6807 151.444 37.3467 150.612 cv
37.3335 147.537 36.248 144.978 34.79 144.371 cv
34.833 144.013 34.8574 143.646 34.8594 143.267 cv
34.8711 140.358 33.6323 138.001 32.0918 137.995 cv
30.5522 137.989 29.2939 140.337 29.2817 143.246 cv
29.2817 143.296 29.2886 143.346 29.2886 143.396 cv
28.3408 143.939 27.6172 146.012 27.5063 148.569 cv
25.9292 148.925 24.6919 151.48 24.6792 154.62 cv
24.6782 154.737 24.6904 154.849 24.6938 154.967 cv
23.5313 156.392 22.769 158.633 22.769 161.181 cv
22.769 162.509 22.9937 163.742 23.3555 164.839 cv
22.2451 165.739 21.5156 167.265 21.5156 168.997 cv
21.5156 169.791 21.6826 170.532 21.9551 171.2 cv
19.8037 172.566 18.3179 175.297 18.3179 178.484 cv
18.3179 180.09 18.7061 181.574 19.3521 182.84 cv
17.6709 183.868 16.5659 185.544 16.5659 187.445 cv
16.5659 188.424 16.8813 189.329 17.3911 190.133 cv
16.1982 190.684 15.4409 191.466 15.4409 192.338 cv
15.4409 194.005 18.1611 195.354 21.5156 195.354 cv
22.2554 195.354 22.9536 195.278 23.6094 195.159 cv
24.6299 196.186 26.3882 196.866 28.3975 196.866 cv
30.2813 196.866 31.938 196.262 32.98 195.342 cv
33.0381 195.341 33.0962 195.338 33.1543 195.335 cv
34.688 196.278 36.8208 196.866 39.187 196.866 cv
41.6704 196.866 43.8804 196.21 45.4253 195.186 cv
45.8169 195.284 46.2202 195.354 46.6455 195.354 cv
49.1699 195.354 51.2158 193.491 51.2158 191.188 cv
51.2158 189.535 50.1504 188.12 48.6196 187.449 cv
cp
.490196 .45098 .137255 rgb
f
43.3989 184.747 mo
43.6587 184.337 43.8188 183.859 43.8188 183.347 cv
43.8188 181.885 42.6021 180.701 41.0601 180.591 cv
41.1348 180.261 41.187 179.923 41.1885 179.576 cv
41.1938 177.989 40.4312 176.595 39.2607 175.696 cv
39.8384 175.064 40.2026 174.228 40.2065 173.299 cv
40.2119 171.821 39.3242 170.546 38.0566 170.005 cv
38.2939 169.199 38.4341 168.289 38.4365 167.322 cv
38.4468 164.96 37.6675 162.927 36.5337 161.97 cv
36.6646 161.586 36.7471 161.177 36.749 160.744 cv
36.7534 159.408 36.0864 158.255 35.105 157.644 cv
35.0947 155.382 34.2964 153.497 33.2227 153.05 cv
33.2544 152.787 33.2739 152.516 33.2749 152.236 cv
33.2827 150.099 32.3721 148.364 31.2378 148.36 cv
30.1045 148.355 29.1792 150.083 29.1709 152.223 cv
29.1709 152.26 29.1758 152.298 29.1758 152.333 cv
28.478 152.733 27.9453 154.258 27.8643 156.142 cv
26.7031 156.402 25.7935 158.281 25.7837 160.592 cv
25.7837 160.678 25.7925 160.762 25.7954 160.847 cv
24.9395 161.896 24.3784 163.543 24.3784 165.42 cv
24.3784 166.397 24.5439 167.302 24.8101 168.109 cv
23.9927 168.771 23.4565 169.896 23.4565 171.172 cv
23.4565 171.755 23.5796 172.302 23.7798 172.792 cv
22.1958 173.797 21.1025 175.808 21.1025 178.151 cv
21.1025 179.333 21.3892 180.425 21.8638 181.356 cv
20.6265 182.114 19.814 183.345 19.814 184.745 cv
19.814 185.466 20.0464 186.131 20.4219 186.723 cv
19.5435 187.126 18.9863 187.704 18.9863 188.345 cv
18.9863 189.57 20.9878 190.563 23.4565 190.563 cv
24.0005 190.563 24.5146 190.508 24.9961 190.42 cv
25.748 191.176 27.0415 191.675 28.52 191.675 cv
29.9058 191.675 31.124 191.229 31.8901 190.555 cv
31.9341 190.554 31.9766 190.552 32.02 190.548 cv
33.1484 191.242 34.7168 191.675 36.459 191.675 cv
38.2852 191.675 39.9111 191.193 41.0483 190.439 cv
41.3369 190.513 41.6338 190.563 41.9468 190.563 cv
43.8032 190.563 45.3096 189.192 45.3096 187.498 cv
45.3096 186.284 44.5254 185.241 43.3989 184.747 cv
cp
.678431 .607843 .215686 rgb
f
70.189 189.521 mo
70.335 188.95 70.4355 188.359 70.4341 187.739 cv
70.4263 185.975 69.7695 184.387 68.7271 183.184 cv
68.9341 182.04 69.0522 180.842 69.0469 179.599 cv
69.0288 174.719 67.2539 170.474 64.6362 168.184 cv
65.1797 166.479 65.499 164.41 65.4902 162.175 cv
65.4751 158.202 64.4365 154.747 62.9194 152.966 cv
63.501 151.486 63.8599 149.632 63.8525 147.591 cv
63.8364 143.176 62.1689 139.583 60.043 139.083 cv
59.8926 135.483 58.918 132.567 57.6387 131.804 cv
57.6387 131.733 57.6489 131.665 57.6489 131.593 cv
57.6328 127.504 55.9365 124.199 53.8613 124.208 cv
51.7852 124.215 50.1152 127.533 50.1313 131.623 cv
50.1328 132.155 50.1665 132.672 50.2246 133.175 cv
48.2593 134.03 46.7959 137.63 46.7773 141.954 cv
44.98 143.124 43.7573 145.328 43.7671 147.877 cv
43.7695 148.709 43.9209 149.489 44.1597 150.226 cv
42.084 152.05 40.6548 155.944 40.6733 160.454 cv
40.6807 162.306 40.9336 164.046 41.3687 165.587 cv
39.0483 166.619 37.4214 169.051 37.4321 171.88 cv
37.439 173.657 38.1055 175.259 39.1641 176.466 cv
37.0215 178.18 35.6235 180.849 35.6338 183.875 cv
35.6411 185.729 36.1846 187.446 37.0894 188.897 cv
34.5903 190.193 32.9004 192.564 32.9111 195.298 cv
32.9268 199.393 36.7065 202.697 41.3545 202.681 cv
42.5952 202.677 43.7627 202.421 44.8203 201.993 cv
46.2793 203.709 49.4648 204.897 53.1792 204.884 cv
57.187 204.869 60.5586 203.454 61.812 201.507 cv
62.9238 202.238 64.2334 202.674 65.645 202.667 cv
69.6001 202.653 72.7925 199.302 72.7764 195.184 cv
72.7666 192.898 71.752 190.88 70.189 189.521 cv
cp
.588235 .541176 .164706 rgb
f
62.8789 184.104 mo
62.9722 183.689 63.0371 183.261 63.0366 182.809 cv
63.0313 181.525 62.6064 180.371 61.9346 179.493 cv
62.0664 178.663 62.1416 177.792 62.1382 176.888 cv
62.125 173.34 60.9785 170.253 59.2896 168.589 cv
59.6411 167.349 59.8447 165.842 59.8379 164.22 cv
59.8271 161.33 59.1577 158.817 58.1768 157.521 cv
58.5522 156.446 58.7832 155.099 58.7778 153.614 cv
58.7656 150.405 57.6895 147.789 56.3184 147.427 cv
56.2197 144.81 55.5894 142.691 54.7642 142.135 cv
54.7642 142.081 54.7715 142.032 54.7715 141.98 cv
54.7598 139.009 53.6646 136.604 52.3252 136.61 cv
50.9868 136.615 49.9097 139.027 49.9219 142.001 cv
49.9238 142.388 49.9443 142.763 49.9819 143.128 cv
48.7144 143.75 47.772 146.368 47.7612 149.512 cv
46.6016 150.359 45.8149 151.965 45.8208 153.818 cv
45.8228 154.42 45.9214 154.989 46.0752 155.524 cv
44.7363 156.852 43.8164 159.681 43.8296 162.963 cv
43.8359 164.306 43.998 165.571 44.2793 166.692 cv
42.7837 167.441 41.7339 169.208 41.7422 171.268 cv
41.748 172.561 42.1772 173.724 42.8608 174.601 cv
41.4805 175.848 40.5776 177.788 40.5874 179.989 cv
40.5913 181.337 40.9424 182.587 41.5259 183.641 cv
39.9146 184.58 38.8262 186.306 38.8335 188.293 cv
38.8442 191.271 41.2852 193.675 44.2827 193.662 cv
45.0825 193.66 45.835 193.475 46.5171 193.163 cv
47.4585 194.412 49.5156 195.278 51.9102 195.271 cv
54.4971 195.257 56.6704 194.23 57.479 192.816 cv
58.1953 193.346 59.04 193.667 59.9502 193.66 cv
62.502 193.65 64.5596 191.216 64.5488 188.22 cv
64.542 186.56 63.8862 185.094 62.8789 184.104 cv
cp
.760784 .686275 .27451 rgb
f
141.583 45.6016 mo
144.033 44.7354 146.465 43.6631 148.729 42.3428 cv
149.858 41.6768 150.953 40.9414 151.925 40.0596 cv
152.881 39.1836 153.78 38.1436 154.101 36.8408 cv
153.879 38.167 153.041 39.3076 152.132 40.2705 cv
151.208 41.2451 150.147 42.0771 149.049 42.8418 cv
146.835 44.3604 144.478 45.6221 142.002 46.708 cv
141.583 45.6016 li
cp
.6 .247059 .160784 rgb
f
138.382 54.665 mo
138.621 52.7764 139.169 51.127 139.798 49.4619 cv
140.442 47.8154 141.201 46.2275 142.057 44.6982 cv
143.762 41.6396 145.81 38.8037 148.052 36.1572 cv
146.016 38.9658 144.203 41.9346 142.761 45.0576 cv
142.037 46.6162 141.416 48.2197 140.917 49.8486 cv
140.434 51.4619 140.033 53.1807 139.957 54.749 cv
138.382 54.665 li
cp
f
126.507 27.6084 mo
126.922 29.1074 127.726 30.4541 128.602 31.7158 cv
129.489 32.9736 130.514 34.127 131.604 35.207 cv
133.796 37.3594 136.265 39.2061 138.857 40.834 cv
137.961 42.1357 li
135.445 40.2393 133.076 38.1328 131.025 35.7451 cv
130.006 34.5479 129.064 33.2832 128.271 31.9268 cv
127.489 30.5752 126.793 29.1416 126.507 27.6084 cv
cp
f
137.42 35.8047 mo
138.339 34.1533 139.346 32.6006 140.497 31.1182 cv
141.669 29.6748 142.92 28.1826 144.767 27.3652 cv
146.515 26.9063 147.814 25.6035 149.026 24.2588 cv
150.219 22.8877 151.271 21.3818 152.208 19.8096 cv
151.386 21.4482 150.443 23.0283 149.334 24.5078 cv
148.233 25.9365 146.897 27.4619 145.08 28.0898 cv
143.589 28.8701 142.458 30.3604 141.456 31.8154 cv
140.463 33.2998 139.583 34.8994 138.836 36.5078 cv
137.42 35.8047 li
cp
f
136.908 24.6426 mo
136.886 22.6621 137.572 20.8438 138.81 19.4229 cv
139.43 18.7217 140.175 18.1543 140.974 17.7266 cv
141.797 17.2979 142.563 17.0127 143.358 16.6563 cv
144.925 15.9717 146.502 15.3086 147.922 14.3936 cv
149.329 13.5127 150.615 12.168 150.741 10.4033 cv
150.759 12.1729 149.531 13.7041 148.149 14.7139 cv
146.757 15.7686 145.211 16.5625 143.697 17.3652 cv
142.957 17.7686 142.138 18.1553 141.472 18.5752 cv
140.792 19.0068 140.196 19.5488 139.723 20.1729 cv
138.781 21.3994 138.349 23.0635 138.48 24.5029 cv
136.908 24.6426 li
cp
f
137.685 19.1299 mo
136.791 17.6152 136.106 16.0547 135.587 14.418 cv
135.081 12.79 134.766 11.082 134.859 9.39453 cv
134.965 11.0801 135.468 12.6963 136.142 14.209 cv
136.817 15.7158 137.679 17.1689 138.657 18.4512 cv
137.685 19.1299 li
cp
f
136.247 28.0166 mo
134.823 25.5361 133.058 23.1377 130.969 21.1162 cv
129.919 20.1113 128.767 19.1982 127.478 18.5156 cv
126.195 17.835 124.743 17.4082 123.254 17.4873 cv
124.729 17.2725 126.262 17.5732 127.646 18.1582 cv
129.039 18.7441 130.314 19.5801 131.492 20.5225 cv
132.667 21.4658 133.751 22.5225 134.766 23.6387 cv
135.779 24.7627 136.719 25.9209 137.598 27.1963 cv
136.247 28.0166 li
cp
f
131.888 36.4805 mo
132.354 35.1484 132.719 33.7178 133.034 32.3018 cv
133.348 30.876 133.603 29.4346 133.811 27.9814 cv
133.8 29.4473 133.741 30.9199 133.619 32.3887 cv
133.492 33.8643 133.33 35.3164 133.027 36.8096 cv
131.888 36.4805 li
cp
f
146.699 6.06152 mo
144.506 6.37695 142.736 7.92969 141.628 9.71973 cv
140.465 11.542 139.997 13.6279 139.507 15.75 cv
138.526 19.9697 138.13 24.291 138.298 28.6133 cv
138.455 32.9365 138.954 37.2822 139.238 41.6611 cv
139.949 54.7686 li
140.934 72.2148 142.037 89.6582 142.823 107.152 cv
138.086 107.249 li
138.146 89.8018 137.885 72.3213 137.743 54.8389 cv
137.688 50.4668 137.753 46.0889 137.556 41.7529 cv
137.392 37.4053 137.007 33.0518 136.968 28.6377 cv
136.915 24.2236 137.444 19.7822 138.559 15.5166 cv
139.048 13.4004 139.86 11.2178 141.19 9.41895 cv
142.501 7.63574 144.483 6.19434 146.699 6.06152 cv
cp
f
128.451 43.5322 mo
130.943 45.4131 133.212 47.6016 135.212 50.0381 cv
137.196 52.4805 138.915 55.2197 139.929 58.3174 cv
138.409 58.7432 li
137.725 55.8291 136.314 53.0537 134.581 50.5107 cv
132.832 47.9697 130.772 45.6123 128.451 43.5322 cv
cp
f
122.979 44.5752 mo
124.768 46.126 126.821 47.3252 128.943 48.3076 cv
131.074 49.2842 133.309 49.998 135.584 50.4561 cv
135.304 51.6064 li
132.988 50.9365 130.758 50.0088 128.675 48.8369 cv
126.601 47.6582 124.635 46.2715 122.979 44.5752 cv
cp
f
155.095 31.7959 mo
154.365 31.7959 153.671 31.873 153.028 32 cv
152.618 30.626 150.962 29.5947 148.977 29.5947 cv
146.685 29.5947 144.826 30.9688 144.826 32.6592 cv
144.826 32.6895 144.837 32.7158 144.837 32.7432 cv
142.442 33.0176 140.633 34.25 140.633 35.7256 cv
140.633 37.4053 142.967 38.7686 145.845 38.7686 cv
146.183 38.7686 146.51 38.7471 146.831 38.71 cv
147.737 39.6436 149.176 40.2578 150.815 40.2578 cv
153.015 40.2578 154.859 39.1592 155.513 37.6455 cv
158.493 37.5342 160.851 36.2803 160.851 34.7324 cv
160.851 33.1104 158.275 31.7959 155.095 31.7959 cv
cp
.588235 .541176 .164706 rgb
f
153.806 32.7227 mo
153.292 32.7227 152.805 32.7764 152.351 32.8662 cv
152.063 31.9004 150.897 31.1729 149.5 31.1729 cv
147.886 31.1729 146.577 32.1406 146.577 33.3311 cv
146.577 33.3516 146.584 33.3701 146.584 33.3877 cv
144.9 33.583 143.629 34.4502 143.629 35.4893 cv
143.629 36.6709 145.269 37.6309 147.295 37.6309 cv
147.533 37.6309 147.764 37.6152 147.989 37.5879 cv
148.626 38.2471 149.642 38.6787 150.794 38.6787 cv
152.342 38.6787 153.64 37.9053 154.101 36.8408 cv
156.197 36.7627 157.856 35.8799 157.856 34.7891 cv
157.856 33.6475 156.043 32.7227 153.806 32.7227 cv
cp
.678431 .607843 .215686 rgb
f
122.903 20.0576 mo
124.542 20.0576 125.982 19.4443 126.887 18.5098 cv
127.208 18.5459 127.536 18.5674 127.874 18.5674 cv
130.752 18.5674 133.085 17.2051 133.085 15.5273 cv
133.085 14.0488 131.277 12.8174 128.883 12.543 cv
128.883 12.5156 128.893 12.4883 128.893 12.46 cv
128.893 10.7686 127.034 9.39453 124.741 9.39453 cv
122.757 9.39453 121.101 10.4268 120.691 11.7998 cv
120.047 11.6738 119.354 11.5967 118.623 11.5967 cv
115.445 11.5967 112.868 12.9092 112.868 14.5322 cv
112.868 16.082 115.225 17.335 118.206 17.4463 cv
118.861 18.958 120.706 20.0576 122.903 20.0576 cv
cp
.490196 .45098 .137255 rgb
f
124.809 17.8428 mo
125.769 17.8428 126.608 17.4834 127.139 16.9365 cv
127.327 16.96 127.518 16.9717 127.715 16.9717 cv
129.399 16.9717 130.762 16.1758 130.762 15.1943 cv
130.762 14.3311 129.705 13.6104 128.305 13.4492 cv
128.305 13.4336 128.311 13.4189 128.311 13.4014 cv
128.311 12.4131 127.225 11.6084 125.884 11.6084 cv
124.724 11.6084 123.754 12.2139 123.516 13.0166 cv
123.14 12.9424 122.734 12.8955 122.307 12.8955 cv
120.448 12.8955 118.943 13.6641 118.943 14.6123 cv
118.943 15.5186 120.321 16.25 122.063 16.3154 cv
122.446 17.1992 123.524 17.8428 124.809 17.8428 cv
cp
.588235 .541176 .164706 rgb
f
142.359 25.8271 mo
142.359 24.1572 140.64 22.8018 138.522 22.8018 cv
138.446 22.8018 138.375 22.8164 138.3 22.8174 cv
138.3 22.8145 138.302 22.8076 138.302 22.8018 cv
138.302 20.5859 135.342 18.79 131.691 18.79 cv
128.04 18.79 125.08 20.5859 125.08 22.8018 cv
125.08 23.2002 125.206 23.5762 125.382 23.9385 cv
125.282 23.9346 125.184 23.9209 125.08 23.9209 cv
122.101 23.9209 119.684 25.2158 119.684 26.8135 cv
119.684 28.4092 122.101 29.7041 125.08 29.7041 cv
125.859 29.7041 126.596 29.6123 127.263 29.4521 cv
127.656 31.4561 129.946 32.999 132.744 32.999 cv
135.814 32.999 138.302 31.1436 138.302 28.8545 cv
138.302 28.8486 138.3 28.8428 138.3 28.8379 cv
138.375 28.8408 138.446 28.8545 138.522 28.8545 cv
140.64 28.8545 142.359 27.499 142.359 25.8271 cv
cp
.678431 .607843 .215686 rgb
f
136.923 25.2725 mo
136.923 24.2637 135.889 23.4463 134.61 23.4463 cv
134.565 23.4463 134.522 23.4541 134.478 23.4551 cv
134.478 23.4521 134.479 23.4492 134.479 23.4463 cv
134.479 22.1084 132.695 21.0283 130.494 21.0283 cv
128.292 21.0283 126.507 22.1084 126.507 23.4463 cv
126.507 23.6855 126.583 23.915 126.69 24.1309 cv
126.628 24.1299 126.57 24.1201 126.507 24.1201 cv
124.709 24.1201 123.254 24.9014 123.254 25.8643 cv
123.254 26.8252 124.709 27.6084 126.507 27.6084 cv
126.978 27.6084 127.421 27.5527 127.824 27.4551 cv
128.061 28.6631 129.442 29.5938 131.126 29.5938 cv
132.979 29.5938 134.479 28.4756 134.479 27.0938 cv
134.479 27.0908 134.478 27.0879 134.478 27.085 cv
134.522 27.0859 134.565 27.0938 134.61 27.0938 cv
135.889 27.0938 136.923 26.2764 136.923 25.2725 cv
cp
.760784 .686275 .27451 rgb
f
138.862 12.3584 mo
138.896 12.3584 138.927 12.3545 138.96 12.3545 cv
139.417 13.7754 141.385 14.8447 143.747 14.8447 cv
146.041 14.8447 147.953 13.8311 148.476 12.4678 cv
148.527 12.4697 148.576 12.4756 148.63 12.4756 cv
152.429 12.4756 155.507 10.7715 155.507 8.66699 cv
155.507 8.66113 155.504 8.65723 155.504 8.65137 cv
158.53 8.55957 160.928 7.51074 160.928 6.21484 cv
160.928 4.86035 158.314 3.76172 155.093 3.76172 cv
154.979 3.76172 154.875 3.77441 154.764 3.77637 cv
154.764 3.77246 154.767 3.7666 154.767 3.76172 cv
154.767 2.00098 152.3 .572266 149.257 .572266 cv
147.706 .572266 146.309 .946289 145.308 1.54199 cv
144.2 .598633 142.638 0 140.891 0 cv
137.536 0 134.817 2.17578 134.817 4.8584 cv
134.817 5.03027 134.859 5.19238 134.882 5.35938 cv
132.433 6.00488 130.762 7.20996 130.762 8.6084 cv
130.762 10.6807 134.389 12.3584 138.862 12.3584 cv
cp
.678431 .607843 .215686 rgb
f
141.021 10.1162 mo
141.045 10.1162 141.065 10.1133 141.09 10.1133 cv
141.404 11.0938 142.765 11.833 144.396 11.833 cv
145.98 11.833 147.3 11.1318 147.661 10.1904 cv
147.699 10.1924 147.731 10.1982 147.769 10.1982 cv
150.394 10.1982 152.52 9.01855 152.52 7.56543 cv
152.52 7.56152 152.516 7.55957 152.516 7.55371 cv
154.607 7.49121 156.263 6.76758 156.263 5.87207 cv
156.263 4.93848 154.458 4.17676 152.232 4.17676 cv
152.155 4.17676 152.081 4.18652 152.004 4.1875 cv
152.004 4.18652 152.007 4.18066 152.007 4.17676 cv
152.007 2.95996 150.303 1.97266 148.2 1.97266 cv
147.129 1.97266 146.165 2.2334 145.475 2.64551 cv
144.709 1.99219 143.629 1.5791 142.422 1.5791 cv
140.105 1.5791 138.229 3.08203 138.229 4.93359 cv
138.229 5.05371 138.258 5.16699 138.274 5.28125 cv
136.581 5.72754 135.427 6.55762 135.427 7.52441 cv
135.427 8.95605 137.932 10.1162 141.021 10.1162 cv
cp
.760784 .686275 .27451 rgb
f
132.682 40.0898 mo
132.688 40.0059 132.709 39.9287 132.709 39.8447 cv
132.709 37.8076 130.802 36.1572 128.451 36.1572 cv
126.1 36.1572 124.192 37.8076 124.192 39.8447 cv
120.541 39.8447 117.581 41.4053 117.581 43.3291 cv
117.581 45.2529 120.541 46.8135 124.192 46.8135 cv
125.362 46.8135 126.447 46.6396 127.401 46.3584 cv
128.299 46.6396 129.321 46.8135 130.424 46.8135 cv
133.866 46.8135 136.656 45.2529 136.656 43.3291 cv
136.656 41.8506 135.002 40.5967 132.682 40.0898 cv
cp
.490196 .45098 .137255 rgb
f
130.918 40.5322 mo
130.922 40.4746 130.937 40.4209 130.937 40.3633 cv
130.937 38.9736 129.633 37.8467 128.028 37.8467 cv
126.424 37.8467 125.121 38.9736 125.121 40.3633 cv
122.627 40.3633 120.607 41.4297 120.607 42.7441 cv
120.607 44.0576 122.627 45.124 125.121 45.124 cv
125.919 45.124 126.659 45.0049 127.312 44.8135 cv
127.925 45.0049 128.623 45.124 129.376 45.124 cv
131.727 45.124 133.631 44.0576 133.631 42.7441 cv
133.631 41.7344 132.503 40.877 130.918 40.5322 cv
cp
.588235 .541176 .164706 rgb
f
144.709 20.6592 mo
144.729 21.8311 146.065 22.8018 147.918 23.1641 cv
148.192 24.5488 149.583 25.5908 151.257 25.5625 cv
152.856 25.5361 154.175 24.5381 154.484 23.2334 cv
154.509 23.2334 154.532 23.2373 154.557 23.2373 cv
157.426 23.1885 159.735 21.9229 159.71 20.4092 cv
159.688 19.1914 158.153 18.1963 156.061 17.874 cv
156.061 17.8623 156.067 17.8506 156.067 17.8369 cv
156.067 16.4893 154.386 15.3994 152.317 15.3994 cv
150.246 15.3994 148.568 16.4893 148.568 17.8369 cv
148.568 17.8623 148.579 17.8867 148.579 17.9111 cv
146.35 18.2041 144.689 19.3359 144.709 20.6592 cv
cp
f
146.699 20.0547 mo
146.712 20.8311 147.6 21.4756 148.828 21.7158 cv
149.01 22.6328 149.933 23.3252 151.043 23.3076 cv
152.106 23.2891 152.979 22.6299 153.188 21.7617 cv
153.201 21.7617 153.218 21.7637 153.235 21.7637 cv
155.138 21.7314 156.669 20.8926 156.654 19.8877 cv
156.639 19.0791 155.619 18.4189 154.232 18.2061 cv
154.232 18.1963 154.237 18.1895 154.237 18.1807 cv
154.237 17.2861 153.121 16.5625 151.749 16.5625 cv
150.373 16.5625 149.26 17.2861 149.26 18.1807 cv
149.26 18.1963 149.267 18.2139 149.267 18.2305 cv
147.787 18.4258 146.685 19.1758 146.699 20.0547 cv
cp
.678431 .607843 .215686 rgb
f
138.08 107.203 mo
138.08 107.203 138.549 108.101 139.703 107.465 cv
140.23 107.171 140.656 107.484 140.95 107.588 cv
141.409 107.75 142.841 107.705 142.845 107.027 cv
142.858 104.389 140.95 103.78 140.95 103.78 cv
138.08 107.203 li
cp
.6 .247059 .160784 rgb
f
160.045 62.5928 mo
158.25 62.0088 156.462 61.2764 154.792 60.3604 cv
153.959 59.8965 153.149 59.3838 152.426 58.7607 cv
151.715 58.1426 151.042 57.4033 150.785 56.4639 cv
150.971 57.4229 151.602 58.2354 152.28 58.918 cv
152.97 59.6084 153.756 60.1934 154.569 60.7285 cv
156.206 61.79 157.943 62.6621 159.763 63.4053 cv
160.045 62.5928 li
cp
f
162.543 69.1182 mo
162.334 67.751 161.904 66.5615 161.416 65.3643 cv
160.917 64.1797 160.335 63.04 159.685 61.9463 cv
158.388 59.7549 156.847 57.7324 155.167 55.8516 cv
156.7 57.8545 158.073 59.9775 159.18 62.2197 cv
159.735 63.3379 160.217 64.4912 160.61 65.665 cv
160.992 66.8291 161.315 68.0713 161.4 69.209 cv
162.543 69.1182 li
cp
f
170.662 49.2334 mo
170.388 50.3311 169.83 51.3252 169.217 52.2568 cv
168.596 53.1885 167.873 54.0459 167.101 54.8516 cv
165.549 56.4561 163.79 57.8447 161.937 59.0771 cv
162.613 60.0049 li
164.405 58.5801 166.086 57.0049 167.532 55.2314 cv
168.25 54.3418 168.91 53.4053 169.461 52.4053 cv
170.003 51.4082 170.482 50.3525 170.662 49.2334 cv
cp
f
162.886 55.3955 mo
162.188 54.2129 161.426 53.1035 160.562 52.0479 cv
159.683 51.0225 158.745 49.9609 157.388 49.4014 cv
156.109 49.1006 155.141 48.1787 154.234 47.2256 cv
153.342 46.251 152.548 45.1768 151.838 44.0518 cv
152.466 45.2275 153.182 46.3564 154.016 47.4111 cv
154.842 48.4287 155.842 49.5127 157.175 49.9336 cv
158.272 50.4727 159.123 51.5342 159.878 52.5723 cv
160.628 53.6328 161.297 54.7783 161.87 55.9326 cv
162.886 55.3955 li
cp
f
163.047 47.2744 mo
163.026 45.835 162.493 44.5264 161.566 43.5176 cv
161.103 43.0205 160.551 42.6221 159.962 42.3262 cv
159.356 42.0303 158.794 41.8379 158.21 41.5938 cv
157.058 41.126 155.899 40.6729 154.851 40.0352 cv
153.812 39.4219 152.852 38.4697 152.727 37.1885 cv
152.747 38.4756 153.668 39.5645 154.691 40.2725 cv
155.723 41.0127 156.861 41.5596 157.977 42.1143 cv
158.522 42.3936 159.125 42.6592 159.616 42.9521 cv
160.119 43.2529 160.562 43.6357 160.917 44.0801 cv
161.625 44.9541 161.97 46.1553 161.903 47.2031 cv
163.047 47.2744 li
cp
f
162.379 43.2842 mo
163 42.166 163.468 41.0186 163.814 39.8203 cv
164.151 38.627 164.348 37.3799 164.248 36.1563 cv
164.203 37.3838 163.869 38.5674 163.407 39.6787 cv
162.945 40.7861 162.346 41.8584 161.66 42.8096 cv
162.379 43.2842 li
cp
f
163.592 49.7139 mo
164.58 47.8857 165.816 46.1084 167.296 44.6006 cv
168.041 43.8506 168.86 43.165 169.784 42.6445 cv
170.704 42.126 171.75 41.7881 172.833 41.8174 cv
171.758 41.6904 170.65 41.9365 169.655 42.3877 cv
168.654 42.8408 167.743 43.4717 166.905 44.1787 cv
166.068 44.8867 165.301 45.6748 164.585 46.5049 cv
163.87 47.3408 163.209 48.2002 162.594 49.1436 cv
163.592 49.7139 li
cp
f
166.919 55.7822 mo
166.555 54.8232 166.262 53.79 166.007 52.7666 cv
165.752 51.7373 165.54 50.6943 165.361 49.6436 cv
165.397 50.707 165.468 51.7764 165.583 52.8408 cv
165.704 53.9111 165.849 54.9629 166.097 56.043 cv
166.919 55.7822 li
cp
f
155.582 33.958 mo
157.182 34.1455 158.497 35.2412 159.336 36.5205 cv
160.215 37.8232 160.595 39.3291 160.991 40.8623 cv
161.783 43.9092 162.153 47.042 162.113 50.1865 cv
162.08 53.3311 161.799 56.498 161.676 59.6846 cv
161.406 69.2236 li
161.021 81.9189 160.548 94.6143 160.308 107.342 cv
163.751 107.322 li
163.378 94.6455 163.238 81.9385 163.011 69.2324 cv
162.969 66.0547 162.838 62.874 162.9 59.7207 cv
162.937 56.5576 163.135 53.3877 163.079 50.1787 cv
163.035 46.9707 162.566 43.7529 161.675 40.6748 cv
161.28 39.1465 160.649 37.5752 159.648 36.2939 cv
158.662 35.0225 157.194 34.0127 155.582 33.958 cv
cp
f
169.549 60.8408 mo
167.774 62.2549 166.167 63.8877 164.759 65.6963 cv
163.364 67.5078 162.167 69.5303 161.488 71.8018 cv
162.601 72.082 li
163.043 69.9521 164.016 67.9082 165.227 66.0273 cv
166.45 64.1475 167.901 62.3955 169.549 60.8408 cv
cp
f
173.545 61.4951 mo
172.274 62.6563 170.805 63.5674 169.282 64.3213 cv
167.752 65.0703 166.141 65.6309 164.497 66.0068 cv
164.722 66.8379 li
166.392 66.3066 167.995 65.5908 169.487 64.7002 cv
170.971 63.8037 172.374 62.7588 173.545 61.4951 cv
cp
f
149.967 52.8154 mo
150.498 52.8018 151.003 52.8447 151.473 52.9248 cv
151.745 51.9189 152.928 51.1387 154.371 51.1006 cv
156.037 51.0576 157.413 52.0205 157.445 53.249 cv
157.446 53.2715 157.438 53.29 157.438 53.3115 cv
159.184 53.4648 160.522 54.3262 160.55 55.3994 cv
160.582 56.6201 158.912 57.6533 156.82 57.708 cv
156.574 57.7139 156.336 57.7041 156.103 57.6846 cv
155.462 58.3799 154.428 58.8525 153.237 58.8838 cv
151.638 58.9248 150.278 58.1611 149.774 57.0752 cv
147.606 57.0508 145.869 56.1836 145.84 55.0586 cv
145.809 53.8799 147.656 52.876 149.967 52.8154 cv
cp
.588235 .541176 .164706 rgb
f
150.921 53.4658 mo
151.294 53.4561 151.65 53.4854 151.981 53.542 cv
152.172 52.835 153.005 52.2842 154.021 52.2588 cv
155.194 52.2275 156.163 52.9053 156.186 53.7705 cv
156.186 53.7861 156.181 53.7998 156.182 53.8125 cv
157.409 53.9229 158.349 54.5283 158.369 55.2842 cv
158.391 56.1416 157.217 56.8701 155.745 56.9092 cv
155.572 56.9131 155.404 56.9063 155.24 56.8906 cv
154.79 57.3818 154.06 57.7148 153.222 57.7363 cv
152.097 57.7656 151.14 57.2275 150.785 56.4639 cv
149.26 56.4463 148.038 55.8359 148.017 55.043 cv
147.995 54.2139 149.295 53.5068 150.921 53.4658 cv
cp
.678431 .607843 .215686 rgb
f
173.137 43.6787 mo
171.946 43.71 170.888 43.291 170.213 42.6299 cv
169.981 42.6611 169.743 42.6836 169.498 42.6904 cv
167.405 42.7441 165.685 41.7979 165.653 40.5791 cv
165.625 39.5049 166.916 38.5752 168.65 38.3311 cv
168.65 38.3115 168.642 38.292 168.641 38.2705 cv
168.609 37.042 169.935 36.0088 171.601 35.9648 cv
173.042 35.9268 174.265 36.6465 174.589 37.6357 cv
175.054 37.5322 175.556 37.4639 176.088 37.4502 cv
178.396 37.3896 180.294 38.2949 180.325 39.4736 cv
180.354 40.6006 178.665 41.5547 176.501 41.6924 cv
176.053 42.8027 174.734 43.6377 173.137 43.6787 cv
cp
.490196 .45098 .137255 rgb
f
171.71 42.1055 mo
171.014 42.124 170.396 41.8779 170 41.4912 cv
169.864 41.5107 169.726 41.5244 169.583 41.5273 cv
168.358 41.5596 167.354 41.0068 167.335 40.2939 cv
167.318 39.665 168.073 39.1221 169.087 38.9785 cv
169.087 38.9678 169.083 38.9561 169.082 38.9443 cv
169.063 38.2266 169.837 37.6201 170.812 37.5947 cv
171.654 37.5732 172.371 37.9951 172.559 38.5732 cv
172.831 38.5127 173.125 38.4717 173.436 38.4639 cv
174.786 38.4287 175.895 38.958 175.912 39.6475 cv
175.929 40.3057 174.942 40.8633 173.677 40.9443 cv
173.416 41.5928 172.644 42.0811 171.71 42.1055 cv
cp
.588235 .541176 .164706 rgb
f
159.108 48.2393 mo
159.077 47.0244 160.301 46.0068 161.84 45.9678 cv
161.895 45.9658 161.947 45.9756 162.001 45.9756 cv
162.001 45.9727 162 45.9678 162 45.9639 cv
161.958 44.3535 164.075 42.9932 166.727 42.9238 cv
169.381 42.8545 171.566 44.1045 171.607 45.7139 cv
171.615 46.0029 171.531 46.2783 171.409 46.5459 cv
171.482 46.541 171.553 46.5293 171.629 46.5273 cv
173.793 46.4717 175.574 47.3662 175.604 48.5264 cv
175.634 49.6865 173.903 50.6729 171.738 50.7295 cv
171.171 50.7441 170.634 50.6904 170.147 50.5879 cv
169.898 52.0518 168.264 53.2158 166.23 53.2686 cv
164 53.3262 162.158 52.0244 162.114 50.3623 cv
162.114 50.3574 162.115 50.3525 162.115 50.3496 cv
162.061 50.3535 162.009 50.3643 161.954 50.3662 cv
160.416 50.4053 159.14 49.4531 159.108 48.2393 cv
cp
.678431 .607843 .215686 rgb
f
163.049 47.7324 mo
163.03 47 163.765 46.3857 164.694 46.3623 cv
164.728 46.3613 164.759 46.3662 164.791 46.3662 cv
164.791 46.3643 164.79 46.3623 164.79 46.3604 cv
164.765 45.3877 166.04 44.5684 167.64 44.5264 cv
169.24 44.4854 170.558 45.2373 170.583 46.209 cv
170.587 46.3828 170.536 46.5508 170.462 46.71 cv
170.507 46.708 170.549 46.7002 170.596 46.6982 cv
171.901 46.665 172.974 47.2061 172.992 47.9043 cv
173.01 48.6035 171.967 49.1992 170.662 49.2334 cv
170.319 49.2412 169.996 49.21 169.701 49.1465 cv
169.552 50.0293 168.566 50.7314 167.342 50.7627 cv
165.996 50.7979 164.885 50.0146 164.859 49.0107 cv
164.859 49.0088 164.86 49.0059 164.86 49.0039 cv
164.828 49.0049 164.796 49.0117 164.763 49.0127 cv
163.834 49.0361 163.068 48.4619 163.049 47.7324 cv
cp
.760784 .686275 .27451 rgb
f
161.395 38.3857 mo
161.37 38.3857 161.348 38.3838 161.324 38.3848 cv
161.019 39.4258 159.609 40.2393 157.893 40.2842 cv
156.226 40.3271 154.818 39.6279 154.412 38.6465 cv
154.374 38.6494 154.339 38.6543 154.3 38.6553 cv
151.54 38.7275 149.27 37.5459 149.23 36.0176 cv
149.23 36.0137 149.233 36.0098 149.233 36.0049 cv
147.032 35.9961 145.27 35.2803 145.246 34.3379 cv
145.22 33.3535 147.099 32.5068 149.439 32.4453 cv
149.521 32.4434 149.598 32.4502 149.679 32.4502 cv
149.679 32.4463 149.676 32.4424 149.676 32.4385 cv
149.643 31.1592 151.408 30.0752 153.62 30.0176 cv
154.747 29.9883 155.769 30.2334 156.507 30.6475 cv
157.294 29.9404 158.418 29.4766 159.688 29.4443 cv
162.126 29.3799 164.142 30.9102 164.193 32.8594 cv
164.196 32.9834 164.168 33.1025 164.155 33.2236 cv
165.947 33.6475 167.184 34.4912 167.21 35.5068 cv
167.25 37.0137 164.646 38.3018 161.395 38.3857 cv
cp
.678431 .607843 .215686 rgb
f
159.785 36.7969 mo
159.767 36.7979 159.752 36.7959 159.734 36.7959 cv
159.524 37.5146 158.549 38.0771 157.365 38.1084 cv
156.213 38.1377 155.241 37.6533 154.961 36.9756 cv
154.934 36.9795 154.91 36.9834 154.883 36.9844 cv
152.976 37.0342 151.408 36.2168 151.381 35.1602 cv
151.381 35.1582 151.383 35.1553 151.383 35.1514 cv
149.863 35.1455 148.646 34.6514 148.629 34.001 cv
148.611 33.3223 149.908 32.7354 151.526 32.6934 cv
151.582 32.6924 151.636 32.6963 151.692 32.6963 cv
151.692 32.6953 151.689 32.6914 151.689 32.6885 cv
151.666 31.8037 152.886 31.0557 154.414 31.0146 cv
155.192 30.9951 155.897 31.165 156.407 31.4521 cv
156.951 30.9639 157.728 30.6436 158.605 30.6201 cv
160.289 30.5762 161.681 31.6328 161.716 32.9785 cv
161.718 33.0654 161.699 33.1475 161.689 33.2314 cv
162.928 33.5244 163.782 34.1055 163.8 34.8076 cv
163.827 35.8486 162.029 36.7393 159.785 36.7969 cv
cp
.760784 .686275 .27451 rgb
f
166.41 58.4189 mo
166.403 58.3584 166.388 58.3027 166.386 58.2412 cv
166.348 56.7627 167.702 55.5264 169.41 55.4814 cv
171.119 55.4365 172.536 56.6016 172.574 58.0811 cv
175.228 58.0117 177.408 59.0898 177.444 60.4873 cv
177.481 61.8857 175.359 63.0752 172.706 63.1445 cv
171.855 63.167 171.064 63.0615 170.366 62.874 cv
169.718 63.0967 168.979 63.2412 168.178 63.2627 cv
165.676 63.3271 163.62 62.2471 163.583 60.8486 cv
163.556 59.7744 164.733 58.8311 166.41 58.4189 cv
cp
.490196 .45098 .137255 rgb
f
167.7 58.707 mo
167.696 58.666 167.685 58.6279 167.683 58.585 cv
167.657 57.5752 168.583 56.7314 169.75 56.7021 cv
170.915 56.6709 171.883 57.4658 171.91 58.4756 cv
173.721 58.4287 175.21 59.165 175.234 60.1201 cv
175.259 61.0742 173.811 61.8877 172 61.9346 cv
171.419 61.9502 170.879 61.8779 170.401 61.751 cv
169.959 61.9014 169.455 62.001 168.907 62.0146 cv
167.199 62.0596 165.795 61.3203 165.771 60.3662 cv
165.751 59.6328 166.555 58.9883 167.7 58.707 cv
cp
.588235 .541176 .164706 rgb
f
157.303 44.5283 mo
157.312 45.3799 156.358 46.1104 155.019 46.4092 cv
154.846 47.4199 153.854 48.2041 152.638 48.2139 cv
151.476 48.2246 150.498 47.5254 150.249 46.583 cv
150.231 46.583 150.214 46.5859 150.196 46.5869 cv
148.111 46.6045 146.409 45.7295 146.398 44.6289 cv
146.391 43.7441 147.488 42.9922 149.002 42.7178 cv
149.002 42.71 148.997 42.7012 148.997 42.6924 cv
148.972 41.7119 150.173 40.8877 151.676 40.8486 cv
153.181 40.8096 154.42 41.5713 154.446 42.5498 cv
154.446 42.5684 154.439 42.5859 154.44 42.6045 cv
156.065 42.7754 157.293 43.5654 157.303 44.5283 cv
cp
f
155.846 44.126 mo
155.851 44.6904 155.218 45.1748 154.331 45.374 cv
154.215 46.043 153.558 46.5635 152.751 46.5723 cv
151.979 46.5791 151.332 46.1162 151.164 45.4893 cv
151.154 45.4893 151.141 45.4912 151.129 45.4912 cv
149.746 45.5049 148.617 44.9229 148.609 44.1924 cv
148.605 43.6045 149.333 43.1064 150.337 42.9248 cv
150.337 42.918 150.334 42.9131 150.333 42.9072 cv
150.317 42.2568 151.114 41.71 152.111 41.6836 cv
153.111 41.6572 153.933 42.1631 153.95 42.8125 cv
153.95 42.8242 153.946 42.8369 153.946 42.8486 cv
155.024 42.9629 155.84 43.4873 155.846 44.126 cv
cp
.678431 .607843 .215686 rgb
f
163.755 107.289 mo
163.755 107.289 163.431 107.949 162.581 107.511 cv
162.192 107.306 161.889 107.542 161.677 107.623 cv
161.347 107.75 160.305 107.743 160.289 107.252 cv
160.23 105.335 161.605 104.855 161.605 104.855 cv
163.755 107.289 li
cp
.6 .247059 .160784 rgb
f
338.614 20.9971 mo
338.739 28.2207 338.93 35.4463 339.295 42.6553 cv
339.506 46.2451 339.672 49.8906 340.231 53.373 cv
340.657 55.1572 340.727 57.041 340.852 58.833 cv
340.958 60.6455 341.032 62.4561 341.09 64.2646 cv
341.522 78.7393 341.526 93.1924 341.51 107.657 cv
338.452 107.596 li
338.934 93.167 339.393 78.7197 339.428 64.2949 cv
339.426 62.4922 339.413 60.6904 339.366 58.8955 cv
339.299 57.0869 339.29 55.335 338.938 53.582 cv
338.502 49.9053 338.491 46.3076 338.422 42.6846 cv
338.35 35.4492 338.45 28.2207 338.614 20.9971 cv
cp
f
325.454 36.5391 mo
327.006 43.9404 328.936 51.2646 331.301 58.4316 cv
332.495 62.0127 333.811 65.5498 335.35 68.9766 cv
336.897 72.3877 338.641 75.748 340.932 78.6211 cv
339.725 79.5615 li
337.399 76.4238 335.754 72.9453 334.295 69.4297 cv
332.854 65.9023 331.651 62.2979 330.573 58.6631 cv
328.44 51.3848 326.758 43.9912 325.454 36.5391 cv
cp
f
339.768 67.5928 mo
341.586 65.7393 343.188 63.5088 344.551 61.208 cv
345.917 58.8936 347.047 56.4307 347.911 53.874 cv
349.649 48.7568 350.258 43.2422 349.708 37.8135 cv
350.512 43.21 350.168 48.8047 348.639 54.1006 cv
347.883 56.749 346.844 59.3213 345.551 61.7695 cv
344.243 64.2158 342.756 66.5342 340.852 68.667 cv
339.768 67.5928 li
cp
f
334.702 70.3447 mo
334.59 69.8008 334.627 69.5645 334.602 69.1885 cv
334.588 68.168 li
334.592 66.1377 li
334.645 62.0869 li
334.811 53.9941 li
335.25 37.8135 li
335.385 53.9971 li
335.504 62.0859 li
335.596 66.1279 li
335.663 68.1416 li
335.713 69.1436 li
335.731 69.4385 335.762 69.8838 335.795 69.9971 cv
334.702 70.3447 li
cp
f
361.887 29.2705 mo
361.887 24.7744 359.579 20.8359 356.112 18.5996 cv
356.545 17.6553 356.792 16.6143 356.792 15.5186 cv
356.792 11.2256 353.114 7.74805 348.575 7.74805 cv
348.03 7.74805 347.5 7.80469 346.985 7.89941 cv
345.083 5.93652 342.282 4.69043 339.151 4.69043 cv
334.141 4.69043 329.963 7.86621 328.985 12.0908 cv
328.911 12.0898 328.84 12.0791 328.766 12.0791 cv
322.997 12.0791 318.317 17.0977 318.317 23.2881 cv
318.317 25.4922 318.92 27.542 319.942 29.2764 cv
317.1 30.9521 315.26 33.5781 315.26 36.5391 cv
315.26 40.3662 318.323 43.6416 322.67 45.0186 cv
322.667 45.1201 322.651 45.2227 322.651 45.3291 cv
322.651 50.1846 327.557 54.1201 333.604 54.1201 cv
335.561 54.1201 337.393 53.7041 338.981 52.9854 cv
340.381 53.707 341.975 54.1201 343.67 54.1201 cv
349.229 54.1201 353.735 49.7275 353.735 44.3086 cv
353.735 43.2627 353.563 42.2539 353.249 41.3076 cv
358.256 39.6943 361.887 34.915 361.887 29.2705 cv
cp
.490196 .45098 .137255 rgb
f
354.436 27.9033 mo
354.436 24.5879 352.733 21.6865 350.176 20.0381 cv
350.497 19.3408 350.678 18.5752 350.678 17.7676 cv
350.678 14.6025 347.967 12.04 344.622 12.04 cv
344.219 12.04 343.831 12.082 343.45 12.1514 cv
342.047 10.7061 339.983 9.78613 337.674 9.78613 cv
333.983 9.78613 330.903 12.126 330.18 15.2412 cv
330.127 15.2393 330.077 15.2314 330.022 15.2314 cv
325.77 15.2314 322.323 18.9316 322.323 23.4951 cv
322.323 25.1182 322.764 26.6279 323.52 27.9072 cv
321.422 29.1406 320.067 31.0771 320.067 33.2607 cv
320.067 36.0791 322.325 38.4951 325.528 39.5078 cv
325.526 39.585 325.514 39.6611 325.514 39.7393 cv
325.514 43.3174 329.129 46.2178 333.588 46.2178 cv
335.03 46.2178 336.379 45.9111 337.549 45.3818 cv
338.581 45.9131 339.758 46.2178 341.008 46.2178 cv
345.104 46.2178 348.424 42.9814 348.424 38.9873 cv
348.424 38.2139 348.297 37.4717 348.067 36.7725 cv
351.756 35.5859 354.436 32.0635 354.436 27.9033 cv
cp
.678431 .607843 .215686 rgb
f
360.827 44.4385 mo
360.571 49.7061 360.362 54.9736 360.206 60.2432 cv
360.065 65.5127 359.944 70.7871 360.073 76.042 cv
360.108 77.3516 360.163 78.6631 360.282 79.9541 cv
360.35 80.6045 360.418 81.2178 360.577 81.8408 cv
360.729 82.5215 360.827 83.1826 360.913 83.8516 cv
361.237 86.5127 361.35 89.1611 361.444 91.8115 cv
361.606 97.1084 361.598 102.388 361.502 107.692 cv
358.907 107.562 li
359.295 102.327 359.604 97.0635 359.739 91.8174 cv
359.795 89.1953 359.829 86.5635 359.661 83.9746 cv
359.616 83.332 359.557 82.6826 359.454 82.0693 cv
359.319 81.4053 359.25 80.7041 359.206 80.042 cv
359.12 78.7012 359.112 77.3779 359.112 76.0527 cv
359.145 70.7568 359.424 65.4912 359.729 60.2217 cv
360.042 54.957 360.409 49.6943 360.827 44.4385 cv
cp
.6 .247059 .160784 rgb
f
359.155 78.4531 mo
358.075 77.084 357.313 75.6416 356.594 74.1475 cv
355.899 72.6553 355.303 71.1211 354.803 69.5615 cv
353.799 66.4395 353.137 63.2334 352.715 60.0068 cv
353.327 63.2021 354.174 66.3525 355.344 69.3682 cv
355.924 70.876 356.598 72.3486 357.362 73.7598 cv
358.129 75.1553 359 76.5557 360.01 77.6885 cv
359.155 78.4531 li
cp
f
359.77 85.876 mo
360.829 83.9355 361.776 81.8701 362.625 79.7891 cv
363.473 77.7021 364.219 75.5732 364.834 73.4033 cv
366.042 69.0752 366.797 64.5313 366.252 60.0068 cv
367.053 64.4971 366.555 69.1406 365.575 73.5898 cv
365.077 75.8232 364.44 78.0244 363.7 80.1904 cv
362.95 82.3604 362.122 84.4805 361.125 86.5869 cv
359.77 85.876 li
cp
f
375.874 43.0059 mo
376.331 42.04 376.612 40.9639 376.612 39.8057 cv
376.612 35.8623 373.624 32.6641 369.942 32.6641 cv
369.483 32.6641 369.036 32.7158 368.602 32.8096 cv
367.045 29.29 363.542 26.832 359.463 26.832 cv
354.252 26.832 349.977 30.8408 349.508 35.958 cv
346.528 37.2939 344.461 40.1631 344.461 43.4932 cv
344.461 44.9756 344.874 46.3623 345.59 47.5713 cv
344.02 49.1123 343.034 51.3008 343.034 53.7393 cv
343.034 58.0293 346.071 61.5605 350 62.0967 cv
351.459 66.7793 355.731 70.1709 360.774 70.1709 cv
366.612 70.1709 371.411 65.6338 372.018 59.8096 cv
372.042 59.8096 372.063 59.8115 372.086 59.8115 cv
376.163 59.8115 379.469 55.7627 379.469 50.7627 cv
379.469 47.4658 378.022 44.5889 375.874 43.0059 cv
cp
.588235 .541176 .164706 rgb
f
370.874 43.4307 mo
371.206 42.7314 371.409 41.9551 371.409 41.1201 cv
371.409 38.2725 369.254 35.9668 366.596 35.9668 cv
366.264 35.9668 365.94 36.0029 365.627 36.0723 cv
364.504 33.5283 361.977 31.7568 359.034 31.7568 cv
355.272 31.7568 352.184 34.6494 351.848 38.3428 cv
349.698 39.3086 348.204 41.3779 348.204 43.7822 cv
348.204 44.8506 348.502 45.8545 349.018 46.7266 cv
347.887 47.8369 347.172 49.417 347.172 51.1787 cv
347.172 54.2744 349.366 56.8223 352.202 57.21 cv
353.254 60.5879 356.336 63.0381 359.979 63.0381 cv
364.19 63.0381 367.655 59.7637 368.094 55.5586 cv
368.11 55.5586 368.127 55.5596 368.143 55.5596 cv
371.086 55.5596 373.471 52.6377 373.471 49.0283 cv
373.471 46.6484 372.428 44.5713 370.874 43.4307 cv
cp
.760784 .686275 .27451 rgb
f
241.594 62.8643 mo
241.594 62.8643 242.44 66.4326 243.17 71.5264 cv
243.637 74.7949 242.706 77.8672 242.27 78.6143 cv
240.305 81.9736 235.557 71.4141 235.557 71.4141 cv
229.708 73.0654 li
229.708 73.0654 236.008 77.5654 236.157 82.6641 cv
236.307 87.7637 238.323 92.0498 236.374 94.4512 cv
234.422 96.8516 232.182 103.74 227.176 104.953 cv
224.915 105.502 229.258 107.266 231.657 106.215 cv
233.944 105.216 235.502 103.821 237.057 104.924 cv
239.063 106.346 239.936 107.632 240.75 107.414 cv
241.274 107.273 242.241 105.909 243.967 105.276 cv
245.557 104.695 247.602 105.957 248.514 107.021 cv
249.131 107.743 249.583 108.201 250.426 106.683 cv
251.432 104.875 253.393 104.583 254.532 105.392 cv
256.858 107.04 258.452 106.974 260.403 105.846 cv
261.583 105.166 258.17 106.103 256.258 101.04 cv
254.346 95.9775 252.057 93.9141 253.52 87.8389 cv
254.983 81.7637 262.182 69.1641 262.182 69.1641 cv
259.573 65.4023 li
259.573 65.4023 250.145 84.6895 249.358 82.1016 cv
248.569 79.5137 249.807 74.3389 248.682 70.627 cv
247.557 66.9141 249.02 58.252 249.02 58.252 cv
241.594 62.8643 li
cp
.6 .247059 .160784 rgb
f
282.643 43.1123 mo
282.643 39.541 280.01 36.5918 276.551 35.9902 cv
276.899 34.9209 277.124 33.7852 277.124 32.5879 cv
277.124 26.9688 272.989 22.4082 267.889 22.4082 cv
262.793 22.4082 258.659 26.9688 258.659 32.5879 cv
258.659 37.4424 261.752 41.498 265.883 42.5088 cv
266.12 43.4932 266.629 44.375 267.34 45.0771 cv
264.358 46.5996 262.282 49.8447 262.282 53.6377 cv
262.282 54.0605 262.348 54.4648 262.401 54.875 cv
261.311 54.207 260.038 53.8076 258.659 53.8076 cv
254.754 53.8076 251.586 56.8984 251.586 60.709 cv
251.586 64.5234 254.754 67.6162 258.659 67.6162 cv
258.7 67.6162 258.741 67.6016 258.78 67.6016 cv
259.37 71.4971 263.2 74.5137 267.889 74.5137 cv
272.989 74.5137 277.124 70.9609 277.124 66.5752 cv
277.124 64.8262 276.438 63.2178 275.321 61.9063 cv
278.028 60.291 279.883 57.2109 279.883 53.6377 cv
279.883 52.0957 279.51 50.665 278.907 49.3779 cv
281.127 48.1338 282.643 45.8066 282.643 43.1123 cv
cp
.490196 .45098 .137255 rgb
f
244.946 61.1621 mo
244.946 57.2852 241.708 54.1445 237.713 54.1445 cv
234.149 54.1445 231.204 56.6484 230.606 59.9414 cv
229.637 59.9941 228.706 60.1709 227.84 60.4863 cv
227.393 59.584 226.741 58.7568 225.891 58.0186 cv
228.006 56.4121 229.325 54.1797 229.325 51.6953 cv
229.325 48.918 227.647 46.4707 225.079 44.8467 cv
225.374 44.1777 225.542 43.4463 225.542 42.6758 cv
225.542 42.6602 225.538 42.6455 225.536 42.6338 cv
225.711 42.6387 225.872 42.6758 226.047 42.6758 cv
232.305 42.6758 237.379 38.5068 237.379 33.3594 cv
237.379 32.0586 237.053 30.8223 236.465 29.6963 cv
237.032 28.7383 237.379 27.6621 237.379 26.502 cv
237.379 22.7158 233.973 19.6455 229.768 19.6455 cv
226.323 19.6455 223.446 21.7227 222.512 24.5527 cv
217.999 25.7813 214.719 29.2373 214.719 33.3594 cv
214.719 34.9463 215.247 36.4199 216.098 37.7275 cv
214.268 38.7354 213.028 40.5645 213.028 42.6758 cv
213.028 43.0322 213.075 43.3789 213.143 43.7178 cv
209.293 45.1338 206.61 48.1582 206.61 51.6953 cv
206.61 53.3672 207.239 54.9102 208.27 56.2402 cv
205.018 57.7832 202.881 60.291 202.881 63.1416 cv
202.881 67.832 208.627 71.6357 215.713 71.6357 cv
218.215 71.6357 220.528 71.1426 222.5 70.3232 cv
223.528 73.8525 226.979 76.4658 231.122 76.4658 cv
236.073 76.4658 240.086 72.7568 240.086 68.1797 cv
240.086 68.041 240.049 67.9121 240.042 67.7754 cv
242.889 66.8301 244.946 64.2422 244.946 61.1621 cv
cp
f
275.172 39.5615 mo
275.172 36.5703 273.477 34.0068 271.014 32.6895 cv
272.43 31.2676 273.307 29.3076 273.307 27.1445 cv
273.307 22.8057 269.79 19.2881 265.454 19.2881 cv
265.297 19.2881 265.149 19.3252 264.995 19.334 cv
263.79 14.3418 258.833 10.5957 252.883 10.5957 cv
248.493 10.5957 244.657 12.6494 242.456 15.7256 cv
241.606 15.4346 240.702 15.248 239.747 15.248 cv
235.674 15.248 232.334 18.1309 231.75 21.875 cv
225.342 22.8242 220.469 27.4336 220.469 33.0049 cv
220.469 35.04 221.168 36.9209 222.303 38.5713 cv
217.881 39.9912 214.719 43.6113 214.719 47.8867 cv
214.719 52.2754 218.057 55.9619 222.663 57.2949 cv
222.364 58.1201 222.161 58.9824 222.161 59.8936 cv
222.161 64.5645 226.399 68.3486 231.631 68.3486 cv
235.469 68.3486 238.76 66.2979 240.247 63.3652 cv
240.846 63.5146 241.465 63.6152 242.112 63.6152 cv
245.069 63.6152 247.594 61.999 248.797 59.6777 cv
250.348 63.1738 253.7 65.6152 257.61 65.6152 cv
262.485 65.6152 266.489 61.834 267.204 56.9121 cv
271.618 55.8184 274.834 52.6709 274.834 48.9072 cv
274.834 47.334 274.241 45.8828 273.266 44.6201 cv
274.438 43.2539 275.172 41.5 275.172 39.5615 cv
cp
.588235 .541176 .164706 rgb
f
265.825 36.0137 mo
265.825 33.9512 264.651 32.1787 262.952 31.2676 cv
263.93 30.2871 264.534 28.9346 264.534 27.4375 cv
264.534 24.4414 262.106 22.0117 259.11 22.0117 cv
259 22.0117 258.903 22.0371 258.793 22.041 cv
257.961 18.5938 254.536 16.0068 250.43 16.0068 cv
247.395 16.0068 244.745 17.4238 243.223 19.5479 cv
242.637 19.3516 242.012 19.2207 241.356 19.2207 cv
238.543 19.2207 236.237 21.2109 235.833 23.7988 cv
231.407 24.4551 228.038 27.6367 228.038 31.4863 cv
228.038 32.8887 228.524 34.1904 229.307 35.332 cv
226.252 36.3105 224.067 38.8086 224.067 41.7656 cv
224.067 44.7959 226.372 47.3389 229.553 48.2637 cv
229.346 48.833 229.206 49.4277 229.206 50.0586 cv
229.206 53.2861 232.133 55.8984 235.749 55.8984 cv
238.399 55.8984 240.674 54.4814 241.698 52.457 cv
242.112 52.5586 242.54 52.6289 242.989 52.6289 cv
245.03 52.6289 246.774 51.5117 247.606 49.9082 cv
248.678 52.3242 250.989 54.0078 253.692 54.0078 cv
257.059 54.0078 259.827 51.3994 260.319 47.999 cv
263.368 47.2461 265.59 45.0684 265.59 42.4697 cv
265.59 41.3799 265.178 40.3779 264.51 39.5117 cv
265.319 38.5645 265.825 37.3545 265.825 36.0137 cv
cp
.760784 .686275 .27451 rgb
f
249.456 91.1777 mo
249.456 93.1504 248.622 94.9121 247.004 94.9648 cv
246.071 94.9971 245.924 96.8779 245.006 96.8779 cv
243.932 96.8779 242.821 96.1426 242.051 95.3311 cv
241.063 94.2832 240.557 92.9473 240.557 91.1777 cv
240.557 89.8076 241.268 88.8057 241.897 87.8242 cv
242.713 86.5449 243.62 85.4766 245.006 85.4766 cv
245.792 85.4766 246.469 86.0605 247.11 86.5195 cv
248.471 87.4932 249.456 89.0371 249.456 91.1777 cv
cp
.301961 .12549 .0823529 rgb
f
54.354 81.6475 mo
54.354 81.6475 54.0459 77.585 58.5503 75.7822 cv
63.0527 73.9834 70.2017 73.2607 70.4097 67.6748 cv
68.6377 67.6748 li
68.6377 67.6748 69.0771 71.2783 65.0742 72.1787 cv
61.0718 73.0811 56.9248 73.2607 54.4063 76.5029 cv
52.7544 78.6299 51.4302 78.1025 50.5601 76.7275 cv
49.6885 75.3525 50.5601 82.8096 50.5601 82.8096 cv
54.354 81.6475 li
cp
.6 .247059 .160784 rgb
f
31.1064 62.5107 mo
31.1064 62.5107 32.0674 71.6396 37.1123 74.5205 cv
42.1558 77.4053 48.0752 79.3857 49.5166 85.5107 cv
50.958 91.6377 41.917 96.1396 41.1353 101.185 cv
40.354 106.228 33.5088 105.149 33.5088 105.149 cv
33.5088 105.149 34.3486 107.431 40.354 106.228 cv
46.3594 105.028 45.1582 106.687 48.041 106.579 cv
50.9238 106.47 51.6436 104.065 53.0859 104.788 cv
54.5264 105.509 59.0908 107.431 63.6538 107.669 cv
68.2183 107.911 60.5308 106.229 58.1299 103.587 cv
55.728 100.944 51.4038 100.944 53.5659 97.8213 cv
55.728 94.6982 58.3687 88.4561 55.4873 83.4111 cv
52.6045 78.3662 47.3896 74.9033 49.5166 71.3486 cv
51.6436 67.7979 61.3545 62.6182 59.9824 55.5986 cv
58.3687 55.5986 li
58.3687 55.5986 58.6104 61.0693 55.728 62.8701 cv
52.8452 64.6729 48.6211 66.835 48.0913 68.2764 cv
47.5605 69.7178 43.5962 75.6025 40.1143 73.0811 cv
37.623 71.2783 36.9912 72.6025 35.79 70.2002 cv
34.5884 67.7979 32.5537 65.001 32.4902 62.4346 cv
32.4282 59.8701 31.1064 62.5107 31.1064 62.5107 cv
cp
f
65.8711 23.958 mo
65.9424 23.6045 65.9707 23.2412 65.9473 22.8682 cv
65.8008 20.5596 63.7725 18.7275 61.0894 18.2002 cv
61.1563 17.8115 61.1802 17.4111 61.1543 17.0029 cv
60.9873 14.3721 58.8506 12.2861 56.104 11.8154 cv
55.3057 9.59668 53.5234 8.09863 51.5483 8.22363 cv
50.7324 8.27441 49.9829 8.60059 49.3477 9.12793 cv
48.6118 8.7002 47.7715 8.46387 46.8843 8.51855 cv
45.5249 8.60449 44.353 9.33301 43.5645 10.4092 cv
42.6641 10.0967 41.6885 9.9541 40.6777 10.0186 cv
36.7534 10.2686 33.749 13.5381 33.7642 17.4189 cv
33.0796 17.2783 32.3613 17.2217 31.6265 17.2686 cv
27.4448 17.5342 24.2554 20.915 24.5039 24.8193 cv
24.709 28.0439 27.2041 30.6143 30.4258 31.2588 cv
30.4111 31.4229 30.4082 31.5947 30.4185 31.7666 cv
30.5825 34.3506 33.6738 36.2607 37.3203 36.0264 cv
39.7861 35.8701 41.873 34.7725 42.917 33.2783 cv
44.5166 34.6201 46.9395 35.4014 49.6064 35.2314 cv
51.1279 35.1377 52.5288 34.7373 53.7197 34.1357 cv
55.4365 35.6514 58.0308 36.54 60.8789 36.3604 cv
65.7588 36.0459 69.5215 32.7295 69.2813 28.9502 cv
69.1489 26.874 67.834 25.0928 65.8711 23.958 cv
cp
.490196 .45098 .137255 rgb
f
58.6396 22.8018 mo
58.6899 22.5518 58.71 22.2959 58.6924 22.0361 cv
58.5898 20.415 57.166 19.1279 55.2813 18.7588 cv
55.3276 18.4873 55.3452 18.2021 55.3267 17.917 cv
55.208 16.0654 53.708 14.6064 51.7798 14.2725 cv
51.2202 12.7178 49.9678 11.6631 48.5811 11.751 cv
48.0068 11.7861 47.481 12.0166 47.0356 12.3857 cv
46.5176 12.085 45.9282 11.9209 45.3057 11.958 cv
44.3496 12.0205 43.5288 12.5322 42.9736 13.2861 cv
42.3408 13.0674 41.6567 12.9658 40.9478 13.0127 cv
38.1914 13.1885 36.082 15.4834 36.0928 18.21 cv
35.6108 18.1104 35.1069 18.0693 34.5903 18.1025 cv
31.6533 18.29 29.4141 20.6631 29.5889 23.4053 cv
29.7334 25.6709 31.4844 27.4775 33.7476 27.9307 cv
33.7373 28.0439 33.7344 28.165 33.7412 28.2861 cv
33.8564 30.1006 36.0269 31.4404 38.5889 31.2744 cv
40.3193 31.165 41.7866 30.3955 42.519 29.3467 cv
43.6431 30.29 45.3457 30.8389 47.2173 30.7178 cv
48.2861 30.6514 49.2695 30.3701 50.106 29.9502 cv
51.3125 31.0127 53.1333 31.6377 55.1338 31.5107 cv
58.561 31.292 61.2021 28.9619 61.0337 26.3057 cv
60.9414 24.8486 60.0176 23.5986 58.6396 22.8018 cv
cp
.588235 .541176 .164706 rgb
f
58.9834 63.8701 mo
58.9404 63.6572 58.9238 63.4365 58.9395 63.21 cv
59.0264 61.8252 60.2471 60.7197 61.8628 60.4033 cv
61.8232 60.1689 61.8071 59.9268 61.8242 59.6826 cv
61.9253 58.0986 63.2109 56.8447 64.8643 56.5596 cv
65.3447 55.2256 66.4185 54.3193 67.6064 54.3975 cv
68.0986 54.4287 68.5493 54.624 68.9321 54.9404 cv
69.3755 54.6826 69.8813 54.542 70.4146 54.5752 cv
71.2349 54.6279 71.939 55.0674 72.4131 55.7119 cv
72.9561 55.5244 73.542 55.4404 74.1514 55.4795 cv
76.5142 55.6318 78.3228 57.5967 78.314 59.9326 cv
78.7266 59.8486 79.1592 59.8154 79.6006 59.8408 cv
82.1182 60.001 84.0386 62.0361 83.8887 64.3877 cv
83.7656 66.3291 82.2632 67.876 80.3232 68.2666 cv
80.3311 68.3643 80.334 68.4658 80.3267 68.5713 cv
80.229 70.126 78.3687 71.2764 76.1729 71.1338 cv
74.6875 71.04 73.4321 70.3799 72.8037 69.4834 cv
71.8398 70.29 70.3809 70.7607 68.7764 70.6553 cv
67.8599 70.5967 67.0166 70.3584 66.2993 69.999 cv
65.2651 70.9092 63.7051 71.4443 61.9893 71.335 cv
59.0508 71.1475 56.7866 69.1494 56.9307 66.8721 cv
57.0107 65.624 57.8022 64.5537 58.9834 63.8701 cv
cp
f
87.7256 47.7139 mo
87.8472 47.2568 87.9141 46.7842 87.9141 46.2998 cv
87.9141 43.2764 85.4209 40.7197 81.9648 39.8096 cv
82.084 39.3076 82.1494 38.7861 82.1494 38.2529 cv
82.1494 34.8037 79.5356 31.9092 75.9937 31.0635 cv
75.1343 28.1104 72.9341 26.001 70.3496 26.001 cv
69.2778 26.001 68.2754 26.3662 67.4028 26.999 cv
66.478 26.3799 65.4028 26.001 64.2397 26.001 cv
62.4585 26.001 60.8706 26.8545 59.7534 28.1924 cv
58.6045 27.71 57.3447 27.4424 56.0205 27.4424 cv
50.9917 27.4424 46.8643 31.2861 46.4053 36.1924 cv
45.2402 34.751 43.4585 33.8076 41.4351 33.8076 cv
41.2964 33.8076 41.166 33.8369 41.0283 33.8486 cv
39.4453 31.542 36.5132 29.9873 33.1475 29.9873 cv
30.9468 29.9873 28.9277 30.6514 27.3506 31.7568 cv
26.0752 30.0752 24.1016 28.9756 21.8589 28.9756 cv
18.1001 28.9756 15.0552 32.0205 14.9146 35.8232 cv
11.5791 37.0889 9.24805 39.958 9.24805 43.2939 cv
9.24805 43.8018 9.30762 44.2939 9.40967 44.7705 cv
7.46826 45.7822 6.24561 47.2197 6.24561 48.8213 cv
6.24561 49.1943 6.31299 49.5557 6.43848 49.9072 cv
2.7002 50.8525 0 53.5557 0 56.7471 cv
0 60.7275 4.19434 63.9521 9.36816 63.9521 cv
10.1216 63.9521 10.8491 63.8779 11.5513 63.749 cv
11.7749 67.335 16.2969 70.2002 21.8589 70.2002 cv
25.814 70.2002 29.2476 68.751 30.9819 66.624 cv
31.6777 66.7568 32.3999 66.835 33.1475 66.835 cv
37.105 66.835 40.4629 64.8447 41.7295 62.0654 cv
43.4346 62.9463 45.5293 63.4736 47.8008 63.4736 cv
52.3584 63.4736 56.2173 61.3799 57.5894 58.4717 cv
59.5669 60.0674 62.4077 61.0713 65.5752 61.0713 cv
67.5679 61.0713 69.4277 60.6689 71.0298 59.9795 cv
73.146 62.1025 76.4541 63.4736 80.1846 63.4736 cv
86.5757 63.4736 91.7578 59.46 91.7578 54.5088 cv
91.7578 51.79 90.1914 49.3584 87.7256 47.7139 cv
cp
.678431 .607843 .215686 rgb
f
78.7095 45.8076 mo
78.896 45.3135 79.0264 44.7998 79.0264 44.2568 cv
79.0264 41.6318 76.6846 39.4443 73.5527 38.8818 cv
73.7808 38.3135 73.915 37.6963 73.915 37.0498 cv
73.915 34.2646 71.6187 32.0068 68.7842 32.0068 cv
66.7266 32.0068 64.9639 33.2041 64.1475 34.9248 cv
63.0537 34.2998 61.729 33.9248 60.293 33.9248 cv
56.5781 33.9248 53.5659 36.3818 53.5659 39.4092 cv
53.5659 39.6436 53.6157 39.8701 53.6519 40.0986 cv
51.7197 40.8193 50.2744 42.085 49.751 43.6182 cv
48.4785 42.3135 46.2959 41.4482 43.8096 41.4482 cv
43.1245 41.4482 42.4746 41.5361 41.8486 41.6572 cv
40.5303 38.9521 37.3979 37.0498 33.7412 37.0498 cv
30.8638 37.0498 28.3174 38.2314 26.7168 40.0518 cv
25.8857 39.6807 24.9316 39.4521 23.9004 39.4521 cv
20.7832 39.4521 18.2554 41.3896 18.2554 43.7764 cv
18.2554 44.8916 18.8213 45.8994 19.7275 46.6631 cv
15.4463 46.7314 12.0107 48.7432 12.0107 51.2217 cv
12.0107 52.2881 12.6494 53.2646 13.7129 54.042 cv
11.9355 54.9658 10.8096 56.3174 10.8096 57.8252 cv
10.8096 60.6143 14.627 62.8701 19.3369 62.8701 cv
21.8091 62.8701 24.0293 62.2432 25.5869 61.249 cv
27.0938 62.0381 29.0132 62.5107 31.1064 62.5107 cv
35.9492 62.5107 39.874 59.9854 39.874 56.8682 cv
39.874 56.5811 39.8301 56.2979 39.7666 56.0244 cv
41.4619 57.1377 43.7217 57.8271 46.2119 57.8271 cv
50.3613 57.8271 53.8804 55.9307 55.1826 53.29 cv
56.7314 54.7998 59.2451 55.7861 62.0928 55.7861 cv
64.7412 55.7861 67.1074 54.9346 68.6709 53.6006 cv
69.7725 56.0537 72.979 57.8271 76.7661 57.8271 cv
81.4639 57.8271 85.2725 55.1006 85.2725 51.7354 cv
85.2725 48.8525 82.4697 46.4385 78.7095 45.8076 cv
cp
.760784 .686275 .27451 rgb
f
28.4482 395.083 mo
30.8994 391.19 28.625 376.997 30.2002 370.661 cv
30.2354 370.522 30.2725 370.375 30.3057 370.232 cv
62.4316 370.232 li
62.7129 371.286 62.8545 372.241 62.7754 373.063 cv
61.3213 388.295 65.666 397.413 71.0898 397.627 cv
74.5469 397.769 68.4775 402.149 62.2197 399.83 cv
55.957 397.509 54.3545 403.318 52.1816 404.187 cv
50.0029 405.06 47.8057 400.995 45.9297 400.995 cv
44.0479 400.995 38.7227 404.725 34.957 404.306 cv
31.1924 403.894 38.1084 401.116 35.8984 399.688 cv
34.3271 398.674 31.0879 403.393 24.5117 401.352 cv
17.9268 399.316 24.3779 401.552 28.4482 395.083 cv
cp
.6 .247059 .160784 rgb
f
36.2227 402.355 mo
39.5898 402.76 44.3477 399.161 46.0313 399.161 cv
47.709 399.161 49.6738 403.082 51.6211 402.239 cv
53.5615 401.405 54.9971 395.803 60.5947 398.037 cv
64.7295 399.692 68.7666 397.818 69.3486 396.67 cv
69.9121 396.926 70.4941 397.072 71.0898 397.098 cv
74.5469 397.25 68.4775 401.979 62.2197 399.475 cv
55.957 396.973 54.3545 403.24 52.1816 404.174 cv
50.0029 405.117 47.8057 400.73 45.9297 400.73 cv
44.0479 400.73 38.7227 404.755 34.957 404.305 cv
32.8447 404.055 34.0947 403.002 35.208 401.853 cv
35.248 402.096 35.5322 402.275 36.2227 402.355 cv
cp
f
24.4033 398.572 mo
24.5693 398.748 25.3037 398.978 26.8877 399.506 cv
32.7656 401.475 35.6582 396.926 37.0635 397.902 cv
37.9814 398.543 37.1367 399.463 36.3096 400.305 cv
36.4014 399.944 36.3076 399.607 35.8984 399.321 cv
34.3271 398.228 31.0879 403.317 24.5117 401.116 cv
19.9863 399.607 21.6182 400.273 24.4033 398.572 cv
cp
f
30.2734 370.181 mo
30.2734 368.573 37.4736 366.272 46.3525 366.272 cv
55.2344 366.272 62.4316 368.573 62.4316 370.181 cv
62.4316 371.786 55.2344 375.087 46.3525 375.087 cv
37.4736 375.087 30.2734 371.786 30.2734 370.181 cv
cp
.858824 .486275 .32549 rgb
f
33.5088 370.314 mo
33.5088 371.11 38.8389 373.612 46.3525 373.612 cv
53.8672 373.612 59.1953 371.11 59.1953 370.314 cv
59.1953 369.573 54.0781 367.747 46.3525 367.747 cv
38.6279 367.747 33.5088 369.573 33.5088 370.314 cv
cp
32.9863 370.314 mo
32.9863 368.686 39.4805 367.148 46.3525 367.148 cv
53.2236 367.148 59.7197 368.686 59.7197 370.314 cv
59.7197 371.979 53.1094 374.211 46.3525 374.211 cv
39.5938 374.211 32.9863 371.979 32.9863 370.314 cv
cp
.741176 .376471 .223529 rgb
f
36.96 370.427 mo
37.1064 370.975 40.9941 372.563 46.3525 372.563 cv
51.71 372.563 55.5986 370.975 55.7451 370.452 cv
55.5771 369.947 51.8545 368.795 46.3525 368.795 cv
40.8496 368.795 37.1279 369.947 36.96 370.427 cv
cp
36.5254 370.438 mo
36.5254 369.232 41.8076 368.297 46.3525 368.297 cv
50.8965 368.297 56.1797 369.232 56.1797 370.438 cv
56.1797 371.561 51.3193 373.062 46.3525 373.062 cv
41.3838 373.062 36.5254 371.561 36.5254 370.438 cv
cp
f
46.3525 369.576 mo
42.9316 369.576 40.3594 370.188 40.0225 370.535 cv
40.3477 370.926 43.0117 371.783 46.3525 371.783 cv
49.6943 371.783 52.3574 370.926 52.6826 370.535 cv
52.3447 370.188 49.7734 369.576 46.3525 369.576 cv
cp
39.6543 370.531 mo
39.6543 369.658 43.6152 369.176 46.3525 369.176 cv
49.0898 369.176 53.0498 369.658 53.0498 370.531 cv
53.0498 371.317 49.5439 372.182 46.3525 372.182 cv
43.1602 372.182 39.6543 371.317 39.6543 370.531 cv
cp
f
46.3525 370.287 mo
44.666 370.287 43.3301 370.483 42.8887 370.628 cv
43.333 370.805 44.6914 371.072 46.3525 371.072 cv
48.0146 371.072 49.373 370.805 49.8154 370.628 cv
49.375 370.483 48.04 370.287 46.3525 370.287 cv
cp
42.5088 370.62 mo
42.5088 370.016 46.3145 369.987 46.3525 369.987 cv
46.3906 369.987 50.1982 370.016 50.1982 370.62 cv
50.1982 371.11 47.6943 371.37 46.3525 371.37 cv
45.0117 371.37 42.5088 371.11 42.5088 370.62 cv
cp
f
38.7822 373.062 mo
37.1924 373.952 li
36.7451 377.732 li
35.501 373.449 li
38.7822 373.062 li
cp
.301961 .12549 .0823529 rgb
f
53.3926 374.4 mo
52.209 373.319 li
55.2793 373.979 li
54.1797 380.324 li
53.3926 374.4 li
cp
f
28.4482 395.083 mo
30.4258 391.942 29.3281 382.101 29.6592 375.087 cv
30.1621 377.458 32.0098 391.669 29.5752 395.574 cv
26.8838 399.887 25.6104 398.617 26.8877 399.859 cv
27.2852 400.246 26.8584 400.955 26.0625 401.711 cv
25.5645 401.627 25.0527 401.52 24.5117 401.352 cv
17.9268 399.316 24.3779 401.552 28.4482 395.083 cv
cp
.6 .247059 .160784 rgb
f
348.352 394.613 mo
348.03 394.195 347.829 393.67 347.829 393.091 cv
347.829 391.904 348.641 390.916 349.717 390.696 cv
349.702 390.514 349.692 390.33 349.692 390.144 cv
349.692 386.966 352.165 384.389 355.213 384.389 cv
355.852 384.389 356.463 384.506 357.034 384.715 cv
357.528 382.384 359.516 380.639 361.901 380.639 cv
364.274 380.639 366.25 382.367 366.76 384.678 cv
367.422 383.937 368.362 383.464 369.415 383.464 cv
371.424 383.464 373.053 385.161 373.053 387.254 cv
373.053 387.945 372.864 388.584 372.553 389.141 cv
372.719 389.128 372.885 389.114 373.053 389.114 cv
376.737 389.114 379.725 392.227 379.725 396.066 cv
379.725 399.907 376.737 403.019 373.053 403.019 cv
371.67 403.019 370.385 402.58 369.317 401.829 cv
368.62 402.322 367.782 402.612 366.874 402.612 cv
365.633 402.612 364.52 402.064 363.729 401.195 cv
363.167 402.33 362.043 403.111 360.735 403.111 cv
359.684 403.111 358.758 402.601 358.137 401.816 cv
357.288 402.365 356.286 402.686 355.213 402.686 cv
354.182 402.686 353.221 402.388 352.391 401.881 cv
351.667 402.542 350.729 402.955 349.692 402.955 cv
347.415 402.955 345.569 401.031 345.569 398.659 cv
345.569 396.776 346.737 395.195 348.352 394.613 cv
cp
.490196 .45098 .137255 rgb
f
358.137 401.816 mo
357.288 402.365 356.286 402.686 355.213 402.686 cv
354.182 402.686 353.221 402.388 352.391 401.881 cv
351.934 402.298 351.383 402.6 350.784 402.778 cv
350.295 402.184 349.989 401.421 349.989 400.576 cv
349.989 399.084 350.915 397.829 352.198 397.366 cv
351.94 397.034 351.782 396.619 351.782 396.158 cv
351.782 395.217 352.426 394.433 353.28 394.261 cv
353.268 394.115 353.258 393.969 353.258 393.82 cv
353.258 391.3 355.219 389.257 357.639 389.257 cv
358.143 389.257 358.629 389.352 359.081 389.518 cv
359.473 387.667 361.051 386.282 362.942 386.282 cv
364.823 386.282 366.391 387.655 366.795 389.486 cv
367.321 388.898 368.067 388.524 368.901 388.524 cv
370.495 388.524 371.784 389.871 371.784 391.531 cv
371.784 392.078 371.637 392.585 371.387 393.026 cv
371.518 393.018 371.651 393.005 371.784 393.005 cv
374.708 393.005 377.079 395.475 377.079 398.519 cv
377.079 400.133 376.407 401.581 375.346 402.588 cv
374.631 402.862 373.86 403.019 373.053 403.019 cv
371.67 403.019 370.385 402.58 369.317 401.829 cv
368.62 402.322 367.782 402.612 366.874 402.612 cv
365.633 402.612 364.52 402.064 363.729 401.195 cv
363.167 402.33 362.043 403.111 360.735 403.111 cv
359.684 403.111 358.758 402.601 358.137 401.816 cv
cp
.588235 .541176 .164706 rgb
f
365.87 392.241 mo
366.354 391.638 366.657 390.882 366.657 390.047 cv
366.657 388.338 365.436 386.913 363.817 386.597 cv
363.842 386.334 363.858 386.069 363.858 385.801 cv
363.858 381.223 360.145 377.51 355.567 377.51 cv
354.61 377.51 353.692 377.68 352.836 377.979 cv
352.092 374.621 349.106 372.107 345.526 372.107 cv
341.965 372.107 338.997 374.598 338.233 377.927 cv
337.235 376.857 335.825 376.176 334.245 376.176 cv
331.227 376.176 328.782 378.622 328.782 381.639 cv
328.782 382.633 329.067 383.555 329.532 384.357 cv
329.284 384.338 329.036 384.318 328.782 384.318 cv
323.25 384.318 318.766 388.803 318.766 394.336 cv
318.766 399.868 323.25 404.353 328.782 404.353 cv
330.86 404.353 332.79 403.72 334.391 402.637 cv
335.436 403.349 336.698 403.766 338.059 403.766 cv
339.922 403.766 341.592 402.977 342.782 401.725 cv
343.625 403.357 345.311 404.486 347.276 404.486 cv
348.854 404.486 350.247 403.75 351.176 402.621 cv
352.456 403.408 353.956 403.871 355.567 403.871 cv
357.116 403.871 358.559 403.443 359.803 402.712 cv
360.893 403.664 362.299 404.259 363.858 404.259 cv
367.276 404.259 370.049 401.487 370.049 398.069 cv
370.049 395.357 368.295 393.079 365.87 392.241 cv
cp
.678431 .607843 .215686 rgb
f
351.176 402.621 mo
352.456 403.408 353.956 403.871 355.567 403.871 cv
357.116 403.871 358.559 403.443 359.803 402.712 cv
360.491 403.313 361.319 403.749 362.219 404.006 cv
362.952 403.148 363.413 402.049 363.413 400.832 cv
363.413 398.682 362.024 396.874 360.096 396.208 cv
360.483 395.73 360.721 395.13 360.721 394.468 cv
360.721 393.111 359.752 391.981 358.469 391.734 cv
358.489 391.523 358.502 391.313 358.502 391.1 cv
358.502 387.469 355.559 384.524 351.926 384.524 cv
351.168 384.524 350.438 384.66 349.76 384.898 cv
349.17 382.233 346.801 380.239 343.961 380.239 cv
341.141 380.239 338.786 382.216 338.176 384.855 cv
337.389 384.008 336.268 383.468 335.014 383.468 cv
332.624 383.468 330.686 385.407 330.686 387.801 cv
330.686 388.589 330.911 389.32 331.282 389.955 cv
331.083 389.942 330.885 389.925 330.686 389.925 cv
326.297 389.925 322.739 393.482 322.739 397.867 cv
322.739 400.193 323.745 402.279 325.336 403.73 cv
326.413 404.125 327.571 404.353 328.782 404.353 cv
330.86 404.353 332.79 403.72 334.391 402.637 cv
335.436 403.349 336.698 403.766 338.059 403.766 cv
339.922 403.766 341.592 402.977 342.782 401.725 cv
343.625 403.357 345.311 404.486 347.276 404.486 cv
348.854 404.486 350.247 403.75 351.176 402.621 cv
cp
.760784 .686275 .27451 rgb
f
347.604 277.054 mo
347.604 277.054 356.286 273.111 347.926 260.285 cv
347.926 260.285 337.866 273.505 347.604 277.054 cv
cp
f
341.643 283.684 mo
341.643 283.684 335.309 281.372 340.963 272.179 cv
340.963 272.179 348.536 280.794 341.643 283.684 cv
cp
.490196 .45098 .137255 rgb
f
341.432 276.864 mo
340.922 278.069 340.903 279.419 341.116 280.676 cv
341.334 281.95 341.833 283.148 342.459 284.263 cv
343.747 286.491 345.567 288.355 347.536 289.999 cv
346.872 290.748 li
344.956 288.934 343.2 286.882 342.02 284.497 cv
341.44 283.308 341.01 282.031 340.868 280.713 cv
340.733 279.408 340.84 278.035 341.432 276.864 cv
cp
.6 .247059 .160784 rgb
f
339.948 316.181 mo
339.948 316.181 332.102 325.899 318.581 311.094 cv
318.581 311.094 338.649 302.667 339.948 316.181 cv
cp
.490196 .45098 .137255 rgb
f
340.252 297.828 mo
340.252 297.828 333.28 306.465 321.272 293.309 cv
321.272 293.309 339.09 285.824 340.252 297.828 cv
cp
.678431 .607843 .215686 rgb
f
342.073 291.499 mo
342.073 291.499 333.76 295.522 329.391 281.355 cv
329.391 281.355 345.465 282.052 342.073 291.499 cv
cp
.490196 .45098 .137255 rgb
f
346.583 325.149 mo
346.19 323.626 345.292 321.988 344.233 320.615 cv
343.163 319.217 341.85 317.975 340.397 316.922 cv
337.479 314.803 333.991 313.441 330.409 312.634 cv
334.051 313.118 337.696 314.156 340.946 316.085 cv
342.567 317.049 344.077 318.236 345.381 319.65 cv
346.68 321.088 347.793 322.635 348.512 324.621 cv
346.583 325.149 li
cp
.6 .247059 .160784 rgb
f
346.68 307.916 mo
346.372 306.436 345.651 304.849 344.772 303.464 cv
343.874 302.06 342.752 300.786 341.463 299.688 cv
338.879 297.485 335.635 296.058 332.249 295.28 cv
335.69 295.732 339.129 296.841 342.073 298.896 cv
343.538 299.917 344.872 301.161 345.991 302.595 cv
347.104 304.047 348.038 305.583 348.631 307.466 cv
346.68 307.916 li
cp
f
343.311 301.404 mo
343.61 300.134 343.67 298.72 343.559 297.368 cv
343.44 296.002 343.135 294.648 342.637 293.363 cv
341.649 290.777 339.883 288.503 337.731 286.708 cv
339.987 288.372 341.92 290.562 343.096 293.164 cv
343.694 294.465 344.092 295.855 344.303 297.282 cv
344.504 298.715 344.545 300.147 344.288 301.632 cv
343.311 301.404 li
cp
f
345.293 334.778 mo
347.545 268.678 li
349.797 334.778 li
345.293 334.778 li
cp
f
356.616 316.067 mo
356.616 316.067 365.823 327.471 381.676 310.108 cv
381.676 310.108 358.149 300.221 356.616 316.067 cv
cp
.678431 .607843 .215686 rgb
f
355.508 295.702 mo
355.508 295.702 363.028 305.016 375.993 290.82 cv
375.993 290.82 356.752 282.747 355.508 295.702 cv
cp
.490196 .45098 .137255 rgb
f
351.588 280.615 mo
351.588 280.615 358.819 286.363 366.19 273.5 cv
366.19 273.5 350.352 270.652 351.588 280.615 cv
cp
.678431 .607843 .215686 rgb
f
346.747 326.021 mo
347.569 323.715 348.846 321.908 350.348 320.222 cv
351.858 318.563 353.612 317.168 355.502 316.026 cv
359.286 313.747 363.54 312.501 367.811 311.907 cv
363.598 312.832 359.5 314.396 356.051 316.862 cv
354.329 318.097 352.774 319.546 351.497 321.19 cv
350.237 322.806 349.165 324.722 348.678 326.534 cv
346.747 326.021 li
cp
.6 .247059 .160784 rgb
f
346.54 306.115 mo
347.17 304.101 348.167 302.441 349.362 300.874 cv
350.561 299.329 351.987 297.986 353.563 296.883 cv
356.725 294.658 360.432 293.448 364.145 292.95 cv
360.485 293.775 356.975 295.304 354.172 297.675 cv
352.774 298.855 351.563 300.228 350.584 301.743 cv
349.625 303.24 348.833 304.955 348.491 306.569 cv
346.54 306.115 li
cp
f
347.211 290.01 mo
347.286 288.503 347.643 287.116 348.151 285.761 cv
348.665 284.416 349.362 283.148 350.225 282.015 cv
351.948 279.725 354.317 278.013 356.879 276.884 cv
354.387 278.168 352.167 279.994 350.635 282.302 cv
349.864 283.447 349.27 284.703 348.856 286.01 cv
348.446 287.306 348.196 288.695 348.215 289.999 cv
347.211 290.01 li
cp
f
352.831 307.463 mo
352.831 307.463 357.252 313.177 364.803 304.402 cv
364.803 304.402 353.528 299.473 352.831 307.463 cv
cp
.490196 .45098 .137255 rgb
f
347.942 314.027 mo
348.249 312.88 348.733 311.872 349.329 310.914 cv
349.93 309.957 350.655 309.09 351.485 308.344 cv
353.143 306.841 355.215 305.89 357.354 305.453 cv
355.256 306.052 353.303 307.149 351.834 308.701 cv
350.362 310.235 349.315 312.22 348.922 314.22 cv
347.942 314.027 li
cp
.6 .247059 .160784 rgb
f
343.815 311.204 mo
343.815 311.204 337.012 313.652 335.35 302.2 cv
335.35 302.2 347.51 304.092 343.815 311.204 cv
cp
.490196 .45098 .137255 rgb
f
343.483 319.004 mo
344.219 317.111 344.405 314.866 343.987 312.79 cv
343.581 310.687 342.522 308.714 341.073 307.083 cv
342.639 308.599 343.879 310.518 344.477 312.676 cv
344.778 313.747 344.924 314.866 344.92 315.997 cv
344.905 317.129 344.772 318.236 344.409 319.367 cv
343.483 319.004 li
cp
.6 .247059 .160784 rgb
f
351.17 291.679 mo
351.17 291.679 347.932 285.765 358.247 282.581 cv
358.247 282.581 358.258 294.052 351.17 291.679 cv
cp
.760784 .686275 .27451 rgb
f
355.508 286.413 mo
354.307 286.962 353.358 287.936 352.641 289.014 cv
351.924 290.099 351.469 291.33 351.178 292.591 cv
350.631 295.126 350.764 297.758 351.186 300.308 cv
350.192 300.437 li
349.93 297.788 349.959 295.054 350.698 292.465 cv
351.079 291.18 351.629 289.933 352.438 288.87 cv
353.239 287.813 354.27 286.889 355.508 286.413 cv
cp
.6 .247059 .160784 rgb
f
250.491 333.033 mo
250.403 328.853 250.438 325.053 250.69 320.843 cv
250.834 318.654 251.018 316.47 251.481 314.233 cv
251.727 313.057 252.112 312.076 252.34 311.077 cv
252.594 310.065 252.809 309.035 252.983 307.993 cv
253.684 303.824 253.856 299.529 253.784 295.246 cv
253.696 290.958 253.366 286.66 252.76 282.393 cv
253.684 286.604 254.333 290.881 254.743 295.193 cv
255.137 299.504 255.29 303.863 254.889 308.243 cv
254.79 309.339 254.643 310.434 254.456 311.527 cv
254.278 312.646 253.959 313.714 253.844 314.66 cv
253.581 316.676 253.551 318.806 253.571 320.917 cv
253.631 325.155 253.928 329.446 254.346 333.667 cv
254.346 333.667 253.817 334.438 252.475 334.154 cv
251.137 333.87 251.208 334.216 250.499 333.517 cv
250.372 333.389 250.399 333.218 250.491 333.033 cv
cp
f
277.909 296.265 mo
277.159 299.846 275.506 303.322 272.858 305.764 cv
271.534 306.977 269.954 307.875 268.25 308.351 cv
267.393 308.611 266.553 308.703 265.62 308.815 cv
264.635 308.958 263.694 309.247 262.807 309.674 cv
259.229 311.439 256.963 314.813 255.276 318.136 cv
253.602 321.538 252.436 325.09 251.643 328.829 cv
253.875 329.198 li
254.454 325.711 255.44 322.161 256.875 318.892 cv
258.327 315.663 260.327 312.483 263.381 310.815 cv
264.135 310.41 264.961 310.115 265.79 309.959 cv
266.674 309.809 267.667 309.628 268.553 309.296 cv
270.366 308.673 272.008 307.601 273.319 306.242 cv
275.942 303.501 277.368 299.885 277.909 296.265 cv
cp
f
254.405 309.546 mo
254.42 307.43 254.151 305.402 253.551 303.397 cv
252.946 301.423 251.926 299.455 250.237 298.089 cv
248.506 296.872 246.786 296.009 245.043 294.99 cv
243.301 294.015 241.555 293.059 239.79 292.127 cv
241.452 293.227 243.094 294.354 244.727 295.495 cv
246.325 296.629 248.036 297.814 249.499 298.971 cv
250.879 300.19 251.711 301.954 252.184 303.786 cv
252.649 305.619 252.809 307.596 252.713 309.457 cv
254.405 309.546 li
cp
f
259.245 314.282 mo
260.352 313.341 261.225 312.281 262.018 311.14 cv
262.803 310.003 263.465 308.782 263.985 307.511 cv
265.028 304.971 265.487 302.225 265.415 299.525 cv
265.297 302.225 264.651 304.891 263.465 307.28 cv
262.881 308.477 262.161 309.602 261.336 310.637 cv
260.518 311.66 259.573 312.638 258.565 313.378 cv
259.245 314.282 li
cp
f
253.848 328.69 mo
252.665 325.556 251.065 322.591 248.385 320.399 cv
247.709 319.874 246.958 319.427 246.139 319.119 cv
245.29 318.801 244.483 318.728 243.784 318.502 cv
242.305 318.081 240.864 317.482 239.475 316.777 cv
233.967 313.947 229.026 309.394 226.817 303.397 cv
228.721 309.506 233.491 314.421 239.02 317.618 cv
240.418 318.419 241.881 319.116 243.428 319.642 cv
244.231 319.931 245.012 320.059 245.629 320.359 cv
246.274 320.665 246.87 321.081 247.405 321.57 cv
249.532 323.569 250.866 326.51 251.676 329.337 cv
253.848 328.69 li
cp
f
241.26 317.846 mo
240.446 318.399 239.422 318.821 238.407 319.067 cv
237.381 319.31 236.305 319.392 235.239 319.27 cv
233.098 319.043 231.063 318.013 229.37 316.611 cv
230.94 318.15 232.909 319.39 235.153 319.827 cv
236.268 320.057 237.432 320.07 238.567 319.899 cv
239.713 319.719 240.807 319.392 241.877 318.793 cv
241.26 317.846 li
cp
f
245.192 318.952 mo
244.184 318.267 243.227 317.355 242.385 316.397 cv
241.536 315.431 240.776 314.375 240.137 313.244 cv
238.844 310.993 238.018 308.463 237.667 305.855 cv
237.833 308.481 238.475 311.102 239.637 313.508 cv
240.211 314.714 240.915 315.861 241.725 316.936 cv
242.551 318.005 243.434 319.003 244.545 319.881 cv
245.192 318.952 li
cp
f
269.862 317.75 mo
267.079 317.206 264.227 316.915 261.336 317.13 cv
259.901 317.264 258.434 317.504 257.038 318.164 cv
255.655 318.78 254.327 320.026 253.87 321.678 cv
255.52 322.081 li
255.719 320.934 256.508 319.951 257.635 319.289 cv
258.75 318.612 260.096 318.231 261.45 317.973 cv
264.19 317.488 267.047 317.485 269.862 317.75 cv
cp
f
246.006 305.697 mo
247.569 307.413 248.977 309.274 250.084 311.263 cv
250.629 312.257 251.096 313.295 251.35 314.345 cv
251.606 315.386 251.62 316.452 251.213 317.247 cv
252.786 317.883 li
253.262 316.498 252.993 315.114 252.567 313.966 cv
252.124 312.8 251.493 311.771 250.801 310.809 cv
249.405 308.894 247.764 307.214 246.006 305.697 cv
cp
f
265.239 291.197 mo
263.569 292.492 262.063 294.009 260.846 295.758 cv
260.249 296.64 259.719 297.585 259.377 298.61 cv
258.969 299.618 258.995 300.779 258.793 301.738 cv
258.338 303.742 257.336 305.607 256.229 307.367 cv
255.112 309.118 253.838 310.805 252.475 312.354 cv
253.333 313.096 li
254.684 311.409 255.885 309.658 256.958 307.806 cv
258.008 305.949 258.959 303.992 259.35 301.845 cv
259.524 300.728 259.434 299.732 259.778 298.738 cv
260.065 297.746 260.538 296.805 261.083 295.913 cv
262.198 294.144 263.629 292.563 265.239 291.197 cv
cp
f
264.112 316.107 mo
264.112 314.707 265.18 313.475 266.817 312.671 cv
266.926 310.935 269.2 309.548 272.008 309.548 cv
274.883 309.548 277.217 311.007 277.217 312.798 cv
277.217 313.091 277.137 313.37 277.022 313.636 cv
277.79 314.344 278.241 315.191 278.241 316.107 cv
278.241 317.93 276.467 319.489 273.946 320.161 cv
273.237 321.331 271.67 322.15 269.836 322.15 cv
267.342 322.15 265.329 320.65 265.329 318.788 cv
265.329 318.725 265.352 318.665 265.352 318.596 cv
264.573 317.886 264.112 317.033 264.112 316.107 cv
cp
.490196 .45098 .137255 rgb
f
256.17 303.76 mo
255.879 302.55 254.7 301.711 253.122 301.357 cv
252.661 299.885 250.409 299.162 247.993 299.751 cv
245.504 300.353 243.799 302.097 244.174 303.643 cv
244.231 303.894 244.354 304.118 244.516 304.324 cv
244.002 305.095 243.792 305.918 243.977 306.711 cv
244.36 308.286 246.219 309.259 248.526 309.306 cv
249.389 310.174 250.911 310.553 252.499 310.171 cv
254.639 309.649 256.069 307.933 255.68 306.33 cv
255.67 306.27 255.633 306.227 255.622 306.169 cv
256.143 305.394 256.366 304.563 256.17 303.76 cv
cp
f
218.286 299.771 mo
218.784 299.671 219.268 299.653 219.735 299.669 cv
220.698 298.16 222.616 296.907 225.006 296.446 cv
228.737 295.725 232.159 297.206 232.651 299.758 cv
232.805 300.549 232.627 301.348 232.235 302.099 cv
232.868 302.584 233.313 303.179 233.45 303.889 cv
233.893 306.175 231.225 308.606 227.493 309.331 cv
223.764 310.053 220.377 308.787 219.936 306.506 cv
219.936 306.492 219.94 306.487 219.936 306.481 cv
219.823 306.507 219.715 306.546 219.6 306.569 cv
216.985 307.071 214.577 305.962 214.213 304.085 cv
213.85 302.206 215.674 300.275 218.286 299.771 cv
cp
f
231.022 291.868 mo
231.022 291.222 231.284 290.608 231.739 290.044 cv
231.366 289.54 231.133 288.97 231.133 288.348 cv
231.133 286.405 233.243 284.824 235.842 284.824 cv
236.379 284.824 236.891 284.905 237.37 285.032 cv
238.127 283.469 240.038 282.351 242.292 282.351 cv
245.208 282.351 247.571 284.205 247.571 286.498 cv
247.571 287.162 247.35 287.787 246.989 288.347 cv
248.877 289.227 250.079 290.473 250.079 291.868 cv
250.079 292.977 249.307 293.988 248.059 294.8 cv
248.407 295.293 248.629 295.85 248.629 296.442 cv
248.629 298.387 246.514 299.963 243.918 299.963 cv
241.397 299.963 239.354 298.479 239.235 296.615 cv
234.602 296.291 231.022 294.301 231.022 291.868 cv
cp
f
257.616 295.653 mo
256.444 294.863 255.727 293.89 255.768 292.85 cv
255.866 290.481 259.68 288.714 264.286 288.901 cv
268.887 289.083 272.547 291.157 272.454 293.526 cv
272.377 295.396 269.967 296.872 266.69 297.326 cv
266.772 297.536 266.817 297.753 266.809 297.972 cv
266.745 299.561 264.297 300.747 261.342 300.628 cv
258.385 300.509 256.045 299.13 256.108 297.541 cv
256.141 296.786 256.715 296.133 257.616 295.653 cv
cp
f
234.875 290.97 mo
234.875 290.496 235.065 290.05 235.401 289.638 cv
235.125 289.271 234.956 288.853 234.956 288.402 cv
234.956 286.983 236.497 285.833 238.389 285.833 cv
238.784 285.833 239.155 285.893 239.502 285.985 cv
240.057 284.847 241.448 284.029 243.09 284.029 cv
245.215 284.029 246.938 285.382 246.938 287.055 cv
246.938 287.538 246.776 287.991 246.516 288.399 cv
247.889 289.043 248.764 289.95 248.764 290.97 cv
248.764 291.775 248.202 292.513 247.293 293.105 cv
247.549 293.464 247.709 293.87 247.709 294.303 cv
247.709 295.72 246.168 296.867 244.276 296.867 cv
242.44 296.867 240.95 295.79 240.864 294.431 cv
237.485 294.192 234.875 292.74 234.875 290.97 cv
cp
.588235 .541176 .164706 rgb
f
254.877 303.315 mo
254.668 302.432 253.811 301.821 252.655 301.565 cv
252.321 300.491 250.68 299.968 248.918 300.393 cv
247.108 300.833 245.862 302.104 246.133 303.232 cv
246.178 303.412 246.266 303.581 246.383 303.731 cv
246.006 304.288 245.854 304.891 245.991 305.466 cv
246.272 306.615 247.625 307.327 249.309 307.357 cv
249.936 307.992 251.045 308.27 252.204 307.986 cv
253.768 307.608 254.803 306.355 254.524 305.188 cv
254.518 305.146 254.489 305.115 254.479 305.072 cv
254.86 304.509 255.024 303.902 254.877 303.315 cv
cp
f
221.108 299.68 mo
221.469 299.607 221.823 299.597 222.165 299.604 cv
222.868 298.509 224.266 297.594 226.004 297.258 cv
228.725 296.734 231.221 297.813 231.579 299.671 cv
231.692 300.249 231.565 300.83 231.278 301.381 cv
231.737 301.732 232.063 302.169 232.163 302.684 cv
232.485 304.35 230.543 306.125 227.819 306.65 cv
225.102 307.177 222.635 306.251 222.313 304.59 cv
222.313 304.58 222.313 304.58 222.313 304.572 cv
222.229 304.593 222.151 304.618 222.067 304.635 cv
220.163 305.002 218.405 304.192 218.139 302.825 cv
217.877 301.455 219.206 300.05 221.108 299.68 cv
cp
f
243.614 316.326 mo
243.374 316.252 243.159 316.143 242.959 316.028 cv
242.182 316.452 241.045 316.54 239.895 316.175 cv
238.098 315.6 236.958 314.138 237.354 312.911 cv
237.473 312.528 237.741 312.221 238.09 311.985 cv
237.93 311.627 237.875 311.261 237.985 310.921 cv
238.34 309.817 240.079 309.392 241.883 309.967 cv
243.678 310.538 244.854 311.897 244.5 312.997 cv
244.499 313.004 244.495 313.005 244.493 313.006 cv
244.549 313.023 244.61 313.031 244.665 313.051 cv
245.922 313.453 246.708 314.509 246.418 315.417 cv
246.131 316.321 244.874 316.729 243.614 316.326 cv
cp
.490196 .45098 .137255 rgb
f
243.299 315.624 mo
243.12 315.566 242.967 315.491 242.815 315.406 cv
242.25 315.714 241.422 315.781 240.584 315.513 cv
239.276 315.096 238.442 314.026 238.727 313.135 cv
238.819 312.854 239.01 312.632 239.268 312.46 cv
239.153 312.197 239.112 311.932 239.192 311.683 cv
239.45 310.879 240.721 310.565 242.032 310.987 cv
243.34 311.405 244.198 312.396 243.938 313.196 cv
243.938 313.199 243.938 313.203 243.936 313.205 cv
243.977 313.218 244.016 313.223 244.057 313.234 cv
244.977 313.528 245.549 314.3 245.338 314.961 cv
245.129 315.621 244.213 315.916 243.299 315.624 cv
cp
.588235 .541176 .164706 rgb
f
258.528 294.485 mo
257.674 293.908 257.151 293.198 257.184 292.439 cv
257.252 290.714 260.028 289.425 263.391 289.562 cv
266.745 289.695 269.413 291.204 269.342 292.933 cv
269.29 294.294 267.532 295.374 265.141 295.702 cv
265.202 295.854 265.235 296.012 265.227 296.173 cv
265.182 297.333 263.395 298.197 261.243 298.111 cv
259.086 298.024 257.383 297.015 257.43 295.858 cv
257.454 295.31 257.874 294.833 258.528 294.485 cv
cp
f
271.288 297.827 mo
271.288 295.309 273.245 293.266 275.653 293.266 cv
278.055 293.266 279.997 295.29 280.014 297.801 cv
283.405 298.21 285.971 300.106 285.971 302.391 cv
285.971 303.74 285.065 304.948 283.627 305.806 cv
283.788 306.161 283.899 306.531 283.899 306.923 cv
283.899 308.985 281.504 310.658 278.551 310.658 cv
275.596 310.658 273.204 308.985 273.204 306.923 cv
273.204 306.506 273.323 306.109 273.504 305.735 cv
272.141 304.884 271.288 303.702 271.288 302.391 cv
271.288 301.666 271.567 300.986 272.03 300.373 cv
271.559 299.646 271.288 298.771 271.288 297.827 cv
cp
.678431 .607843 .215686 rgb
f
229.932 301.952 mo
229.444 299.427 232.083 296.799 235.829 296.076 cv
239.567 295.353 243 296.81 243.485 299.328 cv
243.639 300.107 243.459 300.887 243.075 301.628 cv
243.723 302.223 244.192 302.979 244.362 303.854 cv
244.844 306.36 242.834 308.852 239.864 309.423 cv
236.895 310.003 234.102 308.438 233.616 305.935 cv
233.561 305.66 233.549 305.394 233.553 305.127 cv
231.645 304.635 230.231 303.497 229.932 301.952 cv
cp
f
222.301 317.002 mo
222.094 315.94 223.077 314.773 224.743 313.871 cv
224.827 312.821 225.696 311.866 226.971 311.624 cv
227.043 311.611 227.114 311.627 227.186 311.614 cv
227.495 310.593 228.276 309.762 229.356 309.552 cv
230.936 309.247 232.475 310.347 232.795 312.013 cv
232.829 312.162 232.79 312.307 232.795 312.449 cv
234.475 312.719 235.667 313.395 235.858 314.384 cv
236.045 315.354 235.223 316.4 233.813 317.266 cv
234.129 318.928 232.692 320.605 230.592 321.009 cv
228.629 321.391 226.803 320.515 226.309 319.037 cv
224.135 318.901 222.526 318.169 222.301 317.002 cv
cp
f
242.176 283.552 mo
242.176 280.292 246.618 277.654 252.096 277.654 cv
257.571 277.654 262.012 280.292 262.012 283.552 cv
262.012 284.768 261.393 285.896 260.333 286.836 cv
261.368 287.675 262.012 288.725 262.012 289.887 cv
262.012 292.582 258.676 294.765 254.565 294.765 cv
250.448 294.765 247.116 292.582 247.116 289.887 cv
247.116 289.476 247.213 289.083 247.358 288.705 cv
244.286 287.702 242.176 285.782 242.176 283.552 cv
cp
f
257.649 306.719 mo
256.282 304.675 257.411 301.53 260.151 299.702 cv
262.901 297.87 266.235 298.042 267.598 300.088 cv
268.083 300.813 268.239 301.682 268.139 302.573 cv
268.444 302.788 268.727 303.055 268.952 303.393 cv
269.872 304.772 269.518 306.641 268.155 307.549 cv
267.055 308.281 265.667 308.139 264.676 307.354 cv
262.012 308.899 258.942 308.667 257.649 306.719 cv
cp
f
267.311 315.075 mo
267.311 314.057 268.088 313.156 269.28 312.569 cv
269.364 311.303 271.014 310.295 273.063 310.295 cv
275.159 310.295 276.864 311.354 276.864 312.664 cv
276.864 312.877 276.803 313.08 276.721 313.271 cv
277.28 313.788 277.606 314.408 277.606 315.075 cv
277.606 316.405 276.315 317.541 274.477 318.032 cv
273.959 318.885 272.819 319.48 271.481 319.48 cv
269.661 319.48 268.196 318.386 268.196 317.029 cv
268.196 316.982 268.211 316.938 268.211 316.89 cv
267.645 316.373 267.311 315.752 267.311 315.075 cv
cp
.588235 .541176 .164706 rgb
f
273.276 298.324 mo
273.276 296.487 274.704 294.996 276.459 294.996 cv
278.208 294.996 279.625 296.475 279.639 298.303 cv
282.114 298.604 283.983 299.987 283.983 301.652 cv
283.983 302.634 283.319 303.516 282.274 304.14 cv
282.391 304.397 282.471 304.669 282.471 304.954 cv
282.471 306.458 280.727 307.679 278.573 307.679 cv
276.418 307.679 274.672 306.458 274.672 304.954 cv
274.672 304.65 274.758 304.364 274.893 304.088 cv
273.899 303.473 273.276 302.606 273.276 301.652 cv
273.276 301.122 273.481 300.628 273.819 300.18 cv
273.477 299.652 273.276 299.013 273.276 298.324 cv
cp
.760784 .686275 .27451 rgb
f
233.729 299.305 mo
234.079 297.461 236.577 296.398 239.305 296.921 cv
242.036 297.443 243.963 299.354 243.612 301.191 cv
243.506 301.761 243.178 302.241 242.713 302.64 cv
242.997 303.214 243.106 303.85 242.989 304.491 cv
242.633 306.322 240.6 307.462 238.436 307.049 cv
236.272 306.64 234.795 304.82 235.149 302.997 cv
235.184 302.792 235.25 302.614 235.325 302.434 cv
234.163 301.583 233.514 300.428 233.729 299.305 cv
cp
f
261.879 318.426 mo
261.586 320.071 259.364 321.053 256.92 320.611 cv
254.477 320.177 252.735 318.488 253.028 316.844 cv
253.12 316.338 253.411 315.901 253.817 315.543 cv
253.563 315.028 253.454 314.459 253.555 313.889 cv
253.85 312.253 255.655 311.21 257.59 311.557 cv
259.532 311.899 260.866 313.506 260.575 315.146 cv
260.538 315.321 260.485 315.483 260.42 315.647 cv
261.467 316.394 262.059 317.415 261.879 318.426 cv
cp
.678431 .607843 .215686 rgb
f
260.68 317.718 mo
260.467 318.917 258.848 319.631 257.065 319.309 cv
255.282 318.989 254.016 317.759 254.229 316.56 cv
254.293 316.191 254.504 315.871 254.803 315.61 cv
254.614 315.239 254.54 314.822 254.612 314.408 cv
254.829 313.211 256.141 312.455 257.555 312.709 cv
258.967 312.958 259.938 314.13 259.723 315.321 cv
259.706 315.453 259.663 315.57 259.616 315.689 cv
260.375 316.231 260.811 316.979 260.68 317.718 cv
cp
.760784 .686275 .27451 rgb
f
224.43 316.126 mo
224.278 315.352 224.995 314.503 226.209 313.841 cv
226.27 313.079 226.907 312.386 227.833 312.209 cv
227.887 312.194 227.936 312.209 227.991 312.202 cv
228.215 311.454 228.786 310.85 229.571 310.697 cv
230.721 310.474 231.848 311.276 232.083 312.492 cv
232.104 312.601 232.075 312.704 232.083 312.807 cv
233.303 313.005 234.172 313.496 234.309 314.218 cv
234.448 314.929 233.848 315.689 232.823 316.321 cv
233.049 317.533 232.004 318.755 230.473 319.052 cv
229.043 319.323 227.711 318.688 227.352 317.611 cv
225.766 317.512 224.592 316.978 224.43 316.126 cv
cp
f
245.672 283.019 mo
245.672 280.649 248.915 278.722 252.903 278.722 cv
256.893 278.722 260.135 280.649 260.135 283.019 cv
260.135 283.91 259.68 284.731 258.907 285.416 cv
259.663 286.027 260.135 286.796 260.135 287.643 cv
260.135 289.606 257.704 291.197 254.704 291.197 cv
251.702 291.197 249.274 289.606 249.274 287.643 cv
249.274 287.34 249.348 287.059 249.452 286.779 cv
247.211 286.047 245.672 284.647 245.672 283.019 cv
cp
f
259.075 305.978 mo
258.081 304.486 258.901 302.193 260.899 300.859 cv
262.905 299.526 265.334 299.653 266.327 301.146 cv
266.684 301.674 266.797 302.305 266.721 302.955 cv
266.946 303.11 267.151 303.307 267.315 303.551 cv
267.987 304.563 267.731 305.923 266.737 306.584 cv
265.936 307.117 264.922 307.012 264.198 306.439 cv
262.254 307.566 260.018 307.397 259.075 305.978 cv
cp
f
252.346 332.874 mo
252.147 328.714 254.481 327.295 254.481 327.295 cv
251.741 328.409 250.827 332.874 250.827 332.874 cv
249.917 329.628 251.643 327.653 251.643 327.653 cv
249.502 329.283 249.004 331.369 248.782 332.684 cv
248.991 331.017 248.772 328.922 248.772 328.922 cv
248.215 330.998 247.387 332.084 247.387 332.084 cv
246.682 329.111 247.383 326.874 247.383 326.874 cv
245.715 329.198 246.479 333.414 246.479 333.414 cv
245.743 331.057 242.663 329.198 242.663 329.198 cv
244.448 330.974 244.51 331.748 244.987 332.83 cv
244.292 332.532 243.321 332.268 242.565 332.643 cv
242.565 332.643 244.459 333.302 245.096 335.212 cv
245.096 335.217 245.43 335.212 245.43 335.212 cv
252.856 335.212 li
252.551 332.987 254.481 331.25 254.481 331.25 cv
253.364 331.555 252.346 332.874 252.346 332.874 cv
cp
.490196 .45098 .137255 rgb
f
252.299 332.874 mo
252.499 328.714 250.167 327.295 250.167 327.295 cv
252.909 328.409 253.819 332.874 253.819 332.874 cv
254.733 329.628 252.602 325.364 252.602 325.364 cv
254.745 326.996 255.641 331.369 255.866 332.684 cv
255.655 331.017 255.95 327.956 255.95 327.956 cv
256.508 330.032 257.065 331.352 257.065 331.352 cv
258.584 327.295 257.842 323.462 257.842 323.462 cv
259.77 328.01 258.485 332.874 258.485 332.874 cv
258.821 330.007 262.848 328.544 262.848 328.544 cv
261.063 330.317 260.135 331.748 259.659 332.83 cv
260.358 332.532 261.327 332.268 262.083 332.643 cv
262.083 332.643 259.85 333.289 259.213 335.201 cv
259.215 335.204 259.217 335.212 259.217 335.212 cv
251.79 335.212 li
252.096 332.987 250.167 331.25 250.167 331.25 cv
251.284 331.555 252.299 332.874 252.299 332.874 cv
cp
.588235 .541176 .164706 rgb
f
63.9004 314.096 mo
63.9004 314.096 55.9033 324.207 53.3174 327.501 cv
50.7305 330.792 49.3203 332.144 46.0264 331.674 cv
42.7344 331.204 40.0557 322.619 40.1475 318.33 cv
40.2891 311.76 40.1475 303.983 36.6201 295.517 cv
35.9141 294.458 li
35.9141 294.458 39.7607 306.04 39.1494 312.45 cv
38.3848 320.444 40.2656 334.549 44.2617 335.02 cv
48.2607 335.492 51.1416 335.428 53.083 330.969 cv
55.9404 324.4 63.9014 314.8 65.0771 314.331 cv
66.252 313.86 63.9004 314.096 63.9004 314.096 cv
cp
.6 .247059 .160784 rgb
f
40.7163 327.479 mo
40.4785 326.403 40.0552 325.237 39.6553 324.133 cv
39.2417 323.018 38.7935 321.913 38.311 320.824 cv
37.3403 318.651 36.2534 316.518 34.8799 314.584 cv
34.5356 314.097 34.1685 313.65 33.7764 313.186 cv
33.3882 312.707 33.0449 312.206 32.7305 311.686 cv
32.1035 310.644 31.604 309.537 31.1865 308.407 cv
30.3633 306.141 29.832 303.779 29.5645 301.396 cv
29.9175 303.768 30.5332 306.101 31.4282 308.313 cv
31.8809 309.416 32.4131 310.486 33.0601 311.479 cv
33.3828 311.974 33.7378 312.451 34.1206 312.891 cv
34.5186 313.328 34.9292 313.796 35.2935 314.276 cv
36.7666 316.21 37.9399 318.337 38.998 320.505 cv
39.5244 321.592 40.0161 322.695 40.4741 323.814 cv
40.9243 324.95 41.373 326.027 41.6978 327.285 cv
40.7163 327.479 li
cp
f
43.6646 331.629 mo
43.0459 328.644 43.5039 325.629 44.6548 322.928 cv
45.7813 320.292 46.895 317.653 47.9302 314.984 cv
48.9546 312.313 49.9482 309.62 50.6265 306.846 cv
51.2261 304.072 50.8818 301.098 49.79 298.455 cv
50.9575 301.067 51.4004 304.043 50.8706 306.899 cv
50.2676 309.719 49.3491 312.448 48.3989 315.158 cv
47.4385 317.865 46.3989 320.543 45.3491 323.212 cv
44.3179 325.794 44.0024 328.737 44.6284 331.363 cv
43.6646 331.629 li
cp
f
50.2241 331.74 mo
50.1904 331.677 li
50.1646 331.623 50.126 331.489 50.125 331.39 cv
50.1216 331.259 50.1387 331.222 50.1465 331.187 cv
50.1807 331.063 li
50.23 330.932 50.2837 330.82 50.3374 330.727 cv
50.4458 330.529 50.5581 330.365 50.6709 330.197 cv
51.3584 329.248 li
51.8188 328.629 52.2725 328.016 52.7056 327.389 cv
53.5703 326.138 54.3589 324.836 54.9321 323.448 cv
55.2178 322.756 55.4399 322.04 55.5713 321.312 cv
55.7188 320.588 55.6802 319.853 55.7427 319.045 cv
55.8618 317.483 56.1553 315.949 56.5498 314.448 cv
56.9473 312.946 57.4473 311.476 58.0571 310.05 cv
58.6821 308.636 59.3506 307.215 60.3955 306.027 cv
61.4985 304.939 62.5918 303.865 63.4854 302.611 cv
64.3828 301.369 65.062 299.959 65.4053 298.455 cv
65.103 299.968 64.4595 301.406 63.5879 302.683 cv
62.7246 303.968 61.6392 305.095 60.5801 306.196 cv
59.6128 307.354 58.979 308.784 58.4038 310.192 cv
57.8403 311.615 57.3857 313.082 57.0352 314.569 cv
56.687 316.056 56.4409 317.568 56.3667 319.082 cv
56.3267 319.811 56.3872 320.627 56.2495 321.423 cv
56.1289 322.215 55.9116 322.984 55.6304 323.723 cv
55.0649 325.202 54.2822 326.572 53.4321 327.877 cv
53.0063 328.528 52.561 329.167 52.1191 329.796 cv
51.4766 330.735 li
51.3784 330.89 51.2788 331.047 51.2056 331.19 cv
51.1646 331.265 51.1401 331.329 51.1221 331.377 cv
51.1187 331.394 li
51.1128 331.405 51.1177 331.415 51.1196 331.333 cv
51.1216 331.28 51.0757 331.197 51.061 331.188 cv
51.0962 331.252 li
50.2241 331.74 li
cp
f
47.1797 316.997 mo
47.2661 315.597 47.0952 314.143 46.7852 312.748 cv
46.6245 312.049 46.4258 311.356 46.1812 310.681 cv
45.915 309.998 45.7559 309.265 45.6646 308.541 cv
45.4849 307.086 45.5239 305.624 45.6406 304.176 cv
45.7642 302.729 45.9692 301.288 46.2607 299.867 cv
46.0103 301.296 45.8472 302.739 45.7651 304.185 cv
45.6899 305.629 45.6948 307.084 45.9121 308.506 cv
46.0791 309.934 46.8276 311.213 47.1494 312.66 cv
47.5068 314.084 47.7271 315.536 47.6777 317.036 cv
47.1797 316.997 li
cp
f
39.3379 311.74 mo
39.4707 307.978 39.7798 304.222 40.5088 300.525 cv
40.8457 298.667 41.606 296.916 41.6616 295.036 cv
41.7578 293.185 41.4463 291.252 40.4756 289.637 cv
41.4829 291.23 41.8423 293.168 41.7866 295.042 cv
41.77 296.95 41.0435 298.734 40.7539 300.572 cv
40.1113 304.257 39.8867 308.013 39.8379 311.746 cv
39.3379 311.74 li
cp
f
46.9302 332.519 mo
47.3008 328.983 47.9604 325.498 49.1763 322.147 cv
49.4863 321.313 49.8398 320.492 50.2593 319.7 cv
50.6885 318.896 51.1689 318.188 51.5713 317.416 cv
52.3984 315.888 53.1191 314.297 53.7563 312.673 cv
55.0234 309.423 55.9829 306.04 56.5278 302.586 cv
56.7974 300.865 56.873 299.092 57.312 297.383 cv
57.7334 295.689 58.2993 293.961 59.4326 292.607 cv
58.333 293.986 57.813 295.718 57.4336 297.41 cv
57.0381 299.118 57.0063 300.873 56.7754 302.621 cv
56.3096 306.109 55.4253 309.537 54.2241 312.85 cv
53.6191 314.505 52.9287 316.132 52.124 317.708 cv
51.7339 318.502 51.248 319.262 50.8701 320.016 cv
50.4868 320.782 50.1641 321.584 49.8823 322.4 cv
48.7783 325.675 48.2046 329.153 47.9272 332.593 cv
46.9302 332.519 li
cp
f
40.5508 326.599 mo
41.3589 323.499 42.0874 320.308 42.2124 317.132 cv
42.2212 313.9 42.2412 310.631 42.4595 307.387 cv
42.6758 304.141 43.0337 300.895 43.7549 297.717 cv
44.1196 296.131 44.5781 294.561 45.2256 293.064 cv
45.873 291.58 46.7202 290.133 47.9668 289.078 cv
46.7485 290.164 45.9463 291.622 45.3408 293.113 cv
44.7363 294.614 44.3208 296.185 43.999 297.77 cv
43.3643 300.943 43.0913 304.18 42.959 307.412 cv
42.8247 310.652 42.8877 313.878 42.9624 317.137 cv
42.9141 320.46 42.2603 323.664 41.5176 326.854 cv
40.5508 326.599 li
cp
f
14.8818 302.808 mo
14.8818 301.294 16.124 300.035 17.793 299.691 cv
18.002 296.951 20.2393 294.734 23.166 294.277 cv
23.1211 294.063 23.085 293.844 23.085 293.618 cv
23.085 292.087 24.1787 290.776 25.7588 290.137 cv
25.3359 289.398 25.0742 288.561 25.0742 287.653 cv
25.0742 284.835 27.4121 282.548 30.291 282.548 cv
32.0293 282.548 33.5596 283.392 34.5059 284.671 cv
35.29 284.049 36.2617 283.665 37.3281 283.665 cv
37.9863 283.665 38.6104 283.811 39.1768 284.062 cv
39.4434 283.598 39.7842 283.164 40.1777 282.763 cv
40.1729 282.716 40.1641 282.672 40.1641 282.625 cv
40.1641 281.171 41.3799 279.991 42.8848 279.991 cv
43.458 279.991 43.9873 280.163 44.4238 280.455 cv
44.7314 280.384 45.0479 280.325 45.3682 280.277 cv
46.1846 279.104 47.584 278.328 49.1777 278.328 cv
50.9717 278.328 52.5059 279.316 53.25 280.738 cv
53.2676 280.738 53.2822 280.733 53.2988 280.733 cv
56.9063 280.733 59.8311 283.635 59.8311 287.21 cv
59.8311 290.408 57.4873 293.049 54.415 293.576 cv
53.5146 294.408 52.1143 294.954 50.5244 294.954 cv
50.1367 294.954 49.7646 294.915 49.4033 294.854 cv
48.665 295.248 47.8125 295.489 46.8887 295.489 cv
46.6152 295.489 46.3506 295.456 46.0898 295.418 cv
45.4844 297.807 43.1943 299.588 40.4453 299.588 cv
40.4365 299.588 40.4258 299.586 40.418 299.586 cv
40.4248 299.673 40.4453 299.756 40.4453 299.845 cv
40.4453 301.481 38.9834 302.808 37.1787 302.808 cv
36.6367 302.808 36.1299 302.675 35.6797 302.461 cv
35.1504 303.409 34.2588 304.173 33.1504 304.645 cv
33.5918 305.316 33.8604 306.079 33.8945 306.9 cv
35.7852 307.312 37.1787 308.654 37.1787 310.263 cv
37.1787 311.937 35.6768 313.333 33.6729 313.679 cv
33.8262 314.024 33.916 314.401 33.916 314.801 cv
33.916 316.342 32.6387 317.587 31.0674 317.587 cv
29.8242 317.587 28.7783 316.805 28.3916 315.719 cv
27.7764 315.988 27.0889 316.156 26.3486 316.156 cv
23.8857 316.156 21.8906 314.463 21.8906 312.374 cv
21.8906 311.75 22.084 311.171 22.3994 310.651 cv
20.2207 310.39 18.5449 308.924 18.5449 307.141 cv
18.5449 306.746 18.6455 306.372 18.7979 306.017 cv
18.7637 306.017 18.7354 306.024 18.7031 306.024 cv
16.5918 306.024 14.8818 304.583 14.8818 302.808 cv
cp
.490196 .45098 .137255 rgb
f
25.6602 299.102 mo
25.8271 296.883 27.6406 295.085 30.0098 294.715 cv
29.9727 294.542 29.9424 294.367 29.9424 294.184 cv
29.9424 292.942 30.8311 291.881 32.1084 291.363 cv
31.7686 290.764 31.5547 290.088 31.5547 289.352 cv
31.5547 287.069 33.4463 285.215 35.7793 285.215 cv
37.1885 285.215 38.4277 285.898 39.1953 286.937 cv
39.8291 286.433 40.6162 286.121 41.4805 286.121 cv
42.0137 286.121 42.5195 286.236 42.9775 286.442 cv
43.1943 286.065 43.4688 285.716 43.7891 285.389 cv
43.7881 285.353 43.7773 285.317 43.7773 285.277 cv
43.7773 284.1 44.7637 283.145 45.9814 283.145 cv
46.4453 283.145 46.874 283.285 47.2305 283.521 cv
47.4785 283.462 47.7334 283.414 47.9941 283.376 cv
48.6543 282.427 49.7871 281.796 51.0791 281.796 cv
52.5313 281.796 53.7744 282.596 54.3779 283.75 cv
54.3926 283.75 54.4033 283.744 54.417 283.744 cv
57.1973 283.744 59.4531 285.883 59.666 288.586 cv
59.1055 291.14 57.0313 293.126 54.415 293.576 cv
53.5146 294.408 52.1143 294.954 50.5244 294.954 cv
50.1367 294.954 49.7646 294.915 49.4033 294.854 cv
48.665 295.248 47.8125 295.489 46.8887 295.489 cv
46.6152 295.489 46.3506 295.456 46.0898 295.418 cv
45.4844 297.807 43.1943 299.588 40.4453 299.588 cv
40.4365 299.588 40.4258 299.586 40.418 299.586 cv
40.4248 299.673 40.4453 299.756 40.4453 299.845 cv
40.4453 301.481 38.9834 302.808 37.1787 302.808 cv
36.6367 302.808 36.1299 302.675 35.6797 302.461 cv
35.1504 303.409 34.2588 304.173 33.1504 304.645 cv
33.5918 305.316 33.8604 306.079 33.8945 306.9 cv
35.7852 307.312 37.1787 308.654 37.1787 310.263 cv
37.1787 311.499 36.3584 312.577 35.125 313.2 cv
34.7236 312.93 34.4063 312.545 34.2412 312.084 cv
33.7432 312.302 33.1875 312.438 32.5869 312.438 cv
30.5928 312.438 28.9756 311.067 28.9756 309.373 cv
28.9756 308.87 29.1338 308.4 29.3877 307.979 cv
27.6221 307.768 26.2646 306.58 26.2646 305.135 cv
26.2646 304.814 26.3477 304.514 26.4688 304.226 cv
26.4443 304.226 26.4219 304.232 26.3936 304.232 cv
24.6855 304.232 23.2988 303.065 23.2988 301.625 cv
23.2988 300.4 24.3057 299.381 25.6602 299.102 cv
cp
.588235 .541176 .164706 rgb
f
46.9121 297.972 mo
47.3125 297.972 47.6934 298.042 48.0645 298.146 cv
47.2637 297.351 46.7676 296.248 46.7676 295.024 cv
46.7676 292.603 48.7139 290.638 51.1152 290.638 cv
51.1494 290.638 51.1807 290.645 51.2168 290.646 cv
51.166 290.394 51.1396 290.133 51.1396 289.865 cv
51.1396 287.658 52.9287 285.868 55.1377 285.868 cv
56.1934 285.868 57.1475 286.285 57.8613 286.955 cv
59.3809 284.839 61.7813 283.459 64.501 283.459 cv
69.1084 283.459 72.8408 287.38 72.8408 292.221 cv
72.8408 292.235 72.8379 292.249 72.8379 292.262 cv
73.9668 292.466 74.8271 293.46 74.8271 294.661 cv
74.8271 295.304 74.5762 295.883 74.1758 296.317 cv
76.2012 296.99 77.6602 298.778 77.6602 300.897 cv
77.6602 301.663 77.4551 302.38 77.1152 303.023 cv
78.9639 303.333 80.3496 304.601 80.3496 306.117 cv
80.3496 306.727 80.1143 307.293 79.7275 307.775 cv
81.2764 308.576 82.2949 309.914 82.2949 311.432 cv
82.2949 313.885 79.6514 315.872 76.3887 315.872 cv
76.2295 315.872 76.0801 315.847 75.9248 315.836 cv
75.9248 315.849 75.9277 315.859 75.9277 315.872 cv
75.9277 317.104 74.709 318.102 73.2041 318.102 cv
73.0664 318.102 72.9326 318.083 72.7979 318.067 cv
72.4893 319.879 70.8486 321.264 68.8564 321.264 cv
67.1055 321.264 65.6328 320.189 65.0869 318.7 cv
65.0215 318.705 64.959 318.721 64.8916 318.721 cv
63.5635 318.721 62.4844 317.606 62.4844 316.228 cv
62.4844 315.945 62.541 315.679 62.625 315.428 cv
61.417 314.838 60.585 313.777 60.4648 312.533 cv
60.1387 312.634 59.7988 312.704 59.4375 312.704 cv
57.5527 312.704 56.0225 311.21 56.0225 309.369 cv
56.0225 308.414 56.4404 307.557 57.1016 306.95 cv
56.6699 306.512 56.3564 305.954 56.1816 305.329 cv
55.7861 305.544 55.3496 305.705 54.8926 305.824 cv
54.3164 307.046 53.1006 307.896 51.6816 307.896 cv
51.0596 307.896 50.4844 307.721 49.9746 307.438 cv
49.1455 308.226 48.085 308.72 46.9121 308.72 cv
44.2725 308.72 42.1357 306.314 42.1357 303.348 cv
42.1357 300.377 44.2725 297.972 46.9121 297.972 cv
cp
.678431 .607843 .215686 rgb
f
49.8564 297.392 mo
50.1807 297.392 50.4912 297.448 50.79 297.533 cv
50.1426 296.888 49.7383 295.997 49.7383 295.004 cv
49.7383 293.043 51.3164 291.452 53.2598 291.452 cv
53.29 291.452 53.3135 291.459 53.3428 291.459 cv
53.3027 291.254 53.2803 291.042 53.2803 290.826 cv
53.2803 289.037 54.7285 287.588 56.5166 287.588 cv
57.374 287.588 58.1475 287.926 58.7256 288.469 cv
59.9561 286.753 61.9004 285.635 64.1035 285.635 cv
67.835 285.635 70.8574 288.814 70.8574 292.732 cv
70.8574 292.745 70.8555 292.756 70.8555 292.768 cv
71.7715 292.933 72.4668 293.737 72.4668 294.711 cv
72.4668 295.23 72.2646 295.7 71.9424 296.053 cv
73.5811 296.598 74.7617 298.045 74.7617 299.763 cv
74.7617 300.381 74.5947 300.961 74.3213 301.483 cv
75.8184 301.735 76.9385 302.762 76.9385 303.99 cv
76.9385 304.483 76.75 304.941 76.4365 305.332 cv
77.6924 305.982 78.5176 307.065 78.5176 308.294 cv
78.5176 310.281 76.376 311.892 73.7324 311.892 cv
73.6035 311.892 73.4834 311.87 73.3564 311.862 cv
73.3564 311.873 73.3584 311.882 73.3584 311.892 cv
73.3584 312.889 72.3721 313.696 71.1533 313.696 cv
71.041 313.696 70.9336 313.685 70.8242 313.67 cv
70.5742 315.138 69.2461 316.26 67.6309 316.26 cv
66.2148 316.26 65.0205 315.387 64.5781 314.183 cv
64.5264 314.187 64.4756 314.198 64.4199 314.198 cv
63.3447 314.198 62.4717 313.296 62.4717 312.178 cv
62.4717 311.95 62.5156 311.734 62.583 311.53 cv
61.6064 311.054 60.9307 310.194 60.8369 309.188 cv
60.5723 309.268 60.2949 309.324 60.002 309.324 cv
58.4766 309.324 57.2363 308.116 57.2363 306.625 cv
57.2363 305.85 57.5762 305.156 58.1104 304.662 cv
57.7607 304.31 57.5059 303.858 57.3652 303.351 cv
57.0439 303.525 56.6924 303.655 56.3213 303.752 cv
55.8545 304.744 54.8711 305.431 53.7197 305.431 cv
53.2168 305.431 52.751 305.29 52.3389 305.059 cv
51.666 305.698 50.8066 306.098 49.8564 306.098 cv
47.7207 306.098 45.9863 304.149 45.9863 301.745 cv
45.9863 299.34 47.7207 297.392 49.8564 297.392 cv
cp
.760784 .686275 .27451 rgb
f
151.419 376.353 mo
151.419 376.353 153.581 376.936 154.146 379.744 cv
154.146 379.744 151.636 379.525 151.419 376.353 cv
cp
.301961 .12549 .0823529 rgb
f
140.709 383.132 mo
141.247 383.161 148.875 379.14 151.419 376.353 cv
151.419 376.353 151.964 378.95 154.146 379.744 cv
147.428 384.723 li
140.709 383.132 li
cp
.6 .247059 .160784 rgb
f
170.349 380.954 mo
170.349 380.954 171.438 379.691 171.528 389.969 cv
171.62 400.329 170.828 403.55 170.349 403.586 cv
169.526 403.646 162.176 395.351 162.176 395.351 cv
170.349 380.954 li
cp
.301961 .12549 .0823529 rgb
f
118.034 402.4 mo
118.034 402.4 114.694 400.56 115.48 393.455 cv
116.266 386.352 115.797 380.79 118.155 381.052 cv
120.513 381.314 148.097 384.248 154.384 382.931 cv
160.672 381.614 170.349 380.954 170.349 380.954 cv
170.349 380.954 169.984 382.267 169.981 383.261 cv
169.971 385.728 168.581 402.007 170.349 403.586 cv
170.349 403.586 145.149 401.809 141.76 402.4 cv
138.371 402.994 118.034 402.4 118.034 402.4 cv
cp
.741176 .376471 .223529 rgb
f
gsave
118.034 402.4 mo
118.034 402.4 114.694 400.56 115.48 393.455 cv
116.266 386.352 115.797 380.79 118.155 381.052 cv
120.513 381.314 148.097 384.248 154.384 382.931 cv
160.672 381.614 170.349 380.954 170.349 380.954 cv
170.349 380.954 169.984 382.267 169.981 383.261 cv
169.971 385.728 168.581 402.007 170.349 403.586 cv
170.349 403.586 145.149 401.809 141.76 402.4 cv
138.371 402.994 118.034 402.4 118.034 402.4 cv
cp
clp
171.896 382.799 mo
171.494 382.75 171.092 382.702 170.687 382.651 cv
170.325 382.616 169.965 382.576 169.604 382.55 cv
169.245 382.519 168.883 382.484 168.518 382.461 cv
166.539 382.397 164.154 382.33 161.985 382.196 cv
161.62 382.192 161.256 382.197 160.893 382.201 cv
160.526 382.201 160.16 382.204 159.796 382.208 cv
159.391 382.215 158.99 382.222 158.635 382.224 cv
157.346 382.139 156.316 382.628 154.993 382.424 cv
154.668 382.415 154.348 382.406 154.061 382.403 cv
153.774 382.403 153.489 382.401 153.204 382.397 cv
152.485 382.396 151.768 382.399 151.054 382.397 cv
150.694 382.397 150.295 382.382 149.933 382.384 cv
146.112 381.83 142.708 381.734 139.208 382.41 cv
138.843 382.357 138.409 382.33 138.006 382.288 cv
131.983 381.702 125.615 381.602 119.53 382.646 cv
117.818 383.126 116.127 382.292 114.831 381.665 cv
114.238 381.565 113.62 381.504 112.996 381.475 cv
112.418 381.442 111.844 381.412 111.268 381.38 cv
111.258 382.042 li
111.324 382.047 111.389 382.053 111.455 382.057 cv
112.129 382.096 112.8 382.139 113.476 382.176 cv
116.128 382.298 118.826 384.196 121.562 383.487 cv
126.972 381.464 132.922 382.376 138.36 382.731 cv
138.786 382.761 139.259 382.763 139.618 382.805 cv
143.042 382.261 146.787 382.37 150.176 382.821 cv
150.546 382.831 150.912 382.831 151.28 382.843 cv
152.11 382.853 152.932 382.876 153.759 382.896 cv
154.041 382.904 154.315 382.916 154.596 382.936 cv
156.98 383.692 159.042 382.706 161.293 382.986 cv
161.651 383.037 162.007 383.079 162.37 383.115 cv
164.897 383.386 167.538 383.438 169.893 383.331 cv
170.237 383.398 170.573 383.454 170.909 383.498 cv
172.033 383.652 173.105 383.698 174.17 383.719 cv
174.178 383.18 li
173.419 383.174 172.668 383.1 171.896 382.799 cv
cp
.6 .247059 .160784 rgb
f
170.87 384.485 mo
168.546 384.126 166.014 384.4 163.516 384.415 cv
163.144 384.415 162.762 384.426 162.411 384.415 cv
159.039 384.488 155.973 384.748 152.414 384.222 cv
152.089 384.216 151.77 384.209 151.446 384.207 cv
151.123 384.2 150.803 384.2 150.481 384.199 cv
150.098 384.194 149.709 384.194 149.329 384.193 cv
146.098 383.693 143.034 383.949 139.948 384.301 cv
139.625 384.284 139.3 384.254 138.958 384.207 cv
133.163 383.418 126.692 383.416 121.579 385.494 cv
119.537 386.275 116.813 385.49 114.63 384.644 cv
114.023 384.517 113.403 384.481 112.784 384.475 cv
112.273 384.466 111.765 384.445 111.255 384.434 cv
111.255 385.207 li
111.342 385.198 111.434 385.201 111.52 385.195 cv
112.129 385.143 112.731 385.055 113.428 385.15 cv
115.787 385.232 118.173 386.798 120.217 386.282 cv
126.35 384.723 132.479 383.161 139.08 384.517 cv
139.432 384.564 139.775 384.587 140.11 384.6 cv
143.036 384.216 146.098 384.211 149.235 384.539 cv
149.585 384.542 149.933 384.533 150.282 384.533 cv
150.571 384.533 150.863 384.536 151.153 384.53 cv
151.443 384.533 151.734 384.536 152.025 384.533 cv
155.633 385.009 159.375 385.01 163.074 384.982 cv
163.452 385.005 163.827 385.021 164.203 385.031 cv
166.44 385.105 168.659 385.009 170.836 384.993 cv
171.132 385.021 171.444 385.043 171.738 385.061 cv
172.328 385.104 172.923 385.127 173.517 385.126 cv
173.739 385.132 173.959 385.126 174.18 385.124 cv
174.18 384.741 li
173.515 384.727 172.848 384.694 172.183 384.633 cv
171.745 384.593 171.306 384.542 170.87 384.485 cv
cp
.858824 .486275 .32549 rgb
f
172.013 386.902 mo
171.604 386.855 171.149 386.79 170.792 386.713 cv
168.831 386.646 166.826 386.546 164.801 386.536 cv
164.373 386.531 163.926 386.531 163.525 386.54 cv
159.375 386.836 154.95 386.571 150.884 386.508 cv
150.458 386.491 150.036 386.475 149.614 386.457 cv
147.509 386.383 145.417 386.307 143.374 386.304 cv
142.755 386.301 142.136 386.301 141.515 386.304 cv
140.895 386.307 140.272 386.313 139.647 386.216 cv
133.84 383.939 128.055 386.54 122.263 387.842 cv
119.537 388.357 116.469 386.798 113.309 386.763 cv
112.682 386.756 112.052 386.752 111.424 386.74 cv
111.367 386.74 111.312 386.738 111.255 386.738 cv
111.255 387.561 li
112.032 387.578 112.811 387.599 113.586 387.607 cv
114.203 387.64 114.821 387.669 115.501 387.779 cv
118.855 388.362 122.602 389.406 125.667 388.367 cv
130.094 386.809 134.862 385.51 139.774 386.925 cv
140.192 386.997 140.617 387.013 141.045 387.016 cv
141.471 387.024 141.903 387.038 142.331 387.047 cv
142.902 387.069 143.479 387.092 144.052 387.118 cv
146.351 387.336 148.582 387.36 150.802 387.346 cv
151.175 387.346 151.6 387.336 151.974 387.329 cv
155.631 387.354 159.373 387.616 163.241 387.245 cv
163.623 387.214 164.09 387.183 164.519 387.161 cv
166.476 387.038 168.471 387.109 170.415 387.64 cv
170.886 387.672 171.325 387.707 171.775 387.74 cv
172.596 387.794 173.393 387.842 174.18 387.877 cv
174.18 387.021 li
173.461 387.021 172.741 386.99 172.013 386.902 cv
cp
.6 .247059 .160784 rgb
f
170.374 389.399 mo
169.956 389.406 169.559 389.406 169.113 389.385 cv
167.284 388.773 165.532 388.644 163.715 388.809 cv
163.327 388.83 162.949 388.868 162.559 388.911 cv
159.036 389.185 155.97 388.657 152.405 389.157 cv
152.114 389.167 151.825 389.18 151.535 389.185 cv
150.672 389.204 149.815 389.184 148.985 389.04 cv
148.329 389.019 147.674 389.003 147.023 388.986 cv
144.84 388.94 142.67 388.941 140.507 388.968 cv
139.967 388.979 139.435 388.974 138.945 388.901 cv
137.243 388.64 135.543 387.857 133.843 388.375 cv
128.395 389.935 122.605 390.715 116.761 389.648 cv
116.137 389.629 115.544 389.634 114.951 389.629 cv
113.745 389.661 112.724 389.654 111.384 389.589 cv
111.341 389.589 111.297 389.585 111.255 389.584 cv
111.255 390.399 li
111.286 390.399 111.318 390.405 111.349 390.405 cv
112.961 390.433 114.578 390.418 116.244 390.374 cv
116.854 390.374 117.461 390.374 118.135 390.394 cv
123.625 390.977 128.732 390.192 134.183 389.68 cv
135.88 389.422 137.924 389.943 139.507 390.052 cv
139.95 390.037 140.389 390.034 140.834 390.028 cv
143.042 390 145.249 389.982 147.452 389.981 cv
148.087 389.978 148.723 389.978 149.358 389.982 cv
150.199 389.978 150.988 389.968 151.749 389.968 cv
152.131 389.965 152.567 389.968 152.944 389.968 cv
155.966 389.697 159.375 389.706 162.29 390.132 cv
162.656 390.06 163.025 390.015 163.399 389.992 cv
165.26 389.868 167.18 390.237 168.75 390.29 cv
169.09 390.29 169.434 390.285 169.764 390.285 cv
171.257 390.065 172.726 390.046 174.18 390.104 cv
174.18 389.418 li
172.879 389.357 171.592 389.321 170.374 389.399 cv
cp
.858824 .486275 .32549 rgb
f
170.437 391.403 mo
170.15 391.396 169.795 391.402 169.481 391.388 cv
169.165 391.387 168.854 391.376 168.535 391.371 cv
167.906 391.353 167.273 391.337 166.643 391.306 cv
166.288 391.332 165.934 391.348 165.582 391.355 cv
165.229 391.365 164.877 391.365 164.534 391.353 cv
163.394 391.17 162.257 391.021 161.127 390.911 cv
160.741 390.864 160.362 390.823 159.979 390.784 cv
158.013 390.481 156.31 390.744 154.345 390.876 cv
153.965 390.938 153.523 390.967 153.088 390.988 cv
152.653 391.005 152.231 391.005 151.904 391.016 cv
151.495 391.015 151.089 391.011 150.685 391.011 cv
148.653 391.011 146.636 391.016 144.671 391.037 cv
144.024 391.04 143.37 391.04 142.724 391.04 cv
141.176 391.016 139.72 391.065 138.285 391.13 cv
137.809 391.146 137.358 391.149 136.943 391.133 cv
131.458 390.464 126.009 392.275 120.71 391.311 cv
120.038 391.294 119.419 391.301 118.8 391.306 cv
116.616 391.394 114.498 391.441 112.39 391.433 cv
112.012 391.432 111.634 391.427 111.255 391.425 cv
111.255 392.193 li
111.563 392.198 111.87 392.202 112.177 392.203 cv
114.991 392.211 117.766 392.166 120.417 392.064 cv
120.987 392.062 121.553 392.056 122.15 392.064 cv
127.033 392.02 131.457 392.021 136.167 392.01 cv
136.656 392.011 137.147 392.017 137.636 392.016 cv
140.077 392.011 142.459 391.992 144.91 391.927 cv
145.586 391.941 146.262 391.955 146.942 391.971 cv
147.452 391.978 147.968 391.986 148.495 391.992 cv
148.758 392 149.027 392 149.293 392.011 cv
151.881 392.303 154.606 391.786 157.372 391.666 cv
157.758 391.654 158.145 391.649 158.533 391.649 cv
160.458 391.665 162.397 391.787 164.401 392.055 cv
164.785 392.056 165.166 392.056 165.542 392.056 cv
166.299 392.062 167.042 392.064 167.769 392.065 cv
168.392 392.065 169.019 392.071 169.652 392.07 cv
169.899 392.065 170.151 392.064 170.396 392.058 cv
170.661 392.043 170.918 392.033 171.185 392.02 cv
172.22 391.776 173.208 391.709 174.18 391.727 cv
174.18 391.01 li
172.895 390.985 171.632 391.155 170.437 391.403 cv
cp
.6 .247059 .160784 rgb
f
170.721 392.62 mo
170.465 392.622 170.208 392.626 169.952 392.626 cv
169.698 392.627 169.442 392.627 169.181 392.627 cv
167.729 392.694 166.23 392.688 164.714 392.636 cv
164.338 392.626 163.928 392.599 163.545 392.578 cv
161.575 392.255 159.639 391.916 157.699 391.902 cv
157.292 391.926 156.895 391.938 156.497 391.978 cv
153.926 392.826 151.542 392.564 148.774 392.299 cv
148.409 392.303 148.043 392.299 147.674 392.299 cv
147.309 392.299 146.943 392.299 146.573 392.297 cv
145.999 392.297 145.419 392.297 144.835 392.297 cv
140.309 392.29 136.223 392.813 131.792 392.526 cv
131.21 392.511 130.626 392.502 130.043 392.488 cv
128.294 392.448 126.548 392.434 124.828 392.526 cv
124.186 392.521 123.543 392.52 122.905 392.517 cv
122.391 392.52 121.873 392.525 121.356 392.52 cv
120.839 392.521 120.323 392.521 119.804 392.521 cv
117.067 392.521 114.303 392.521 111.548 392.525 cv
111.449 392.525 111.353 392.525 111.255 392.525 cv
111.255 393.289 li
114.19 393.254 117.134 393.205 120.013 393.08 cv
120.666 393.071 121.319 393.066 121.969 393.059 cv
125.011 393.06 127.979 393.192 130.96 393.259 cv
131.557 393.27 132.152 393.279 132.754 393.288 cv
136.905 393.592 140.988 392.813 145.141 393.06 cv
145.721 393.077 146.305 393.091 146.893 393.11 cv
147.188 393.118 147.488 393.131 147.795 393.148 cv
151.202 393.604 154.946 393.868 158.512 393.172 cv
158.897 393.169 159.299 393.164 159.704 393.164 cv
160.869 393.192 162.047 393.251 163.241 393.353 cv
163.688 393.359 164.137 393.361 164.579 393.361 cv
166.348 393.368 168.138 393.375 169.969 393.388 cv
170.231 393.386 170.491 393.386 170.75 393.386 cv
170.972 393.376 171.22 393.369 171.487 393.368 cv
171.752 393.368 172.033 393.366 172.313 393.361 cv
172.889 393.47 173.528 393.395 174.18 393.342 cv
174.18 392.491 li
173.065 392.391 171.942 392.389 170.721 392.62 cv
cp
f
169.313 394.339 mo
168.932 394.348 168.555 394.368 168.17 394.382 cv
165.561 394.525 162.886 394.59 160.227 394.592 cv
159.808 394.592 159.322 394.601 158.907 394.592 cv
155.285 394.646 151.883 394.651 148.2 394.585 cv
147.74 394.618 147.29 394.656 146.825 394.685 cv
141.135 395.087 135.445 394.613 129.723 394.325 cv
129.215 394.31 128.705 394.285 128.196 394.262 cv
126.66 394.209 125.112 394.146 123.546 394.117 cv
122.979 394.112 122.403 394.104 121.826 394.104 cv
118.428 394.229 115.003 394.421 111.558 394.549 cv
111.458 394.555 111.356 394.557 111.255 394.562 cv
111.255 395.363 li
111.329 395.36 111.399 395.356 111.473 395.353 cv
115.005 395.317 118.571 395.2 122.071 394.924 cv
122.658 394.924 123.239 394.926 123.821 394.929 cv
125.597 394.952 127.36 395.018 129.125 395.08 cv
129.571 395.096 130.008 395.107 130.453 395.129 cv
135.521 395.562 140.389 395.816 145.348 395.64 cv
145.799 395.627 146.252 395.604 146.704 395.579 cv
151.202 395.168 155.625 395.431 159.917 395.407 cv
160.308 395.403 160.704 395.392 161.099 395.38 cv
162.283 395.358 163.471 395.302 164.661 395.245 cv
165.112 395.217 165.565 395.2 166.02 395.173 cv
166.387 395.217 166.757 395.235 167.136 395.234 cv
167.538 395.235 167.933 395.228 168.341 395.215 cv
170.32 395.353 172.219 395.035 174.18 394.969 cv
174.18 394.091 li
173.784 394.11 173.382 394.148 172.981 394.191 cv
171.731 394.32 170.473 394.509 169.313 394.339 cv
cp
f
166.764 395.948 mo
166.408 395.924 166.036 395.885 165.677 395.834 cv
165.227 395.852 164.776 395.861 164.32 395.874 cv
163.135 395.903 161.951 395.913 160.772 395.929 cv
160.377 395.925 159.988 395.933 159.596 395.933 cv
155.627 395.948 151.881 395.435 147.852 396.141 cv
147.38 396.18 146.871 396.217 146.415 396.24 cv
140.938 396.515 135.66 395.908 130.232 395.73 cv
129.776 395.725 129.32 395.717 128.868 395.717 cv
128.567 395.713 128.261 395.712 127.96 395.717 cv
126.352 395.669 124.309 395.667 122.567 395.655 cv
122.268 395.646 121.974 395.64 121.679 395.646 cv
121.254 395.667 120.835 395.686 120.411 395.713 cv
119.201 396.183 117.835 395.917 116.631 395.924 cv
116.345 395.929 116.058 395.936 115.771 395.948 cv
115.485 395.96 115.196 395.978 114.905 395.985 cv
114.596 396.066 114.295 396.116 113.995 396.157 cv
113.695 396.201 113.396 396.228 113.101 396.251 cv
112.542 396.206 111.9 396.328 111.255 396.414 cv
111.255 397.315 li
113.106 397.301 114.924 397.227 116.693 397.239 cv
117.057 397.213 117.418 397.168 117.776 397.112 cv
119.573 396.838 121.327 396.302 123.17 396.511 cv
123.506 396.533 123.835 396.566 124.16 396.587 cv
125.802 396.718 127.36 396.841 129.042 396.628 cv
129.334 396.618 129.615 396.623 129.89 396.622 cv
130.165 396.629 130.44 396.636 130.718 396.636 cv
134.528 396.684 138.426 396.883 142.298 396.911 cv
142.853 396.912 143.406 396.905 143.96 396.905 cv
144.855 396.949 145.643 396.838 146.426 396.75 cv
146.684 396.723 146.942 396.69 147.204 396.677 cv
151.204 395.95 154.946 396.474 159.086 396.657 cv
159.401 396.66 159.717 396.667 160.03 396.667 cv
161.286 396.673 162.535 396.668 163.792 396.66 cv
164.208 396.656 164.626 396.649 165.043 396.641 cv
165.482 396.684 165.916 396.729 166.348 396.767 cv
167.877 397.268 169.926 397.011 171.625 397.011 cv
172.479 397.011 173.332 396.911 174.18 396.798 cv
174.18 395.651 li
171.66 396.086 169.501 396.414 166.764 395.948 cv
cp
.858824 .486275 .32549 rgb
f
165.248 397.561 mo
164.831 397.544 164.415 397.516 163.992 397.489 cv
163.588 397.492 163.188 397.493 162.785 397.506 cv
162.381 397.509 161.979 397.516 161.58 397.516 cv
160.979 397.523 160.346 397.506 159.682 397.492 cv
159.346 397.492 159.002 397.5 158.651 397.498 cv
154.944 396.995 151.2 397.252 147.536 397.782 cv
147.167 397.823 146.805 397.863 146.44 397.906 cv
144.624 398.099 142.833 398.224 141.159 397.938 cv
140.526 397.928 139.893 397.909 139.261 397.892 cv
136.497 397.805 133.746 397.627 130.998 397.4 cv
130.595 397.373 130.203 397.337 129.806 397.307 cv
128.508 397.669 127.223 397.75 125.946 397.743 cv
125.519 397.74 125.097 397.733 124.676 397.723 cv
122.413 397.892 120.28 398.339 118.12 398.476 cv
117.759 398.499 117.359 398.526 116.985 398.538 cv
115.093 398.68 113.149 398.472 111.255 398.263 cv
111.255 398.912 li
113.297 399.103 115.287 399.11 117.344 398.78 cv
117.721 398.748 118.135 398.698 118.536 398.648 cv
120.43 398.433 122.337 398.087 124.456 397.908 cv
124.823 397.915 125.208 397.92 125.573 397.928 cv
127.03 397.961 128.479 397.961 129.9 397.756 cv
130.277 397.756 130.616 397.756 130.952 397.774 cv
131.283 397.782 131.615 397.793 131.955 397.808 cv
135.053 398.195 138.13 398.28 141.2 398.224 cv
141.795 398.224 142.256 398.299 142.706 398.353 cv
144.401 398.465 146.204 398.19 147.984 397.968 cv
148.36 397.909 148.724 397.868 149.099 397.81 cv
152.221 397.258 154.943 397.517 158.127 397.779 cv
158.496 397.782 158.882 397.8 159.254 397.8 cv
159.992 397.8 160.744 397.81 161.514 397.814 cv
162.147 397.819 162.774 397.814 163.405 397.805 cv
163.782 397.798 164.192 397.8 164.576 397.791 cv
164.94 397.823 165.305 397.845 165.674 397.861 cv
166.068 397.882 166.506 397.895 166.868 397.908 cv
169.234 398.167 171.74 397.74 174.18 397.521 cv
174.18 397.238 li
171.622 397.436 168.986 397.729 166.476 397.601 cv
166.071 397.593 165.661 397.576 165.248 397.561 cv
cp
.6 .247059 .160784 rgb
f
167.553 399.554 mo
167.125 399.571 166.635 399.604 166.225 399.621 cv
165.399 399.641 164.577 399.663 163.751 399.674 cv
163.354 399.671 162.959 399.664 162.567 399.663 cv
159.813 399.654 157.123 399.759 154.26 400.126 cv
153.243 400.382 151.878 399.863 150.86 399.6 cv
149.84 399.598 149.157 399.86 148.196 400.01 cv
147.732 400.143 147.277 400.265 146.819 400.398 cv
145.449 400.791 144.094 401.159 142.692 401.158 cv
141.668 400.896 140.649 401.158 139.797 400.541 cv
139.29 400.388 138.705 400.363 138.108 400.342 cv
136.125 400.265 134.142 400.143 132.149 399.943 cv
131.748 399.904 131.321 399.863 130.955 399.813 cv
129.386 399.72 127.845 399.663 126.299 399.651 cv
125.917 399.654 125.498 399.654 125.105 399.658 cv
123.175 399.747 121.274 399.919 119.375 400.027 cv
118.996 400.049 118.616 400.072 118.234 400.087 cv
115.894 400.233 113.572 400.207 111.255 400.126 cv
111.255 400.486 li
113.488 400.418 115.708 400.329 117.807 400.31 cv
118.185 400.292 118.626 400.269 119.04 400.258 cv
120.976 400.174 122.916 400.126 124.924 400.157 cv
125.325 400.145 125.779 400.136 126.173 400.119 cv
127.743 400.094 129.303 400.125 130.82 400.313 cv
131.154 400.325 131.555 400.337 131.894 400.343 cv
132.235 400.35 132.573 400.352 132.914 400.363 cv
134.608 400.51 136.302 400.619 138 400.707 cv
138.558 400.742 139.118 400.781 139.612 400.949 cv
140.308 401.415 141.327 401.675 142.351 401.682 cv
144.01 401.682 145.573 401.278 147.107 400.869 cv
147.61 400.742 148.103 400.619 148.573 400.551 cv
150.52 400.119 152.898 401.167 154.598 400.907 cv
157.7 400.543 160.793 400.436 163.891 400.45 cv
164.336 400.459 164.78 400.459 165.262 400.452 cv
165.624 400.472 165.986 400.48 166.345 400.482 cv
166.706 400.486 167.066 400.486 167.418 400.474 cv
169.874 400.056 171.944 399.687 174.18 399.771 cv
174.18 399.096 li
172 398.932 169.85 399.063 167.553 399.554 cv
cp
.858824 .486275 .32549 rgb
f
169.231 401.305 mo
168.822 401.352 168.376 401.42 167.964 401.447 cv
167.133 401.501 166.291 401.52 165.423 401.466 cv
165.129 401.407 164.833 401.338 164.545 401.251 cv
164.12 401.192 163.71 401.158 163.282 401.107 cv
160.5 400.975 157.719 400.93 154.942 401.691 cv
153.923 401.947 152.22 401.167 150.86 400.907 cv
149.838 400.645 148.815 401.423 147.856 401.281 cv
147.446 401.353 147.03 401.452 146.603 401.567 cv
144.055 402.24 141.506 402.745 138.973 401.26 cv
138.353 401.215 137.731 401.181 137.104 401.147 cv
135.847 401.081 134.594 401.004 133.34 400.914 cv
132.754 400.907 132.17 400.907 131.584 400.904 cv
131.295 400.904 130.974 400.896 130.675 400.897 cv
129.222 400.787 127.799 400.676 126.382 400.618 cv
126.029 400.604 125.675 400.592 125.317 400.581 cv
123.452 400.723 121.497 400.67 119.542 400.658 cv
119.153 400.651 118.761 400.652 118.372 400.658 cv
116.1 400.628 113.667 400.862 111.255 401.039 cv
111.255 401.81 li
113.687 401.601 116.075 401.488 118.615 401.237 cv
118.979 401.202 119.348 401.176 119.713 401.152 cv
121.549 401.03 123.382 401.062 125.186 401.242 cv
125.561 401.248 125.933 401.251 126.306 401.251 cv
127.803 401.275 129.315 401.375 130.836 401.532 cv
131.14 401.537 131.446 401.54 131.749 401.551 cv
132.05 401.556 132.352 401.563 132.657 401.575 cv
133.266 401.592 133.87 401.614 134.477 401.64 cv
135.126 401.686 135.782 401.732 136.431 401.775 cv
137.081 401.814 137.731 401.848 138.38 401.885 cv
140.862 403.223 143.254 403.213 145.695 402.642 cv
146.183 402.525 146.677 402.392 147.17 402.239 cv
150.176 401.161 152.56 402.468 155.622 402.208 cv
157.606 402 159.592 401.87 161.577 401.829 cv
161.975 401.822 162.372 401.82 162.769 401.813 cv
163.89 402.018 164.954 402.229 165.996 402.394 cv
166.345 402.445 166.693 402.496 167.039 402.539 cv
168.307 402.766 169.542 402.688 170.749 402.546 cv
171.149 402.5 171.553 402.439 171.953 402.386 cv
172.592 402.237 173.512 402.223 174.18 402.167 cv
174.18 400.93 li
172.515 400.854 170.875 401.042 169.231 401.305 cv
cp
.6 .247059 .160784 rgb
f
83.7402 379.664 mo
84.5347 379.64 85.3311 379.626 86.1313 379.645 cv
85.3247 379.605 84.5298 379.613 83.7402 379.664 cv
cp
level3{
gsave
clp
[134.895 .0809372 -.0809372 134.895 79.9443 379.639 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .870588 .796078 ]
/C1 [.909804 .839216 .784314 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[134.895 .0809372 -.0809372 134.895 79.9443 379.639 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%7nKo^qeJo^qeJo^qeJo^qeJoCMSFoCMSFoCMSFoCMSFoCMSFo()ABo()ABo()ABo()ABo()ABnaZ/>
naZ/>naZ/>naZ/>naZ/=nF5r:nF5r:nF5r:nF5r:nF5r9n*f`6n*f`6n*f`6n*f`6n*f`5mdBN2mdBN2
mdBN2mdBN2mdBK0mHs<.mHs<.mHs<.mHs<.mHs9,m-O**m-O**m-O**m-O**m-O'(lg*m&lg*m&lg*m&
lg*m&lg!d#lK[["lK[["lK[["lK[["lKRQtl07Hsl07Hsl07Hsl07Hsl0.?pkih6okih6okih6okih6o
~>
<~hVI#Dh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;$f@gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gtUT<gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY1B8g=k97g=k97g=k97g=k97g=k97g=k97g=k97
g=b04g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"=s0f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f[na,f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@JO(f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'
~>
<~bK@uMb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lLb0%lLb0%lLb0%iJaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZH
aiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZGaN2HDaN2HDaN2HDaN2HDaN2HD
aN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HD
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
83.7402 379.664 mo
84.5347 379.64 85.3311 379.626 86.1313 379.645 cv
85.3247 379.605 84.5298 379.613 83.7402 379.664 cv
cp
level3{
gsave
clp
[58.0804 .0376151 -.0376151 58.0804 53.1904 379.622 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[58.0804 .0376151 -.0376151 58.0804 53.1904 379.622 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
83.7402 379.664 mo
82.4619 379.706 81.1904 379.79 79.9424 380 cv
81.2622 379.896 82.5029 379.747 83.7402 379.664 cv
cp
level3{
gsave
clp
[134.941 .0809644 -.0809644 134.941 79.9424 379.83 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[134.941 .0809644 -.0809644 134.941 79.9424 379.83 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
83.7402 379.664 mo
82.4619 379.706 81.1904 379.79 79.9424 380 cv
81.2622 379.896 82.5029 379.747 83.7402 379.664 cv
cp
level3{
gsave
clp
[58.0881 .0376202 -.0376202 58.0881 53.1865 379.813 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[58.0881 .0376202 -.0376202 58.0881 53.1865 379.813 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
271.329 400.842 mo
270.148 404.366 267.314 405.731 264.508 407.182 cv
264.196 407.344 263.885 407.506 263.576 407.671 cv
260.822 409.581 257.679 413.594 253.693 410.566 cv
253.4 410.497 253.11 410.449 252.818 410.424 cv
252.331 410.386 251.839 410.411 251.316 410.524 cv
251.056 410.58 250.787 410.656 250.508 410.757 cv
247.49 413.38 245.82 411.299 243.493 410.649 cv
243.167 410.559 241.973 409.894 241.718 409.692 cv
239.425 407.892 238.858 406.605 235.956 405.563 cv
235.235 405.618 234.35 404.564 234.134 404.302 cv
233.922 404.039 233.714 403.773 233.515 403.502 cv
233.273 403.178 233.044 402.848 232.822 402.514 cv
229.844 399.944 228.727 396.467 228.703 392.749 cv
228.702 392.377 229.453 389.792 229.609 389.449 cv
231.555 385.188 230.335 385.703 230.77 381.359 cv
230.891 381.054 231.042 380.757 231.23 380.473 cv
231.417 380.189 231.643 379.919 231.916 379.664 cv
232.081 379.295 232.244 378.935 232.408 378.582 cv
232.904 377.524 233.408 376.536 233.896 375.633 cv
234.101 375.371 234.312 375.114 234.527 374.864 cv
235.599 373.609 236.779 372.497 238.044 371.53 cv
238.355 371.297 238.673 371.076 239.001 370.862 cv
239.37 370.661 239.736 370.469 240.103 370.283 cv
240.467 370.098 240.833 369.919 241.197 369.75 cv
244.961 368.682 247.822 368.335 251.789 366.999 cv
252.132 366.988 252.474 366.985 252.815 366.989 cv
253.158 366.991 253.499 367.008 253.838 367.028 cv
254.194 367.107 254.545 367.206 254.897 367.315 cv
257.7 368.19 260.305 369.78 263.063 369.681 cv
263.418 369.847 263.774 370.053 264.125 370.272 cv
264.828 370.71 265.514 371.188 266.18 371.71 cv
266.93 372.297 267.635 372.922 268.292 373.579 cv
268.509 373.8 268.723 374.021 268.932 374.247 cv
272.104 376.998 271.194 381.463 274.139 385.073 cv
274.238 385.432 274.311 385.782 274.382 386.131 cv
274.532 386.829 274.708 387.523 274.941 388.21 cv
274.968 388.603 274.986 388.995 274.994 389.388 cv
274.818 393.362 274.539 397.025 271.735 399.765 cv
271.598 400.057 271.468 400.417 271.329 400.842 cv
cp
.301961 .12549 .0823529 rgb
f
269.23 399.613 mo
268.177 402.757 265.65 403.974 263.147 405.267 cv
262.869 405.41 262.591 405.556 262.315 405.703 cv
259.859 407.407 257.057 410.984 253.502 408.284 cv
253.241 408.224 252.983 408.181 252.723 408.159 cv
252.289 408.123 251.849 408.146 251.383 408.247 cv
251.152 408.296 250.912 408.365 250.663 408.455 cv
247.971 410.793 246.481 408.938 244.406 408.358 cv
244.118 408.277 243.052 407.685 242.825 407.506 cv
240.78 405.899 240.274 404.752 237.685 403.822 cv
237.043 403.873 236.254 402.934 236.062 402.698 cv
235.874 402.465 235.688 402.227 235.509 401.985 cv
235.294 401.696 235.089 401.401 234.891 401.104 cv
232.236 398.813 231.24 395.712 231.218 392.397 cv
231.217 392.065 231.886 389.76 232.027 389.454 cv
233.762 385.655 232.673 386.113 233.062 382.241 cv
233.169 381.968 233.303 381.703 233.472 381.45 cv
233.64 381.197 233.841 380.956 234.083 380.729 cv
234.23 380.399 234.375 380.079 234.523 379.764 cv
234.965 378.821 235.415 377.938 235.85 377.134 cv
236.033 376.9 236.219 376.672 236.413 376.448 cv
237.368 375.329 238.42 374.338 239.549 373.476 cv
239.826 373.268 240.109 373.07 240.402 372.879 cv
240.73 372.701 241.057 372.529 241.384 372.363 cv
241.709 372.198 242.035 372.039 242.36 371.888 cv
245.716 370.936 248.268 370.625 251.804 369.436 cv
252.111 369.425 252.416 369.422 252.72 369.426 cv
253.025 369.43 253.33 369.443 253.632 369.461 cv
253.951 369.531 254.263 369.619 254.576 369.716 cv
257.077 370.497 259.399 371.914 261.858 371.826 cv
262.175 371.974 262.493 372.158 262.806 372.354 cv
263.432 372.743 264.044 373.17 264.638 373.636 cv
265.307 374.159 265.935 374.717 266.521 375.303 cv
266.714 375.498 266.906 375.696 267.091 375.897 cv
269.92 378.351 269.11 382.333 271.735 385.552 cv
271.824 385.871 271.887 386.184 271.953 386.494 cv
272.085 387.117 272.243 387.737 272.451 388.349 cv
272.474 388.699 272.49 389.05 272.498 389.399 cv
272.341 392.943 272.091 396.21 269.591 398.652 cv
269.468 398.912 269.353 399.234 269.23 399.613 cv
cp
.858824 .486275 .32549 rgb
f
238.422 399.387 mo
239.646 400.345 240.563 401.513 241.452 402.642 cv
242.422 403.876 243.416 405.149 244.829 406.158 cv
245.005 406.285 245.24 406.354 245.491 406.427 cv
245.606 406.461 245.721 406.494 245.833 406.533 cv
245.95 406.574 li
247.716 407.192 248.251 407.378 249.857 406.717 cv
250.932 406.273 252.456 406.164 252.899 406.141 cv
253.85 405.903 254.792 405.868 255.704 405.836 cv
256.658 405.801 257.558 405.769 258.414 405.479 cv
260.118 404.9 261.877 403.889 263.429 402.996 cv
264.253 402.524 li
264.47 402.402 264.657 402.179 264.855 401.942 cv
264.931 401.851 265.006 401.76 265.085 401.672 cv
265.085 401.672 li
265.083 401.671 265.11 401.628 265.144 401.574 cv
265.284 401.357 265.542 400.954 265.804 400.403 cv
266.082 399.879 266.401 399.656 266.683 399.461 cv
267.041 399.213 267.322 399.018 267.537 398.118 cv
267.94 396.433 268.533 395.312 269.055 394.321 cv
269.929 392.671 270.559 391.479 269.792 388.557 cv
269.719 388.279 269.71 388.009 269.702 387.748 cv
269.698 387.608 269.693 387.469 269.675 387.329 cv
269.616 386.932 269.376 386.193 269.262 385.838 cv
268.085 383.558 267.014 381.795 265.335 379.171 cv
265.142 378.867 264.945 378.561 264.741 378.25 cv
264.4 377.425 263.864 376.754 263.06 376.124 cv
262.108 375.378 260.878 374.771 259.692 374.182 cv
258.466 373.575 257.199 372.947 256.18 372.149 cv
255.984 371.992 li
255.832 371.89 255.061 371.77 254.771 371.724 cv
254.607 371.699 254.469 371.678 254.382 371.658 cv
253.514 371.494 253.227 371.49 252.459 371.479 cv
252.115 371.474 li
252 371.472 251.885 371.466 251.769 371.461 cv
251.467 371.445 251.182 371.432 250.928 371.492 cv
249.563 371.822 248.482 372.511 247.436 373.176 cv
246.712 373.637 246.029 374.071 245.281 374.375 cv
244.596 374.654 243.892 374.742 243.146 374.837 cv
242.219 374.954 241.261 375.075 240.292 375.587 cv
240.062 375.709 239.859 375.918 239.646 376.14 cv
239.558 376.229 239.468 376.321 239.378 376.408 cv
238.735 377.02 238.129 377.684 237.58 378.386 cv
237.064 379.044 236.59 379.743 236.171 380.461 cv
235.981 380.792 235.592 381.842 235.554 382.182 cv
235.316 384.301 235.285 385.41 235.256 386.388 cv
235.213 387.924 235.178 389.134 234.374 393.307 cv
234.34 393.599 234.777 395.124 234.952 395.591 cv
235.528 397.115 236.323 398.081 237.501 398.712 cv
237.846 398.949 238.14 399.165 238.422 399.387 cv
cp
243.976 406.547 mo
242.675 405.527 241.724 404.318 240.805 403.149 cv
239.908 402.009 239.06 400.931 237.922 400.04 cv
237.643 399.82 237.362 399.614 237.071 399.41 cv
236.81 399.273 236.521 399.087 236.257 398.88 cv
235.344 398.165 234.686 397.213 234.182 395.88 cv
234.173 395.859 233.451 393.75 233.566 393.15 cv
234.359 389.044 234.392 387.862 234.434 386.365 cv
234.463 385.371 234.495 384.243 234.737 382.091 cv
234.792 381.596 235.236 380.439 235.46 380.049 cv
235.898 379.296 236.394 378.566 236.932 377.879 cv
237.507 377.146 238.138 376.45 238.811 375.812 cv
238.895 375.733 238.975 375.649 239.055 375.566 cv
239.304 375.309 239.562 375.044 239.907 374.86 cv
241.009 374.278 242.089 374.142 243.043 374.021 cv
243.734 373.934 244.387 373.851 244.972 373.613 cv
245.651 373.338 246.304 372.922 246.994 372.482 cv
248.045 371.813 249.238 371.055 250.735 370.693 cv
251.105 370.604 251.463 370.622 251.81 370.64 cv
251.916 370.645 252.022 370.649 252.128 370.652 cv
252.47 370.657 li
253.245 370.668 253.597 370.672 254.543 370.853 cv
254.628 370.871 254.751 370.89 254.897 370.912 cv
255.634 371.027 256.219 371.132 256.494 371.347 cv
256.687 371.502 li
257.64 372.249 258.869 372.857 260.056 373.445 cv
261.281 374.052 262.548 374.679 263.567 375.477 cv
264.488 376.197 265.108 376.981 265.465 377.871 cv
265.632 378.112 265.833 378.422 266.029 378.729 cv
267.721 381.374 268.802 383.152 270.019 385.524 cv
270.239 386.187 270.427 386.801 270.491 387.219 cv
270.512 387.394 270.518 387.557 270.524 387.722 cv
270.531 387.947 270.539 388.16 270.587 388.348 cv
271.437 391.58 270.67 393.029 269.783 394.706 cv
269.282 395.652 268.715 396.726 268.336 398.31 cv
268.047 399.515 267.572 399.845 267.152 400.137 cv
266.908 400.305 266.715 400.439 266.539 400.772 cv
266.264 401.354 265.975 401.804 265.835 402.02 cv
265.769 402.126 li
265.633 402.291 265.56 402.38 265.485 402.468 cv
265.249 402.751 265.004 403.044 264.66 403.239 cv
263.839 403.71 li
262.254 404.621 260.458 405.653 258.677 406.257 cv
257.708 406.585 256.749 406.62 255.734 406.658 cv
254.863 406.689 253.962 406.722 253.016 406.951 cv
252.65 406.977 251.149 407.074 250.17 407.476 cv
248.275 408.257 247.461 407.974 245.679 407.351 cv
245.563 407.309 li
245.463 407.275 245.362 407.246 245.26 407.216 cv
244.968 407.132 244.638 407.034 244.348 406.826 cv
244.222 406.735 244.098 406.642 243.976 406.547 cv
cp
.6 .247059 .160784 rgb
f
239.203 398.415 mo
239.481 398.635 li
240.593 399.505 241.429 400.569 242.239 401.599 cv
243.132 402.734 244.052 403.919 245.353 404.84 cv
245.529 404.966 245.752 405.032 245.991 405.102 cv
246.094 405.132 246.199 405.162 246.298 405.197 cv
246.407 405.235 li
248.011 405.796 248.55 405.983 250.058 405.363 cv
251.03 404.963 252.411 404.864 252.81 404.844 cv
253.691 404.625 254.549 404.593 255.38 404.563 cv
256.26 404.531 257.092 404.5 257.89 404.231 cv
259.461 403.698 261.078 402.769 262.502 401.949 cv
263.258 401.517 li
263.47 401.396 263.647 401.187 263.834 400.962 cv
263.908 400.874 263.98 400.787 264.056 400.704 cv
264.055 400.705 264.053 400.706 264.053 400.706 cv
264.05 400.704 264.077 400.663 264.112 400.609 cv
264.24 400.409 264.48 400.034 264.719 399.529 cv
264.96 399.074 265.243 398.878 265.491 398.705 cv
265.822 398.476 266.108 398.277 266.314 397.415 cv
266.681 395.884 267.221 394.862 267.697 393.962 cv
268.507 392.429 269.092 391.322 268.379 388.606 cv
268.317 388.368 268.31 388.134 268.303 387.906 cv
268.298 387.771 268.294 387.634 268.276 387.499 cv
268.229 387.145 268.034 386.549 267.906 386.154 cv
266.803 383.994 265.821 382.38 264.284 379.978 cv
264.107 379.7 263.925 379.418 263.738 379.135 cv
263.431 378.38 262.927 377.751 262.178 377.164 cv
261.296 376.474 260.166 375.914 259.074 375.373 cv
257.956 374.819 256.8 374.247 255.874 373.521 cv
255.697 373.378 li
255.556 373.269 254.793 373.15 254.507 373.105 cv
254.375 373.086 254.261 373.068 254.189 373.053 cv
253.41 372.896 253.137 372.895 252.478 372.886 cv
252.089 372.88 li
251.985 372.879 251.88 372.873 251.775 372.868 cv
251.493 372.854 251.224 372.841 250.977 372.901 cv
249.709 373.206 248.711 373.842 247.747 374.455 cv
247.087 374.875 246.465 375.271 245.789 375.546 cv
245.173 375.796 244.534 375.876 243.857 375.962 cv
243 376.071 242.113 376.183 241.209 376.66 cv
240.984 376.78 240.792 376.977 240.591 377.185 cv
240.511 377.268 240.431 377.35 240.349 377.428 cv
239.753 377.994 239.196 378.608 238.692 379.252 cv
238.206 379.872 237.77 380.516 237.394 381.164 cv
237.21 381.481 236.852 382.451 236.815 382.781 cv
236.596 384.727 236.567 385.746 236.542 386.645 cv
236.502 388.045 236.471 389.15 235.735 392.964 cv
235.689 393.218 236.099 394.661 236.268 395.11 cv
236.761 396.413 237.505 397.32 238.667 398.034 cv
238.854 398.148 239.031 398.28 239.203 398.415 cv
cp
244.695 405.032 mo
243.512 404.105 242.645 403.003 241.807 401.938 cv
240.982 400.888 240.202 399.896 239.15 399.072 cv
238.865 398.847 li
238.709 398.725 238.55 398.604 238.38 398.5 cv
237.118 397.726 236.286 396.706 235.755 395.305 cv
235.749 395.286 235.097 393.377 235.196 392.86 cv
235.924 389.091 235.956 388.005 235.994 386.628 cv
236.019 385.719 236.049 384.688 236.27 382.72 cv
236.319 382.284 236.721 381.231 236.918 380.89 cv
237.307 380.219 237.757 379.555 238.259 378.913 cv
238.781 378.248 239.355 377.615 239.971 377.031 cv
240.048 376.957 240.124 376.881 240.198 376.803 cv
240.42 376.574 240.65 376.336 240.952 376.176 cv
241.945 375.651 242.924 375.527 243.788 375.419 cv
244.429 375.337 245.034 375.262 245.583 375.038 cv
246.213 374.781 246.815 374.399 247.453 373.993 cv
248.456 373.354 249.492 372.695 250.847 372.368 cv
251.172 372.29 251.493 372.305 251.802 372.32 cv
251.901 372.325 252 372.33 252.097 372.332 cv
252.484 372.337 li
253.139 372.346 253.467 372.35 254.295 372.516 cv
254.363 372.528 254.467 372.545 254.591 372.564 cv
255.242 372.665 255.8 372.764 256.035 372.947 cv
256.211 373.09 li
257.093 373.78 258.223 374.34 259.316 374.881 cv
260.435 375.435 261.589 376.006 262.516 376.731 cv
263.344 377.38 263.902 378.084 264.222 378.882 cv
264.384 379.12 264.568 379.403 264.747 379.683 cv
266.292 382.099 267.281 383.725 268.396 385.901 cv
268.426 385.984 li
268.561 386.396 268.766 387.022 268.821 387.426 cv
268.841 387.579 268.846 387.734 268.851 387.89 cv
268.857 388.095 268.864 388.29 268.911 388.468 cv
269.677 391.391 269.017 392.638 268.182 394.218 cv
267.72 395.089 267.197 396.079 266.848 397.543 cv
266.593 398.608 266.173 398.898 265.803 399.156 cv
265.579 399.313 265.383 399.448 265.209 399.774 cv
264.96 400.302 264.699 400.708 264.573 400.905 cv
264.541 400.957 264.516 400.993 264.505 401.013 cv
264.395 401.147 264.324 401.229 264.254 401.313 cv
264.044 401.564 263.828 401.824 263.529 401.993 cv
262.775 402.425 li
261.33 403.257 259.689 404.2 258.066 404.75 cv
257.192 405.045 256.322 405.078 255.399 405.111 cv
254.597 405.141 253.766 405.172 252.889 405.384 cv
252.569 405.405 251.181 405.493 250.267 405.87 cv
248.567 406.569 247.882 406.331 246.226 405.752 cv
246.119 405.715 li
246.027 405.683 245.932 405.656 245.836 405.627 cv
245.566 405.548 245.285 405.466 245.033 405.285 cv
244.918 405.203 244.805 405.118 244.695 405.032 cv
cp
.741176 .376471 .223529 rgb
f
239.936 397.864 mo
240.212 398.084 li
241.259 398.903 242.048 399.905 242.811 400.875 cv
243.652 401.943 244.527 403.053 245.74 403.924 cv
245.902 404.041 246.112 404.103 246.336 404.167 cv
246.433 404.195 246.532 404.226 246.626 404.258 cv
246.725 404.292 li
248.231 404.819 248.739 404.996 250.154 404.414 cv
251.078 404.033 252.375 403.942 252.75 403.924 cv
253.578 403.719 254.384 403.688 255.167 403.661 cv
255.995 403.631 256.778 403.602 257.527 403.349 cv
259 402.848 260.518 401.976 261.857 401.205 cv
262.577 400.794 li
262.776 400.681 262.942 400.482 263.119 400.271 cv
263.185 400.191 263.252 400.11 263.322 400.034 cv
263.321 400.036 263.32 400.035 263.32 400.035 cv
263.318 400.034 263.34 399.997 263.371 399.951 cv
263.483 399.776 263.718 399.412 263.947 398.931 cv
264.175 398.498 264.443 398.313 264.678 398.149 cv
264.986 397.935 265.253 397.75 265.446 396.944 cv
265.791 395.5 266.3 394.537 266.75 393.688 cv
267.51 392.25 268.059 391.211 267.39 388.66 cv
267.332 388.436 267.325 388.216 267.318 388.002 cv
267.314 387.874 267.31 387.744 267.292 387.617 cv
267.246 387.281 267.063 386.716 266.942 386.344 cv
265.915 384.337 264.989 382.815 263.537 380.544 cv
263.371 380.283 263.2 380.018 263.023 379.751 cv
262.731 379.038 262.261 378.448 261.556 377.896 cv
260.727 377.247 259.664 376.722 258.635 376.212 cv
257.583 375.69 256.494 375.152 255.621 374.469 cv
255.458 374.336 li
255.326 374.234 254.618 374.124 254.352 374.083 cv
254.221 374.063 254.115 374.046 254.043 374.031 cv
253.314 373.885 253.059 373.882 252.442 373.876 cv
252.071 373.87 li
251.973 373.869 251.875 373.864 251.777 373.859 cv
251.51 373.846 251.259 373.833 251.028 373.888 cv
249.837 374.176 248.9 374.772 247.991 375.352 cv
247.371 375.746 246.785 376.118 246.147 376.378 cv
245.567 376.614 244.962 376.689 244.325 376.771 cv
243.519 376.872 242.686 376.978 241.837 377.425 cv
241.628 377.537 241.45 377.721 241.263 377.915 cv
241.186 377.994 241.111 378.071 241.032 378.146 cv
240.475 378.674 239.951 379.25 239.473 379.86 cv
239.028 380.428 238.617 381.034 238.253 381.659 cv
238.086 381.949 237.744 382.873 237.709 383.176 cv
237.504 385.006 237.477 385.963 237.453 386.808 cv
237.416 388.126 237.386 389.17 236.693 392.762 cv
236.654 393.001 237.037 394.354 237.194 394.775 cv
237.652 395.989 238.358 396.839 239.446 397.516 cv
239.619 397.622 239.78 397.742 239.936 397.864 cv
cp
245.103 404.13 mo
243.988 403.257 243.17 402.218 242.38 401.214 cv
241.603 400.226 240.869 399.294 239.879 398.519 cv
239.598 398.297 li
239.458 398.187 239.313 398.077 239.159 397.981 cv
237.97 397.252 237.177 396.285 236.681 394.968 cv
236.674 394.95 236.06 393.143 236.155 392.657 cv
236.839 389.109 236.869 388.087 236.905 386.792 cv
236.929 385.937 236.957 384.967 237.165 383.114 cv
237.211 382.702 237.592 381.707 237.779 381.384 cv
238.157 380.736 238.582 380.109 239.042 379.522 cv
239.537 378.891 240.078 378.294 240.654 377.749 cv
240.728 377.68 240.797 377.606 240.869 377.533 cv
241.079 377.317 241.296 377.094 241.581 376.941 cv
242.517 376.445 243.442 376.329 244.257 376.227 cv
244.858 376.15 245.426 376.079 245.941 375.87 cv
246.533 375.63 247.098 375.271 247.697 374.89 cv
248.642 374.286 249.619 373.664 250.899 373.355 cv
251.208 373.28 251.511 373.297 251.804 373.311 cv
251.896 373.315 251.989 373.321 252.08 373.323 cv
252.448 373.327 li
253.063 373.334 253.373 373.337 254.152 373.494 cv
254.216 373.507 254.317 373.522 254.436 373.541 cv
255.046 373.635 255.57 373.729 255.794 373.904 cv
255.958 374.036 li
256.788 374.686 257.851 375.211 258.879 375.72 cv
259.932 376.242 261.021 376.781 261.894 377.465 cv
262.675 378.077 263.204 378.742 263.505 379.497 cv
263.659 379.718 263.83 379.984 264 380.248 cv
265.46 382.535 266.393 384.067 267.436 386.103 cv
267.463 386.174 li
267.59 386.565 267.782 387.158 267.835 387.542 cv
267.856 387.688 267.861 387.837 267.865 387.985 cv
267.872 388.177 267.877 388.358 267.92 388.521 cv
268.644 391.278 268.022 392.454 267.234 393.943 cv
266.799 394.766 266.308 395.695 265.979 397.072 cv
265.737 398.082 265.34 398.356 264.991 398.6 cv
264.78 398.746 264.597 398.872 264.436 399.177 cv
264.198 399.679 263.95 400.063 263.832 400.248 cv
263.802 400.294 263.782 400.325 263.772 400.343 cv
263.667 400.469 263.603 400.546 263.54 400.623 cv
263.339 400.862 263.132 401.109 262.847 401.271 cv
262.13 401.682 li
260.77 402.464 259.227 403.35 257.703 403.867 cv
256.877 404.146 256.056 404.177 255.187 404.208 cv
254.432 404.235 253.653 404.266 252.828 404.465 cv
252.526 404.485 251.227 404.563 250.363 404.921 cv
248.755 405.583 248.108 405.356 246.543 404.81 cv
246.446 404.775 li
246.359 404.745 246.271 404.72 246.182 404.694 cv
245.923 404.618 245.658 404.541 245.419 404.368 cv
245.312 404.291 245.207 404.212 245.103 404.13 cv
cp
.6 .247059 .160784 rgb
f
241.624 396.626 mo
241.85 396.805 li
242.776 397.53 243.467 398.408 244.134 399.258 cv
244.856 400.175 245.595 401.129 246.642 401.869 cv
246.76 401.954 246.927 402.003 247.107 402.056 cv
247.195 402.081 247.282 402.106 247.366 402.137 cv
248.749 402.618 249.139 402.754 250.303 402.275 cv
251.094 401.95 252.181 401.86 252.612 401.836 cv
253.316 401.659 254.026 401.633 254.714 401.607 cv
255.419 401.582 256.085 401.559 256.712 401.346 cv
257.979 400.917 259.291 400.162 260.45 399.496 cv
261.065 399.145 li
261.209 399.062 261.342 398.902 261.484 398.731 cv
261.546 398.657 261.609 398.583 261.674 398.512 cv
261.692 398.47 li
261.791 398.317 261.987 398.013 262.181 397.603 cv
262.403 397.184 262.664 397.003 262.873 396.856 cv
263.131 396.678 263.318 396.548 263.47 395.914 cv
263.774 394.641 264.221 393.794 264.617 393.049 cv
265.258 391.835 265.721 390.958 265.158 388.811 cv
265.101 388.597 265.095 388.386 265.09 388.199 cv
265.086 388.094 265.084 387.986 265.07 387.884 cv
265.033 387.611 264.871 387.112 264.774 386.815 cv
263.887 385.084 263.087 383.771 261.836 381.815 cv
261.692 381.59 261.544 381.36 261.392 381.13 cv
261.134 380.511 260.744 380.022 260.158 379.563 cv
259.453 379.011 258.539 378.559 257.655 378.121 cv
256.733 377.665 255.781 377.193 255.009 376.589 cv
254.861 376.47 li
254.749 376.405 254.188 376.318 253.976 376.286 cv
253.866 376.27 253.773 376.254 253.712 376.243 cv
253.091 376.118 252.874 376.116 252.346 376.109 cv
251.767 376.095 li
251.55 376.084 251.345 376.074 251.168 376.117 cv
250.164 376.359 249.362 376.869 248.586 377.363 cv
248.042 377.71 247.526 378.037 246.958 378.269 cv
246.433 378.481 245.875 378.552 245.336 378.621 cv
244.651 378.707 243.944 378.797 243.236 379.17 cv
243.078 379.255 242.932 379.405 242.778 379.564 cv
242.71 379.634 242.643 379.703 242.574 379.769 cv
242.095 380.223 241.645 380.717 241.238 381.237 cv
240.855 381.726 240.503 382.244 240.193 382.778 cv
240.058 383.011 239.771 383.784 239.744 384.025 cv
239.566 385.605 239.543 386.434 239.523 387.163 cv
239.491 388.316 239.464 389.227 238.86 392.357 cv
238.848 392.564 239.149 393.64 239.288 394.01 cv
239.672 395.028 240.259 395.737 241.171 396.303 cv
241.33 396.4 241.478 396.512 241.624 396.626 cv
cp
245.877 402.325 mo
244.894 401.554 244.179 400.645 243.489 399.767 cv
242.821 398.917 242.191 398.116 241.349 397.456 cv
241.117 397.273 li
240.995 397.178 240.872 397.084 240.738 397.003 cv
239.67 396.342 238.964 395.479 238.517 394.301 cv
238.511 394.283 237.958 392.688 238.053 392.199 cv
238.644 389.137 238.668 388.256 238.701 387.141 cv
238.721 386.395 238.746 385.548 238.926 383.934 cv
238.971 383.55 239.31 382.664 239.482 382.366 cv
239.812 381.8 240.184 381.249 240.59 380.73 cv
241.023 380.178 241.5 379.653 242.006 379.172 cv
242.068 379.114 242.128 379.052 242.187 378.991 cv
242.37 378.802 242.578 378.589 242.851 378.443 cv
243.692 377.999 244.51 377.896 245.232 377.805 cv
245.743 377.741 246.224 377.679 246.649 377.507 cv
247.148 377.304 247.632 376.996 248.144 376.67 cv
248.939 376.165 249.838 375.593 250.975 375.318 cv
251.267 375.247 251.554 375.262 251.809 375.273 cv
252.357 375.288 li
252.903 375.294 253.177 375.298 253.873 375.436 cv
254.101 375.474 li
254.781 375.579 255.163 375.662 255.373 375.826 cv
255.516 375.941 li
256.221 376.493 257.134 376.946 258.02 377.384 cv
258.941 377.84 259.893 378.312 260.665 378.915 cv
261.368 379.467 261.843 380.066 262.117 380.751 cv
262.233 380.912 262.383 381.144 262.529 381.375 cv
263.765 383.306 264.608 384.689 265.521 386.467 cv
265.674 386.926 265.836 387.425 265.884 387.771 cv
265.904 387.905 265.908 388.04 265.912 388.176 cv
265.916 388.332 265.92 388.479 265.954 388.602 cv
266.598 391.059 266.016 392.159 265.343 393.434 cv
264.971 394.135 264.55 394.932 264.269 396.104 cv
264.044 397.044 263.655 397.315 263.341 397.533 cv
263.165 397.656 263.036 397.745 262.917 397.972 cv
262.708 398.41 262.49 398.75 262.384 398.914 cv
262.283 399.066 li
262.224 399.129 262.171 399.194 262.116 399.26 cv
261.942 399.467 261.745 399.703 261.47 399.859 cv
260.859 400.209 li
259.668 400.895 258.319 401.67 256.976 402.124 cv
256.236 402.376 255.511 402.401 254.743 402.43 cv
254.097 402.454 253.428 402.477 252.73 402.646 cv
252.353 402.674 251.309 402.75 250.616 403.035 cv
249.163 403.634 248.543 403.418 247.185 402.944 cv
247.024 402.888 246.95 402.866 246.875 402.845 cv
246.65 402.779 246.393 402.703 246.161 402.537 cv
246.066 402.467 245.969 402.396 245.877 402.325 cv
cp
f
242.733 395.865 mo
242.932 396.023 li
243.75 396.663 244.36 397.44 244.951 398.191 cv
245.594 399.008 246.254 399.852 247.188 400.521 cv
247.298 400.601 247.454 400.646 247.617 400.695 cv
247.693 400.717 247.77 400.738 247.845 400.766 cv
247.926 400.793 li
249.087 401.198 249.438 401.319 250.49 400.887 cv
251.185 400.601 252.143 400.522 252.522 400.502 cv
253.153 400.343 253.782 400.32 254.389 400.299 cv
255.018 400.276 255.613 400.255 256.176 400.064 cv
257.306 399.681 258.473 399.011 259.503 398.418 cv
260.05 398.104 li
260.186 398.027 260.308 397.881 260.438 397.725 cv
260.492 397.66 260.547 397.595 260.604 397.532 cv
260.624 397.492 li
260.709 397.357 260.889 397.081 261.063 396.712 cv
261.252 396.354 261.479 396.195 261.661 396.07 cv
261.89 395.911 262.073 395.785 262.211 395.202 cv
262.48 394.078 262.875 393.331 263.224 392.671 cv
263.8 391.582 264.216 390.796 263.709 388.869 cv
263.661 388.685 263.656 388.508 263.651 388.336 cv
263.647 388.241 263.646 388.146 263.632 388.053 cv
263.599 387.807 263.456 387.364 263.37 387.101 cv
262.58 385.555 261.839 384.34 260.754 382.646 cv
260.625 382.442 260.495 382.239 260.359 382.034 cv
260.132 381.485 259.78 381.045 259.252 380.632 cv
258.622 380.138 257.807 379.734 257.021 379.345 cv
256.206 378.941 255.362 378.523 254.681 377.99 cv
254.549 377.885 li
254.446 377.819 253.931 377.74 253.737 377.71 cv
253.641 377.695 253.559 377.684 253.507 377.672 cv
252.95 377.562 252.755 377.56 252.284 377.553 cv
251.775 377.541 li
251.576 377.53 251.389 377.521 251.224 377.562 cv
250.324 377.778 249.61 378.234 248.916 378.675 cv
248.436 378.98 247.98 379.271 247.48 379.474 cv
247.021 379.66 246.55 379.72 246.053 379.783 cv
245.44 379.861 244.806 379.94 244.169 380.278 cv
244.021 380.356 243.887 380.494 243.747 380.64 cv
243.688 380.699 243.63 380.759 243.571 380.815 cv
243.143 381.223 242.743 381.663 242.38 382.126 cv
242.033 382.569 241.718 383.032 241.448 383.499 cv
241.326 383.71 241.067 384.409 241.042 384.63 cv
240.884 386.034 240.863 386.771 240.845 387.42 cv
240.816 388.44 240.792 389.246 240.258 392.021 cv
240.24 392.216 240.526 393.216 240.639 393.518 cv
240.986 394.433 241.511 395.07 242.333 395.581 cv
242.473 395.668 242.606 395.765 242.733 395.865 cv
cp
246.574 400.839 mo
245.705 400.159 245.073 399.354 244.46 398.576 cv
243.867 397.821 243.306 397.107 242.553 396.518 cv
242.348 396.356 li
242.239 396.271 242.126 396.185 242.007 396.111 cv
241.06 395.525 240.45 394.773 240.056 393.737 cv
240.051 393.723 239.565 392.317 239.646 391.903 cv
240.171 389.179 240.194 388.395 240.222 387.402 cv
240.241 386.74 240.262 385.99 240.421 384.56 cv
240.461 384.222 240.758 383.447 240.909 383.188 cv
241.194 382.694 241.524 382.208 241.889 381.741 cv
242.271 381.255 242.692 380.791 243.142 380.364 cv
243.195 380.314 243.247 380.261 243.299 380.206 cv
243.467 380.032 243.642 379.853 243.877 379.728 cv
244.616 379.336 245.337 379.244 245.974 379.164 cv
246.431 379.106 246.862 379.053 247.247 378.896 cv
247.693 378.716 248.125 378.439 248.583 378.149 cv
249.283 377.703 250.078 377.198 251.079 376.956 cv
251.332 376.896 251.572 376.907 251.806 376.919 cv
252.292 376.931 li
252.773 376.938 253.015 376.939 253.628 377.062 cv
253.673 377.069 253.746 377.082 253.833 377.095 cv
254.426 377.187 254.761 377.259 254.937 377.396 cv
255.065 377.499 li
255.696 377.993 256.509 378.397 257.297 378.788 cv
258.113 379.19 258.956 379.608 259.637 380.142 cv
260.252 380.624 260.668 381.149 260.909 381.747 cv
261.016 381.9 261.15 382.105 261.279 382.31 cv
262.375 384.021 263.122 385.247 263.932 386.827 cv
263.962 386.907 li
264.061 387.21 264.209 387.666 264.25 387.969 cv
264.265 388.083 264.269 388.2 264.273 388.317 cv
264.277 388.46 264.282 388.595 264.313 388.71 cv
264.88 390.873 264.368 391.841 263.774 392.962 cv
263.444 393.589 263.068 394.301 262.817 395.347 cv
262.623 396.161 262.3 396.385 262.016 396.583 cv
261.857 396.691 261.734 396.778 261.619 396.991 cv
261.434 397.384 261.241 397.684 261.147 397.827 cv
261.064 397.952 li
261.014 398.007 260.965 398.066 260.917 398.125 cv
260.756 398.315 260.592 398.513 260.358 398.646 cv
259.814 398.957 li
258.758 399.563 257.564 400.251 256.377 400.653 cv
255.727 400.873 255.087 400.896 254.411 400.922 cv
253.834 400.941 253.238 400.964 252.613 401.114 cv
252.285 401.139 251.352 401.207 250.727 401.463 cv
249.458 401.986 248.914 401.797 247.72 401.382 cv
247.64 401.354 li
247.575 401.33 247.508 401.311 247.441 401.292 cv
247.245 401.234 247.022 401.168 246.824 401.026 cv
246.738 400.966 246.655 400.902 246.574 400.839 cv
cp
.741176 .376471 .223529 rgb
f
244.439 394.645 mo
244.603 394.773 li
245.272 395.297 245.77 395.932 246.252 396.545 cv
246.774 397.207 247.302 397.891 248.064 398.434 cv
248.149 398.493 248.272 398.53 248.401 398.567 cv
248.465 398.587 248.528 398.605 248.59 398.628 cv
248.66 398.651 li
249.593 398.976 249.875 399.074 250.718 398.726 cv
251.284 398.493 252.072 398.429 252.383 398.411 cv
252.893 398.283 253.405 398.265 253.901 398.246 cv
254.411 398.228 254.893 398.209 255.348 398.055 cv
256.261 397.747 257.208 397.202 258.042 396.722 cv
258.495 396.465 li
258.599 396.404 258.696 396.288 258.798 396.166 cv
258.837 396.119 258.876 396.072 258.917 396.027 cv
258.927 396.011 258.94 395.991 258.956 395.967 cv
259.027 395.854 259.167 395.637 259.305 395.347 cv
259.463 395.046 259.651 394.916 259.802 394.812 cv
259.99 394.681 260.126 394.586 260.237 394.124 cv
260.457 393.205 260.779 392.596 261.064 392.058 cv
261.528 391.178 261.864 390.543 261.456 388.987 cv
261.417 388.834 261.411 388.683 261.408 388.549 cv
261.405 388.472 261.403 388.396 261.392 388.318 cv
261.363 388.11 261.237 387.729 261.17 387.523 cv
260.539 386.297 259.937 385.309 259.055 383.933 cv
258.734 383.433 li
258.548 382.988 258.265 382.635 257.839 382.302 cv
257.33 381.901 256.668 381.573 256.03 381.257 cv
255.364 380.928 254.675 380.587 254.12 380.151 cv
254.013 380.067 li
253.933 380.021 253.528 379.957 253.376 379.935 cv
253.293 379.921 253.224 379.91 253.179 379.901 cv
252.726 379.812 252.567 379.81 252.18 379.805 cv
251.772 379.794 li
251.615 379.786 251.465 379.778 251.337 379.81 cv
250.611 379.985 250.032 380.354 249.469 380.712 cv
249.077 380.963 248.704 381.199 248.294 381.365 cv
247.917 381.519 247.514 381.569 247.124 381.618 cv
246.628 381.681 246.116 381.746 245.603 382.017 cv
245.491 382.077 245.385 382.187 245.274 382.3 cv
245.225 382.351 245.175 382.402 245.124 382.451 cv
244.776 382.782 244.452 383.14 244.159 383.513 cv
243.879 383.869 243.625 384.244 243.403 384.627 cv
243.306 384.797 243.096 385.358 243.077 385.533 cv
242.949 386.675 242.932 387.272 242.917 387.799 cv
242.893 388.632 242.875 389.29 242.437 391.55 cv
242.427 391.705 242.658 392.509 242.747 392.75 cv
243.027 393.489 243.453 394.01 244.111 394.411 cv
244.225 394.482 244.333 394.562 244.439 394.645 cv
cp
247.528 398.747 mo
246.818 398.191 246.301 397.535 245.802 396.899 cv
245.32 396.286 244.864 395.707 244.254 395.229 cv
244.085 395.096 li
243.999 395.027 243.908 394.959 243.812 394.899 cv
243.036 394.42 242.534 393.803 242.21 392.951 cv
242.207 392.938 241.809 391.79 241.875 391.443 cv
242.302 389.227 242.321 388.59 242.344 387.782 cv
242.359 387.244 242.376 386.635 242.507 385.468 cv
242.54 385.192 242.783 384.556 242.907 384.341 cv
243.143 383.933 243.412 383.535 243.707 383.159 cv
244.016 382.764 244.36 382.385 244.729 382.034 cv
244.775 381.991 244.82 381.945 244.863 381.901 cv
244.994 381.767 245.142 381.613 245.335 381.511 cv
245.941 381.189 246.531 381.116 247.051 381.05 cv
247.421 381.004 247.77 380.959 248.08 380.834 cv
248.44 380.688 248.791 380.465 249.162 380.228 cv
249.734 379.863 250.382 379.451 251.204 379.253 cv
251.411 379.202 251.619 379.213 251.8 379.222 cv
252.188 379.232 li
252.586 379.236 252.787 379.239 253.291 379.339 cv
253.332 379.347 253.391 379.356 253.464 379.368 cv
253.95 379.443 254.223 379.502 254.371 379.618 cv
254.472 379.7 li
254.982 380.1 255.643 380.428 256.283 380.743 cv
256.949 381.072 257.636 381.413 258.194 381.85 cv
258.701 382.246 259.042 382.679 259.241 383.171 cv
259.538 383.624 li
260.429 385.016 261.039 386.015 261.697 387.302 cv
261.817 387.651 261.926 388.001 261.959 388.241 cv
261.973 388.337 261.976 388.435 261.98 388.531 cv
261.984 388.645 261.987 388.752 262.011 388.843 cv
262.476 390.612 262.056 391.406 261.57 392.325 cv
261.3 392.833 260.997 393.408 260.793 394.257 cv
260.632 394.933 260.353 395.126 260.128 395.281 cv
259.999 395.372 259.905 395.437 259.817 395.604 cv
259.669 395.913 259.513 396.158 259.438 396.275 cv
259.36 396.393 li
259.318 396.438 259.277 396.485 259.237 396.534 cv
259.114 396.683 258.972 396.852 258.777 396.962 cv
258.328 397.22 li
257.47 397.713 256.5 398.271 255.531 398.599 cv
254.998 398.779 254.475 398.797 253.92 398.818 cv
253.454 398.835 252.972 398.854 252.466 398.976 cv
252.194 398.996 251.435 399.051 250.938 399.256 cv
249.893 399.687 249.447 399.532 248.471 399.193 cv
248.401 399.168 li
248.348 399.15 248.294 399.134 248.24 399.117 cv
248.079 399.07 247.895 399.017 247.73 398.898 cv
247.661 398.849 247.594 398.799 247.528 398.747 cv
cp
f
245.027 394.215 mo
245.188 394.342 li
245.8 394.821 246.259 395.404 246.703 395.968 cv
247.183 396.578 247.683 397.198 248.367 397.702 cv
248.444 397.758 248.556 397.791 248.674 397.825 cv
248.735 397.842 248.793 397.859 248.851 397.881 cv
249.77 398.201 250.03 398.292 250.806 397.973 cv
251.356 397.746 252.116 397.692 252.336 397.682 cv
252.803 397.563 253.275 397.546 253.73 397.53 cv
254.198 397.513 254.642 397.498 255.058 397.356 cv
255.898 397.07 256.768 396.57 257.536 396.129 cv
257.947 395.894 li
258.046 395.839 258.137 395.73 258.232 395.615 cv
258.271 395.567 258.312 395.519 258.354 395.473 cv
258.367 395.445 li
258.431 395.346 258.564 395.14 258.693 394.868 cv
258.838 394.591 259.011 394.472 259.148 394.376 cv
259.324 394.256 259.449 394.169 259.549 393.744 cv
259.751 392.899 260.048 392.339 260.309 391.845 cv
260.735 391.037 261.043 390.455 260.668 389.025 cv
260.631 388.884 260.628 388.744 260.624 388.621 cv
260.622 388.552 260.621 388.481 260.612 388.412 cv
260.587 388.232 260.486 387.92 260.418 387.712 cv
259.831 386.561 259.297 385.688 258.464 384.382 cv
258.369 384.231 258.271 384.079 258.169 383.928 cv
257.999 383.515 257.737 383.188 257.345 382.881 cv
256.875 382.514 256.268 382.213 255.68 381.922 cv
255.069 381.618 254.437 381.306 253.925 380.905 cv
253.834 380.831 li
253.758 380.788 253.382 380.729 253.242 380.708 cv
253.168 380.695 253.107 380.687 253.067 380.678 cv
252.657 380.595 252.512 380.594 252.165 380.59 cv
251.776 380.581 li
251.63 380.573 251.492 380.566 251.373 380.595 cv
250.707 380.757 250.174 381.096 249.66 381.423 cv
249.297 381.654 248.957 381.871 248.579 382.024 cv
248.233 382.164 247.864 382.21 247.505 382.255 cv
247.05 382.312 246.58 382.372 246.107 382.622 cv
246.001 382.679 245.904 382.779 245.8 382.887 cv
245.756 382.934 245.711 382.978 245.667 383.021 cv
245.349 383.323 245.05 383.651 244.78 383.997 cv
244.527 384.319 244.293 384.664 244.084 385.021 cv
243.994 385.176 243.802 385.691 243.786 385.853 cv
243.667 386.901 243.652 387.45 243.638 387.935 cv
243.616 388.699 243.6 389.302 243.197 391.38 cv
243.189 391.525 243.401 392.262 243.484 392.482 cv
243.736 393.159 244.128 393.637 244.737 394.009 cv
244.838 394.07 244.934 394.142 245.027 394.215 cv
cp
247.881 397.99 mo
247.228 397.479 246.752 396.876 246.292 396.292 cv
245.848 395.729 245.428 395.193 244.868 394.755 cv
244.705 394.626 li
244.628 394.565 244.548 394.506 244.463 394.454 cv
243.749 394.013 243.286 393.443 242.994 392.666 cv
242.99 392.655 242.624 391.596 242.686 391.28 cv
243.077 389.245 243.094 388.66 243.115 387.92 cv
243.129 387.425 243.145 386.864 243.265 385.794 cv
243.293 385.541 243.517 384.954 243.632 384.758 cv
243.853 384.38 244.101 384.016 244.369 383.675 cv
244.655 383.31 244.97 382.962 245.306 382.642 cv
245.346 382.604 245.384 382.563 245.424 382.524 cv
245.545 382.398 245.683 382.256 245.862 382.159 cv
246.418 381.864 246.961 381.797 247.441 381.736 cv
247.78 381.693 248.1 381.653 248.383 381.538 cv
248.715 381.405 249.038 381.199 249.377 380.981 cv
249.904 380.647 250.499 380.268 251.25 380.085 cv
251.444 380.04 251.634 380.049 251.801 380.059 cv
252.169 380.067 li
252.531 380.07 252.711 380.072 253.168 380.165 cv
253.322 380.19 li
253.77 380.26 254.022 380.314 254.16 380.423 cv
254.249 380.493 li
254.717 380.86 255.325 381.161 255.912 381.451 cv
256.524 381.756 257.156 382.068 257.667 382.469 cv
258.134 382.835 258.449 383.232 258.63 383.686 cv
258.708 383.792 258.808 383.947 258.906 384.102 cv
259.747 385.419 260.287 386.303 260.889 387.479 cv
260.917 387.552 li
260.993 387.789 261.099 388.116 261.129 388.342 cv
261.141 388.429 261.144 388.518 261.147 388.607 cv
261.15 388.71 261.153 388.809 261.175 388.891 cv
261.602 390.52 261.217 391.246 260.771 392.089 cv
260.526 392.556 260.245 393.085 260.058 393.865 cv
259.911 394.484 259.653 394.663 259.447 394.806 cv
259.328 394.889 259.241 394.948 259.161 395.102 cv
259.022 395.396 258.876 395.619 258.807 395.728 cv
258.743 395.823 li
258.705 395.864 258.669 395.907 258.634 395.949 cv
258.519 396.089 258.387 396.247 258.205 396.351 cv
257.796 396.584 li
257.007 397.036 256.115 397.55 255.226 397.853 cv
254.737 398.018 254.258 398.035 253.75 398.054 cv
253.32 398.068 252.875 398.085 252.411 398.198 cv
252.22 398.212 251.489 398.257 251.005 398.455 cv
250.044 398.852 249.635 398.708 248.737 398.395 cv
248.629 398.357 248.579 398.341 248.529 398.327 cv
248.38 398.284 248.211 398.235 248.059 398.125 cv
248 398.082 247.939 398.036 247.881 397.99 cv
cp
.6 .247059 .160784 rgb
f
246.183 393.396 mo
246.316 393.501 li
246.826 393.9 247.208 394.386 247.577 394.854 cv
247.974 395.36 248.387 395.88 248.956 396.292 cv
249.018 396.337 249.109 396.363 249.206 396.391 cv
249.255 396.406 249.305 396.421 249.353 396.438 cv
250.112 396.702 250.326 396.778 250.966 396.515 cv
251.423 396.326 252.058 396.28 252.243 396.272 cv
252.629 396.175 253.021 396.16 253.4 396.146 cv
253.789 396.132 254.155 396.118 254.499 396.002 cv
255.195 395.768 255.916 395.352 256.552 394.986 cv
256.896 394.789 li
256.975 394.745 257.048 394.656 257.125 394.563 cv
257.156 394.527 257.185 394.492 257.216 394.457 cv
257.219 394.453 257.227 394.438 257.241 394.417 cv
257.294 394.334 257.403 394.168 257.508 393.944 cv
257.631 393.711 257.776 393.61 257.893 393.528 cv
258.034 393.432 258.135 393.359 258.219 393.015 cv
258.386 392.311 258.632 391.845 258.849 391.434 cv
259.202 390.767 259.455 390.285 259.148 389.103 cv
259.119 388.984 259.115 388.869 259.111 388.768 cv
259.111 388.709 259.108 388.649 259.101 388.593 cv
259.08 388.439 258.989 388.162 258.935 387.996 cv
258.408 386.97 257.912 386.177 257.318 385.251 cv
257.239 385.126 257.159 384.999 257.075 384.873 cv
256.931 384.529 256.715 384.26 256.391 384.007 cv
256.003 383.702 255.498 383.451 255.01 383.21 cv
254.5 382.957 253.974 382.696 253.547 382.362 cv
253.476 382.305 li
253.416 382.272 253.11 382.226 252.996 382.208 cv
252.933 382.198 252.879 382.188 252.847 382.182 cv
252.503 382.112 252.383 382.112 252.092 382.109 cv
251.773 382.102 li
251.655 382.094 251.543 382.089 251.449 382.112 cv
250.898 382.245 250.456 382.525 250.03 382.797 cv
249.728 382.989 249.443 383.171 249.128 383.299 cv
248.837 383.416 248.529 383.455 248.231 383.493 cv
247.854 383.54 247.464 383.59 247.077 383.795 cv
246.994 383.839 246.916 383.92 246.832 384.006 cv
246.792 384.047 246.753 384.085 246.714 384.124 cv
246.453 384.371 246.206 384.644 245.98 384.932 cv
245.768 385.202 245.574 385.488 245.405 385.78 cv
245.33 385.909 245.172 386.331 245.157 386.464 cv
245.06 387.336 245.046 387.791 245.036 388.192 cv
245.018 388.829 245.003 389.331 244.669 391.058 cv
244.665 391.169 244.832 391.768 244.906 391.964 cv
245.115 392.523 245.44 392.919 245.939 393.222 cv
246.025 393.275 246.105 393.334 246.183 393.396 cv
cp
248.526 396.562 mo
247.981 396.135 247.586 395.634 247.205 395.146 cv
246.835 394.68 246.49 394.238 246.026 393.875 cv
245.891 393.769 li
245.828 393.719 245.76 393.669 245.69 393.626 cv
245.097 393.256 244.707 392.782 244.462 392.131 cv
244.458 392.122 244.152 391.241 244.204 390.969 cv
244.531 389.279 244.544 388.794 244.562 388.179 cv
244.574 387.768 244.586 387.302 244.687 386.411 cv
244.71 386.199 244.899 385.707 244.996 385.543 cv
245.174 385.231 245.381 384.928 245.607 384.64 cv
245.847 384.333 246.111 384.044 246.389 383.779 cv
246.423 383.746 246.458 383.711 246.492 383.677 cv
246.592 383.573 246.706 383.456 246.854 383.377 cv
247.32 383.131 247.772 383.073 248.171 383.023 cv
248.453 382.988 248.717 382.955 248.95 382.86 cv
249.224 382.749 249.492 382.579 249.776 382.398 cv
250.212 382.119 250.709 381.804 251.337 381.652 cv
251.498 381.612 251.658 381.62 251.797 381.627 cv
252.098 381.636 li
252.402 381.638 252.553 381.641 252.939 381.718 cv
253.069 381.74 li
253.451 381.799 253.654 381.843 253.77 381.934 cv
253.839 381.99 li
254.228 382.295 254.732 382.543 255.22 382.785 cv
255.729 383.037 256.256 383.299 256.683 383.634 cv
257.075 383.94 257.339 384.273 257.492 384.654 cv
257.554 384.739 257.636 384.868 257.718 384.994 cv
258.317 385.933 258.819 386.736 259.367 387.805 cv
259.448 388.042 259.542 388.333 259.569 388.527 cv
259.579 388.602 259.583 388.678 259.583 388.753 cv
259.587 388.838 259.589 388.918 259.607 388.984 cv
259.96 390.343 259.639 390.95 259.268 391.653 cv
259.065 392.041 258.833 392.479 258.679 393.124 cv
258.553 393.646 258.337 393.797 258.164 393.918 cv
258.066 393.985 257.998 394.034 257.931 394.157 cv
257.819 394.396 257.699 394.581 257.639 394.675 cv
257.58 394.76 li
257.549 394.795 257.519 394.831 257.49 394.867 cv
257.392 394.981 257.283 395.115 257.128 395.201 cv
256.788 395.396 li
256.132 395.772 255.389 396.2 254.65 396.45 cv
254.241 396.589 253.84 396.604 253.417 396.619 cv
253.061 396.633 252.693 396.646 252.31 396.74 cv
251.942 396.762 251.456 396.824 251.146 396.951 cv
250.339 397.284 249.996 397.164 249.246 396.9 cv
249.157 396.87 249.117 396.858 249.074 396.846 cv
248.95 396.811 248.808 396.769 248.679 396.677 cv
248.627 396.639 248.576 396.601 248.526 396.562 cv
cp
f
247.337 392.577 mo
247.443 392.659 li
247.852 392.979 248.157 393.367 248.452 393.742 cv
248.768 394.143 249.091 394.556 249.545 394.883 cv
249.592 394.916 249.662 394.937 249.737 394.957 cv
249.777 394.97 249.817 394.981 249.856 394.995 cv
250.468 395.21 250.623 395.264 251.125 395.057 cv
251.504 394.899 252.044 394.868 252.149 394.863 cv
252.454 394.784 252.767 394.773 253.072 394.762 cv
253.377 394.751 253.668 394.741 253.938 394.648 cv
254.477 394.465 255.039 394.145 255.533 393.86 cv
255.845 393.684 li
255.905 393.65 255.961 393.582 256.022 393.509 cv
256.049 393.478 256.077 393.444 256.105 393.413 cv
256.152 393.333 256.237 393.199 256.324 393.021 cv
256.424 392.828 256.542 392.747 256.637 392.682 cv
256.75 392.604 256.824 392.552 256.888 392.284 cv
257.022 391.722 257.219 391.349 257.393 391.019 cv
257.672 390.492 257.873 390.112 257.627 389.181 cv
257.603 389.083 257.599 388.987 257.597 388.904 cv
257.595 388.859 257.594 388.815 257.588 388.771 cv
257.573 388.649 257.5 388.428 257.457 388.296 cv
257.039 387.488 256.645 386.856 256.173 386.119 cv
255.979 385.817 li
255.865 385.544 255.695 385.331 255.44 385.132 cv
255.132 384.891 254.73 384.692 254.341 384.499 cv
253.934 384.298 253.514 384.09 253.172 383.821 cv
253.118 383.777 li
253.073 383.755 252.839 383.72 252.75 383.706 cv
252.699 383.698 252.654 383.691 252.625 383.685 cv
252.358 383.631 252.264 383.63 252.036 383.627 cv
251.776 383.621 li
251.683 383.617 251.594 383.61 251.522 383.629 cv
251.086 383.733 250.737 383.956 250.4 384.172 cv
250.159 384.326 249.931 384.471 249.679 384.574 cv
249.445 384.669 249.198 384.699 248.958 384.729 cv
248.66 384.766 248.351 384.805 248.046 384.967 cv
247.982 385.001 247.921 385.065 247.855 385.134 cv
247.825 385.164 247.795 385.196 247.763 385.226 cv
247.554 385.423 247.359 385.639 247.18 385.867 cv
247.01 386.084 246.856 386.309 246.723 386.541 cv
246.667 386.638 246.541 386.977 246.53 387.077 cv
246.451 387.769 246.44 388.133 246.431 388.452 cv
246.415 388.959 246.402 389.359 246.14 390.736 cv
246.138 390.822 246.268 391.287 246.328 391.447 cv
246.493 391.888 246.748 392.201 247.14 392.436 cv
247.209 392.479 247.274 392.527 247.337 392.577 cv
cp
249.174 395.134 mo
248.74 394.794 248.424 394.392 248.119 394.005 cv
247.827 393.632 247.55 393.282 247.185 392.996 cv
247.077 392.91 li
247.026 392.87 246.976 392.832 246.919 392.798 cv
246.441 392.507 246.127 392.12 245.931 391.594 cv
245.927 391.586 245.681 390.882 245.723 390.656 cv
245.98 389.313 245.992 388.927 246.007 388.438 cv
246.016 388.111 246.029 387.739 246.108 387.029 cv
246.128 386.854 246.278 386.464 246.356 386.328 cv
246.5 386.08 246.664 385.837 246.846 385.604 cv
247.038 385.359 247.249 385.129 247.471 384.919 cv
247.55 384.839 li
247.632 384.755 247.723 384.658 247.846 384.594 cv
248.221 384.394 248.585 384.348 248.906 384.309 cv
249.128 384.28 249.336 384.255 249.518 384.182 cv
249.736 384.093 249.948 383.958 250.171 383.815 cv
250.522 383.592 250.918 383.338 251.422 383.217 cv
251.556 383.186 251.685 383.191 251.798 383.198 cv
252.041 383.203 li
252.281 383.206 252.403 383.208 252.709 383.27 cv
252.816 383.288 li
253.121 383.334 253.285 383.37 253.381 383.446 cv
253.433 383.488 li
253.741 383.729 254.141 383.927 254.529 384.119 cv
254.937 384.322 255.358 384.53 255.701 384.799 cv
256.016 385.046 256.228 385.315 256.352 385.623 cv
256.532 385.892 li
257.008 386.638 257.409 387.278 257.845 388.13 cv
257.91 388.319 257.986 388.554 258.008 388.714 cv
258.017 388.772 258.019 388.831 258.02 388.892 cv
258.023 388.958 258.024 389.021 258.038 389.074 cv
258.324 390.164 258.067 390.652 257.768 391.218 cv
257.605 391.524 257.421 391.872 257.3 392.384 cv
257.207 392.775 257.053 392.908 256.88 393.029 cv
256.802 393.083 256.75 393.118 256.702 393.212 cv
256.609 393.405 256.513 393.555 256.464 393.628 cv
256.418 393.696 li
256.347 393.78 li
256.269 393.875 256.179 393.982 256.052 394.053 cv
255.745 394.229 li
255.233 394.521 254.653 394.854 254.076 395.05 cv
253.747 395.161 253.425 395.173 253.086 395.186 cv
252.805 395.196 252.513 395.206 252.208 395.28 cv
252.113 395.288 251.609 395.315 251.285 395.448 cv
250.634 395.717 250.359 395.62 249.756 395.409 cv
249.685 395.383 249.651 395.374 249.62 395.365 cv
249.518 395.335 249.403 395.303 249.297 395.228 cv
249.256 395.197 249.214 395.166 249.174 395.134 cv
cp
f
248.57 391.818 mo
248.879 392.061 249.109 392.351 249.33 392.631 cv
249.556 392.918 249.769 393.188 250.062 393.417 cv
250.135 393.474 li
250.167 393.495 250.216 393.509 250.269 393.525 cv
250.3 393.534 250.331 393.543 250.36 393.554 cv
250.804 393.709 250.917 393.749 251.281 393.599 cv
251.515 393.504 251.831 393.466 252.052 393.452 cv
252.281 393.394 252.515 393.386 252.744 393.377 cv
252.968 393.369 253.182 393.361 253.38 393.294 cv
253.79 393.156 254.216 392.911 254.592 392.695 cv
254.795 392.579 li
254.832 392.558 254.873 392.509 254.916 392.459 cv
254.937 392.434 254.958 392.408 254.98 392.383 cv
255.008 392.334 255.072 392.233 255.137 392.098 cv
255.216 391.948 255.312 391.881 255.382 391.832 cv
255.462 391.777 255.511 391.743 255.555 391.556 cv
255.657 391.134 255.805 390.854 255.935 390.607 cv
256.147 390.207 256.287 389.941 256.108 389.26 cv
256.087 389.182 256.085 389.11 256.083 389.046 cv
256.083 389.013 256.082 388.98 256.079 388.948 cv
256.066 388.858 256.005 388.678 255.98 388.601 cv
255.69 388.04 255.414 387.597 255.028 386.987 cv
254.884 386.763 li
254.798 386.559 254.675 386.405 254.488 386.259 cv
254.259 386.08 253.961 385.933 253.672 385.789 cv
253.368 385.638 253.051 385.481 252.794 385.28 cv
252.759 385.251 li
252.729 385.239 252.559 385.212 252.497 385.204 cv
252.406 385.188 li
252.205 385.149 252.137 385.148 251.957 385.146 cv
251.778 385.141 li
251.708 385.138 251.647 385.134 251.596 385.147 cv
251.277 385.225 251.02 385.389 250.77 385.547 cv
250.589 385.662 250.419 385.771 250.227 385.847 cv
250.05 385.919 249.864 385.943 249.685 385.967 cv
249.464 385.993 249.238 386.022 249.016 386.141 cv
248.971 386.165 248.926 386.21 248.879 386.259 cv
248.811 386.328 li
248.655 386.476 248.509 386.636 248.379 386.802 cv
248.252 386.964 248.139 387.131 248.041 387.3 cv
247.999 387.374 247.909 387.621 247.9 387.688 cv
247.84 388.21 247.833 388.48 247.828 388.72 cv
247.817 389.1 247.811 389.399 247.612 390.417 cv
247.611 390.478 247.708 390.817 247.75 390.927 cv
247.872 391.248 248.057 391.474 248.343 391.651 cv
248.4 391.688 248.455 391.728 248.507 391.769 cv
248.455 391.965 li
248.57 391.818 li
cp
249.832 393.712 mo
249.503 393.455 249.266 393.154 249.038 392.863 cv
248.819 392.588 248.614 392.327 248.342 392.115 cv
248.277 392.063 li
248.235 392.029 248.193 391.997 248.146 391.97 cv
247.787 391.741 247.548 391.456 247.4 391.059 cv
247.398 391.053 247.209 390.521 247.245 390.345 cv
247.438 389.358 247.444 389.073 247.454 388.711 cv
247.459 388.465 247.466 388.184 247.529 387.645 cv
247.546 387.509 247.659 387.213 247.718 387.112 cv
247.823 386.93 247.947 386.747 248.084 386.571 cv
248.226 386.391 248.384 386.218 248.552 386.057 cv
248.611 385.998 li
248.673 385.935 248.744 385.861 248.839 385.811 cv
249.125 385.659 249.396 385.625 249.638 385.596 cv
249.8 385.575 249.955 385.556 250.087 385.502 cv
250.248 385.438 250.404 385.337 250.57 385.232 cv
250.833 385.064 251.128 384.876 251.508 384.783 cv
251.612 384.759 251.71 384.764 251.797 384.768 cv
251.962 384.772 li
252.155 384.774 252.242 384.776 252.477 384.821 cv
252.553 384.833 li
252.791 384.87 252.937 384.891 252.995 384.961 cv
253.255 385.165 253.539 385.306 253.839 385.455 cv
254.427 385.748 255.019 386.104 255.213 386.591 cv
255.343 386.788 li
255.736 387.405 256.015 387.855 256.323 388.456 cv
256.384 388.633 256.434 388.788 256.449 388.899 cv
256.456 388.945 256.457 388.99 256.457 389.037 cv
256.458 389.084 256.459 389.129 256.469 389.164 cv
256.685 389.987 256.491 390.355 256.265 390.782 cv
256.139 391.021 256.008 391.268 255.92 391.644 cv
255.846 391.945 255.731 392.047 255.594 392.141 cv
255.538 392.179 255.504 392.203 255.471 392.266 cv
255.402 392.414 255.326 392.53 255.292 392.583 cv
255.256 392.635 li
255.202 392.698 li
255.143 392.769 255.076 392.85 254.978 392.904 cv
254.778 393.019 li
254.387 393.243 253.945 393.498 253.5 393.649 cv
253.25 393.733 252.999 393.742 252.755 393.75 cv
252.546 393.758 252.331 393.767 252.108 393.82 cv
251.801 393.843 251.569 393.886 251.424 393.945 cv
250.927 394.148 250.705 394.07 250.258 393.913 cv
250.165 393.884 li
250.087 393.861 250 393.835 249.916 393.775 cv
249.832 393.712 li
cp
.741176 .376471 .223529 rgb
f
250.226 390.512 mo
250.269 390.547 li
250.425 390.669 250.54 390.813 250.65 390.954 cv
250.756 391.09 250.858 391.217 250.993 391.323 cv
251.026 391.348 li
251.032 391.351 251.054 391.357 251.068 391.362 cv
251.12 391.377 li
251.333 391.452 251.365 391.464 251.514 391.401 cv
251.645 391.348 251.82 391.33 251.913 391.325 cv
252.017 391.297 252.14 391.291 252.25 391.289 cv
252.357 391.284 252.452 391.281 252.538 391.252 cv
252.727 391.188 252.928 391.072 253.107 390.97 cv
253.21 390.91 li
253.218 390.906 253.239 390.881 253.252 390.863 cv
253.283 390.83 li
253.283 390.825 253.317 390.776 253.348 390.708 cv
253.396 390.618 253.454 390.578 253.491 390.552 cv
253.521 390.531 253.531 390.524 253.546 390.459 cv
253.597 390.244 253.674 390.098 253.737 389.981 cv
253.834 389.795 253.893 389.684 253.815 389.379 cv
253.802 389.333 253.801 389.293 253.801 389.26 cv
253.792 389.178 253.769 389.108 253.753 389.065 cv
253.618 388.803 253.486 388.593 253.302 388.302 cv
253.215 388.161 li
253.15 387.997 252.924 387.868 252.671 387.742 cv
252.521 387.667 252.364 387.59 252.234 387.488 cv
252.215 387.479 252.147 387.467 252.121 387.463 cv
252.074 387.456 li
251.985 387.438 251.952 387.438 251.881 387.437 cv
251.775 387.434 li
251.75 387.433 251.724 387.432 251.713 387.434 cv
251.567 387.469 251.453 387.542 251.332 387.62 cv
251.246 387.675 251.156 387.732 251.057 387.771 cv
250.962 387.812 250.868 387.822 250.776 387.834 cv
250.671 387.848 250.573 387.859 250.475 387.911 cv
250.465 387.915 250.447 387.936 250.43 387.953 cv
250.39 387.991 li
250.322 388.059 250.252 388.132 250.19 388.212 cv
250.131 388.287 250.079 388.366 250.032 388.447 cv
250.013 388.478 249.976 388.579 249.972 388.609 cv
249.94 388.862 249.938 388.992 249.934 389.108 cv
249.929 389.288 249.926 389.443 249.832 389.936 cv
249.834 389.952 249.878 390.099 249.895 390.146 cv
249.946 390.283 250.026 390.377 250.154 390.462 cv
250.178 390.476 250.203 390.493 250.226 390.512 cv
cp
250.793 391.577 mo
250.628 391.448 250.51 391.298 250.396 391.154 cv
250.292 391.023 250.196 390.899 250.07 390.801 cv
250.026 390.767 li
250.013 390.757 250 390.746 249.986 390.737 cv
249.772 390.603 249.665 390.461 249.591 390.258 cv
249.59 390.257 249.49 389.986 249.513 389.872 cv
249.602 389.409 249.605 389.272 249.61 389.1 cv
249.615 388.977 249.617 388.839 249.65 388.568 cv
249.66 388.491 249.718 388.339 249.754 388.28 cv
249.805 388.191 249.868 388.1 249.935 388.013 cv
250.007 387.921 250.085 387.835 250.167 387.756 cv
250.199 387.726 li
250.229 387.694 250.269 387.655 250.322 387.625 cv
250.473 387.544 250.613 387.527 250.737 387.512 cv
250.814 387.502 250.879 387.494 250.935 387.473 cv
251.011 387.44 251.083 387.395 251.158 387.347 cv
251.29 387.263 251.44 387.167 251.634 387.12 cv
251.694 387.104 251.75 387.107 251.793 387.111 cv
251.884 387.112 li
251.978 387.114 252.02 387.115 252.136 387.138 cv
252.28 387.161 252.36 387.175 252.416 387.219 cv
252.417 387.219 252.417 387.219 252.417 387.22 cv
252.54 387.315 252.673 387.381 252.815 387.452 cv
253.114 387.599 253.415 387.786 253.516 388.04 cv
253.574 388.125 li
253.756 388.415 253.899 388.643 254.051 388.938 cv
254.083 389.021 254.111 389.117 254.12 389.177 cv
254.123 389.202 254.125 389.228 254.125 389.254 cv
254.125 389.27 254.125 389.289 254.127 389.296 cv
254.24 389.723 254.134 389.922 254.023 390.132 cv
253.963 390.244 253.903 390.359 253.861 390.533 cv
253.821 390.705 253.747 390.768 253.676 390.816 cv
253.651 390.835 253.647 390.838 253.638 390.854 cv
253.598 390.938 253.554 391.002 253.541 391.023 cv
253.502 391.071 li
253.47 391.109 253.43 391.157 253.372 391.191 cv
253.267 391.251 li
253.077 391.36 252.86 391.484 252.641 391.56 cv
252.51 391.604 252.382 391.607 252.259 391.611 cv
252.158 391.615 252.061 391.619 251.96 391.644 cv
251.81 391.655 251.7 391.676 251.636 391.7 cv
251.375 391.811 251.242 391.764 251.024 391.688 cv
250.979 391.673 li
250.941 391.662 250.887 391.646 250.838 391.611 cv
250.793 391.577 li
cp
f
249.208 391.202 mo
249.277 391.258 li
249.536 391.461 249.726 391.7 249.909 391.932 cv
250.085 392.155 250.252 392.367 250.477 392.543 cv
250.533 392.585 li
250.542 392.592 250.578 392.602 250.6 392.608 cv
250.681 392.633 li
251.036 392.756 251.086 392.774 251.334 392.672 cv
251.564 392.578 251.872 392.552 251.993 392.545 cv
252.166 392.498 252.371 392.491 252.551 392.485 cv
252.732 392.478 252.887 392.473 253.028 392.426 cv
253.342 392.318 253.678 392.126 253.975 391.955 cv
254.144 391.859 li
254.156 391.852 254.187 391.813 254.208 391.787 cv
254.259 391.728 li
254.272 391.703 254.321 391.628 254.369 391.527 cv
254.449 391.375 254.542 391.309 254.606 391.264 cv
254.657 391.229 254.671 391.221 254.695 391.116 cv
254.781 390.761 254.909 390.519 255.011 390.323 cv
255.174 390.016 255.272 389.832 255.141 389.328 cv
255.121 389.259 255.12 389.191 255.119 389.138 cv
255.115 389.067 li
255.105 388.999 255.068 388.894 255.044 388.819 cv
254.812 388.37 254.581 388.004 254.288 387.538 cv
254.25 387.477 254.211 387.42 254.173 387.362 cv
254.005 386.977 253.667 386.831 253.251 386.623 cv
253.002 386.5 252.744 386.372 252.528 386.202 cv
252.499 386.185 252.384 386.167 252.341 386.16 cv
252.259 386.146 li
252.11 386.117 252.055 386.117 251.932 386.116 cv
251.77 386.11 li
251.725 386.108 251.683 386.106 251.66 386.112 cv
251.427 386.169 251.239 386.29 251.038 386.419 cv
250.895 386.51 250.746 386.604 250.582 386.672 cv
250.423 386.737 250.266 386.756 250.113 386.773 cv
249.94 386.795 249.777 386.814 249.62 386.9 cv
249.602 386.908 249.57 386.942 249.541 386.971 cv
249.478 387.034 li
249.362 387.144 249.248 387.267 249.146 387.397 cv
249.047 387.522 248.961 387.653 248.884 387.786 cv
248.856 387.832 248.794 387.997 248.786 388.05 cv
248.735 388.47 248.73 388.686 248.724 388.877 cv
248.716 389.174 248.709 389.432 248.551 390.252 cv
248.56 390.274 248.627 390.514 248.659 390.601 cv
248.741 390.822 248.874 390.989 249.086 391.116 cv
249.126 391.141 249.168 391.171 249.208 391.202 cv
cp
250.139 392.974 mo
249.863 392.758 249.667 392.512 249.478 392.271 cv
249.307 392.055 249.146 391.851 248.939 391.688 cv
248.87 391.634 li
248.847 391.616 248.823 391.598 248.797 391.582 cv
248.458 391.372 248.269 391.126 248.143 390.787 cv
248.116 390.708 247.981 390.316 248.013 390.147 cv
248.163 389.372 248.168 389.146 248.176 388.861 cv
248.182 388.659 248.187 388.431 248.241 387.985 cv
248.254 387.855 248.355 387.602 248.414 387.506 cv
248.501 387.355 248.6 387.204 248.713 387.06 cv
248.833 386.907 248.964 386.766 249.102 386.635 cv
249.202 386.534 249.267 386.468 249.357 386.418 cv
249.608 386.283 249.851 386.253 250.046 386.23 cv
250.174 386.214 250.285 386.201 250.375 386.164 cv
250.501 386.113 250.619 386.036 250.742 385.957 cv
250.96 385.817 251.208 385.657 251.533 385.579 cv
251.637 385.555 251.728 385.561 251.801 385.563 cv
251.937 385.567 li
252.098 385.569 252.169 385.57 252.367 385.61 cv
252.615 385.649 252.763 385.669 252.837 385.747 cv
253.041 385.906 253.262 386.016 253.496 386.132 cv
253.987 386.374 254.486 386.684 254.655 387.108 cv
254.671 387.121 254.712 387.183 254.753 387.25 cv
255.051 387.723 255.289 388.099 255.544 388.596 cv
255.598 388.752 255.644 388.898 255.657 388.992 cv
255.664 389.03 255.666 389.077 255.667 389.124 cv
255.856 389.898 255.681 390.229 255.497 390.579 cv
255.399 390.765 255.296 390.955 255.229 391.243 cv
255.161 391.526 255.04 391.632 254.919 391.716 cv
254.877 391.743 254.872 391.748 254.861 391.772 cv
254.8 391.896 254.736 391.994 254.706 392.04 cv
254.632 392.136 li
254.58 392.198 254.514 392.278 254.413 392.337 cv
254.247 392.432 li
253.928 392.613 253.569 392.819 253.204 392.943 cv
252.987 393.018 252.775 393.025 252.57 393.033 cv
252.4 393.039 252.241 393.045 252.073 393.085 cv
251.879 393.101 251.667 393.128 251.542 393.179 cv
251.104 393.359 250.886 393.285 250.528 393.16 cv
250.524 392.871 li
250.448 393.135 li
250.382 393.115 250.292 393.089 250.208 393.026 cv
250.139 392.974 li
cp
.6 .247059 .160784 rgb
f
250.826 390.137 mo
250.93 390.218 251.003 390.313 251.077 390.404 cv
251.143 390.49 251.208 390.571 251.291 390.638 cv
251.207 390.745 li
251.318 390.655 li
251.366 390.67 li
251.503 390.717 251.513 390.72 251.598 390.684 cv
251.696 390.646 251.819 390.635 251.867 390.633 cv
251.931 390.615 252.012 390.611 252.084 390.608 cv
252.152 390.607 252.21 390.605 252.261 390.588 cv
252.381 390.546 252.512 390.472 252.626 390.406 cv
252.693 390.367 li
252.729 390.323 li
252.729 390.321 252.749 390.292 252.767 390.253 cv
252.802 390.185 252.845 390.155 252.87 390.139 cv
252.881 390.13 252.887 390.122 252.893 390.098 cv
252.927 389.955 252.979 389.858 253.019 389.781 cv
253.083 389.661 253.115 389.6 253.067 389.415 cv
253.057 389.381 253.057 389.353 253.056 389.329 cv
253.053 389.286 253.039 389.242 253.029 389.216 cv
252.944 389.053 252.86 388.915 252.738 388.726 cv
252.694 388.656 li
252.625 388.501 252.501 388.456 252.346 388.378 cv
252.247 388.329 252.145 388.278 252.058 388.21 cv
252.048 388.208 252.018 388.202 251.997 388.199 cv
251.909 388.184 251.888 388.184 251.838 388.184 cv
251.779 388.181 li
251.766 388.18 251.75 388.18 251.745 388.182 cv
251.659 388.202 251.587 388.248 251.51 388.296 cv
251.449 388.336 251.389 388.372 251.327 388.397 cv
251.261 388.425 251.199 388.433 251.136 388.439 cv
251.069 388.447 251.01 388.455 250.954 388.485 cv
250.953 388.486 250.94 388.499 250.932 388.507 cv
250.906 388.533 li
250.86 388.575 250.818 388.622 250.779 388.672 cv
250.742 388.719 250.708 388.771 250.678 388.82 cv
250.67 388.837 250.648 388.897 250.644 388.916 cv
250.628 389.067 250.625 389.151 250.624 389.224 cv
250.62 389.346 250.617 389.443 250.552 389.773 cv
250.552 389.773 li
250.558 389.777 250.582 389.856 250.594 389.896 cv
250.627 389.981 250.669 390.037 250.739 390.075 cv
250.826 390.137 li
cp
251.122 390.854 mo
251.012 390.768 250.935 390.669 250.861 390.573 cv
250.796 390.491 250.735 390.413 250.657 390.353 cv
250.597 390.309 li
250.582 390.301 250.554 390.283 250.529 390.264 cv
250.445 390.197 250.382 390.107 250.336 389.988 cv
250.27 389.794 250.281 389.739 250.283 389.721 cv
250.344 389.413 250.346 389.33 250.349 389.215 cv
250.351 389.139 250.353 389.048 250.373 388.88 cv
250.38 388.825 250.417 388.724 250.442 388.682 cv
250.478 388.62 250.518 388.561 250.563 388.503 cv
250.612 388.441 250.664 388.386 250.719 388.333 cv
250.757 388.293 250.785 388.266 250.823 388.245 cv
250.926 388.189 251.025 388.177 251.103 388.168 cv
251.15 388.161 251.192 388.157 251.224 388.144 cv
251.272 388.125 251.317 388.095 251.363 388.065 cv
251.45 388.009 251.549 387.947 251.68 387.914 cv
251.725 387.903 251.762 387.905 251.792 387.908 cv
251.841 388.047 li
251.844 387.908 li
251.911 387.909 251.938 387.91 252.018 387.926 cv
252.122 387.94 252.169 387.938 252.215 387.986 cv
252.292 388.047 252.377 388.088 252.467 388.133 cv
252.665 388.229 252.866 388.357 252.935 388.528 cv
252.969 388.577 li
253.095 388.774 253.182 388.917 253.281 389.107 cv
253.3 389.164 253.32 389.229 253.327 389.267 cv
253.33 389.29 253.331 389.307 253.331 389.324 cv
253.408 389.634 253.334 389.774 253.261 389.909 cv
253.223 389.98 253.186 390.053 253.16 390.161 cv
253.13 390.283 253.076 390.329 253.027 390.364 cv
252.989 390.426 252.961 390.467 252.951 390.484 cv
252.946 390.491 li
252.92 390.521 li
252.9 390.548 252.871 390.582 252.826 390.607 cv
252.761 390.645 li
252.637 390.717 252.496 390.797 252.349 390.847 cv
252.26 390.877 252.176 390.88 252.093 390.883 cv
252.03 390.885 251.969 390.888 251.906 390.903 cv
251.824 390.91 251.747 390.921 251.703 390.938 cv
251.522 391.014 251.429 390.981 251.288 390.933 cv
251.292 390.79 li
251.255 390.922 li
251.228 390.914 251.19 390.902 251.153 390.875 cv
251.122 390.854 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.0
%%For: (\704\740\770\740) ()
%%Title: (1503.i029.035.P.m005.c26.forest elements.eps)
%%CreationDate: 3/27/2015 12:02 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CKo7[pGi)`hUgk5W+Q[?3?J6d1i3pq6,<(m/8]o0Bkn7ImJZ&Efq5\'bTrB/D1giFmB7PHP0@XB=gQDAgq?p,%pJWqla51@
%GJ0Z=Kf&s])6-tEe$L'Dh7`]eYoi[;Q&;T<>$06%3f7fBFfX`i[Yo![[V7bSYhZAj0#CY=YM646]q4,![_'6GK)`12._MjS_OYH#
%6eH4`s!a2$e_3$jn[?];T[=1#G5%`b03CYs0'YsVpe;9&5mR1U?f,bORY,pr#OTG*p''7?d2i+?r\t2\I@)mNWoB!2T9eQ[X;;R#
%9:tpqdmgOuXnE_$f&pVGl>9aAd"AQ$AN-8<kQf6Cgan]-PNngoB<s&*[GYhM\U[te'QuQ_V+7X=(eCKtnA>0&S`kYRCF]=AWssQr
%moi"1(i5_U]eYVAYmQdp0MK!YnHS:*!-i(3-Aa]E$njZdC-SN%eMOUGi\KMCnfOS]X:A68Z]q1q.2mT]eY6ch<l%c2-.RPsQD3q.
%0d237)W<pHKkFi%*d7@*HenZej+";9L5?RFpuVH?1[Mhi2>VheMlsU,6!h"c@?W8kD]Ua9\AU.ckVo\b=RD]7I3@NmF+ES]?>pTu
%n($?*Vtr49p-a](d;C=J*OakR7+Wsp+L2O`MH\MPfGOZl5ufbNJ.V=kZh8oB$QL`QmiMACT#;I(Y1F^+k&.YJg1[Ul3O%#!VK/,R
%g25>LP-q]L_gW1S77[2o`=JRtTV10Q>65.347Zau4Xj"njXqY8n8*&`go<7DKc80:Esf9Y9<\S'j_DO;f3pa&YXnd08jE3[TbR:c
%3rXm,KobQZDr2@4!Ace9`k/gBGBKJ4%0C:iRTUD,",'kQ)lm*W<jSkM&=pBbeo=usj2-S?].R-*?*&e<n2FD>IB;T.f[TZcNpgJK
%+MbTT?s1uA#d?W,YXWHWCs$Q`CeT!gRu7*S%aFN.XG1]QDle\4$#&!T":BWg*<Z_!'C5c@X>.SG^[Wr[$@cPe$sBZI":BVlm.^`;
%,@!2X_^V&U<^Y7'2qA9:]I$[9-I4BjE61q1^KFJ>4Tg4/T?WCU:QlSf-*"0[<^R_o2g3.UP!RC]nV+k6=:J[Q/'Uo.)C(49)ui5)
%)'.XR5'aeo^Te]oLqhVP13-gEAM_+V"YJ*^"XT#%@oHpJa(c$.!]LO6"oqAh9oY.VqA.8oWe_2:5l_(J,(S156-a?mN;+?m0j7'a
%).$ETr/Gh15\MdK>jN_j4uNV?F@"3(BE[/=j;H&nU(Ee^X=_=RRifO2)jqk1-8--(^rN=5e\q6aHe&50cTZaICnic.Ao#^(`4?6<
%_alfErN$Gb(V;W_B*)6+5%'U-p-;<.e3'TTZ1I#+(:]B+"6UrV8^1b0M!9dGMih/_XJr3LoYLPfX&Smbe(CetJ+bT*p36F!q`o5O
%A=)<UfuLPShspa5j#HCDa,*90prE!YXn[D>.@&QCnc.qXc-'[A.K5rf.M_Z$r'1',d>.==>XSG6esH=eraPmPN1/]EAl.'k+Rj3Z
%'U0?MZ\#Kb!^8cZjI,f'#&XG@gHet$iHeo/T&QGg$d*2j06fD3<,K52@0=im+)#1^1B[*5.MTkA/tkIEDW81'C7"FEWH\b$Dcp)=
%;q:U#Wp_r-1RnK8"k>"5H,)"#N1h0b2g0lY)T!"CLH@QQJL`]<]8Ik8@3aa@F;*VUI*Y`"H4'T=^jR#gqLfgB?p?Uf1fm\3$>R_\
%B(;"'9GJN#5)j7H`[69#:ifkDClXkO(4lT4X#*_rp'F?LXU6!Kf)g\XNc=PIT=d"pp`FH_ZF_dmBFKf6VI5apm,5g%KfteYY!7Q#
%+Uu"1KX0]M5KH^tBM]`'R#4uckm(V(bNurU)]llsc4ue+YCq*URL++('W60jTKX#)f&8EAY^isI0u!Hs"tUg;Um*kK(bn2k82-8X
%0ONdp;;mh+7%Is6AuHY,)iN+Xn'Xm'U,mnL80UM#Yca&hYS5cMaB$.W&b_#SpfJgH*E&XFi?bn-*n9l8j9\/X+U#U]U9H$ch[V#I
%L.i)/B@4S9`0kG^+]MnTnq_*7]N0l(0n,/[>@)#0=(4=eIBVR^$.ZPVCn%LAMfBEM;38r)K("Pu3K-]fH!5Dq0Yj(n0/\f(CpAC&
%Mrn7'c/\)*6_m;0k2VA:9;lFG`8_6GfFQd0m4tBRUWOq([?^*A!D=H+1dUn='4?K@XWoqIE^RRGX?_jW>IYLr18^7K&rR(G7a's=
%'+9V%5SKd]27AjGq7t9QdX+*'^Z1pZ=X1b,,%uhIPI%%c9[9T3N=_64W;e(N\@C(.h&/'h3,)jJ.defp&rpf`=qds!-DbCr`FJE:
%9t"lc,"cZ.+t&Ro)r;EW)Gq6l)&b@O>q+:B@hO4#Zog5j&r>$>!,T*7IF%(tjF"dTqO9l(=_!7.Lch<\`fJ]j,hSLbb%S`d-lC^^
%-Jt3Q1FS_KKbEck'is5OQr+$*+pfc-7_p0d2FH=Bni!0`PI>b)Oc<'Eq+o!eTo%*G.)cRQ5H-4jlGrUGQa(;X.LKN%%_Id@&HE(_
%UHqi@r:3N@o2^^D.\,Wmr$/fjg0L5giPVm^g];6^'(=-Bi<3.-S1B2FMrl'u'!X$uQ=7c_&>sLmTq!eWN9PIYDPIht4&,buCH4(p
%5Wce$JU(<0'oY;s5D1fOrgk;^&bc?iN@G&A<,nYs'6]'F'E?CG3RU.W<mfuJg&^Fp6c&jqQ]:3"r*L"P[/Fj]0O6=uOWd<jJE*1t
%4mJ`Fd#?<J<5B?eJLS9knmaN_-&h%igh/)kl#"d+r7Dcpf0Z)a)*O^cSWL]VVZBX8:((,F;25E&h9)M[BsNSA.e+=p`)V@j>'C:^
%V?P3]o%7fV8WmD<6:;u>0jqrEAK4k``8R4Wo`qA9E=L&Ai]S3qB3_#hKGh+M6dq/J?np("8WktBh,J?"6""q2I:R(dN&mFF&mo(U
%qm_/!W^*d"*GkSZ92sI^i@V)KU!%!16DZL_;hr0Y3?t;5>88>;7BCj3/R^RD'q8r+NK,\$XMChQ#*/%r"?Wjf&iYTa`eElkCoI=W
%(o/Y!?#0^QY`TqW%!FdKb%VfK^SF)`<lJWRXMaNM5boF@N"%:&C:B"s@g+]=Cb(ZpW6%':dR"ML#%uGm]()TDEWKYg/(k\4QJ#/P
%,n-4SeYD7Z_P?V""_)4;XK3q^+&Jr0"sD5"<FRjD2'1<@=B@IR0co'O<!,s1PVb(98OUEaO4\q]Oh*:cOt<=-*09dqhsE6#F"/B.
%1s7<+ZEUL+]qu-IZ&XWZj*B>*jOmur3"6CrAe>N9oAUl2\>?Dc@=U]kf!@1j2Yd]'6^;@B6CJeB<.u'd1J290"bG#7<IkaNNPR\f
%2,V@rJRK*jWI\o_VTSW5RtIV@![Fq/aMC3Ub[=u)k(+bN+L[(=73a]U4EY1Q%!M2>OJO!dFKb749X^25ZEfM3WqF&]<O+jBL>d[8
%0f&9&J-nb+.+(l\%<isjhEc&`qickCrgh[DJnB&\JH/Eg6V&(M3)#+Dcb0N$j/<R]@eMp*MKirtH:b&)$F3.='CH&;QiU]#OWNo]
%I:na<@q0(:SSiH(D$p6(ZVOKKOON.g9T8SR=\PY8Kq&N]U!`]"V;W[4:utU!.[f5S9Wc/l/XIEjd+sBB*-G-lG*O?=RHoLDJ1VT_
%F/UcW%@K>0ORl^Z<Z!6@E0J\^^aiA?"S2K3`?5QSUsLI78\@a@2^O8,G(MD\".L)CA>F4Md?Rg8iatrR>AV%#i.Sr]Y7CG)!npV@
%IR1ThAePr]P6$uVE["RQ.FRCa$)1#>jb7ECn8T\J1fbAPk(Vp8'Ec)$R#!NMFe:H[juX2j,<,WKLOpTNZ8O6!OK^Y`Y5@`,7$GqR
%r"UQ,=^qG`3<X>C>>2qm*%sM=A7U9<P]D<mi<8(bA`RrjlkDc%9eA9JA44C-(>jCYY-g>X]8g8WUTJ9MP"sXFgj:1@CJ[HVQS7G?
%i:Gu89=F8&"^J"C8_m\MYcZ(1-t'M.eR'WhC<Z47iN&(L;'t<s[P8HBRLBb%[7IK]*)heg'\W"c$'WI(]P*GG()8Gsgj+;/D6?_`
%N.4c8$mj1S,Z77(BL57TLlrHo.j;lqVPacRKIfSSkq?Q]Lp6d#iKL]RYVFO71t<a;Er4Z/;b_QAPK#Qa#oU7W[$fB7E%[DkMo&4)
%lg)JONpG?AcM"f9Lg8/99TG:240gOX,%Dg\>TX:H7p24uaDW8/5aIW^,`n[EB$tZM'/;0W(Xqr1I9&\_#WFCmI#S9(83!)XT1(qR
%fgIV@e=k)/nI&M@Bf\lQC_0>rlHkd3jR.HU0nqeCY%k<bbQLT+as#XG(D9%#V2EK)`q-t_A+gt9S!Up<Q91A)%YBKd@u?2s"d`Pu
%jPVk*N[=eFirrnH`2pJ[TeZuk'gPQ2bCl?:m9/HG4XO"nate2d;^,mZfW`<m3A2HE=^_EKY#)I"R@jauF3RTm+A/C>4'DqZO`R(?
%W,1mD:`0T89I]'Uj2f<&p6S'3Rcu^WdrS+HeMr%4`J-6]"=:o$.[r^<1QoF0$4j(T>?-Y>X<GmnMIsd/)2)=tEshNr9ZT&Y@50W9
%@5E^='2orXR+)UKMG0WrRBJk64jf:"oRI3@7>8&HBA^8m=HPKmrt1,+p1TTa&TF51R3Fi(S<]J<OeC'(+=<P)]YbpdSf.AjA6j/l
%Lipf>_.[5p-kknf4*XXf#dkd'R_3%AJlm$QLbY#k8?;<L#tE+X3>$mLW8i`^YtMp3"d'(-([>+]*kAaVpu$+t_Mp='g(GUPiL1k"
%H@<.]R.J:),1<e"&M,cLHD!&U<EQ?H,j$pjAmbno3D;9'7tAM>'>KNc67uo<gS$rC'<r(f+W6uj3atR%]JP9sSLjNVK>B-ETD9J*
%H/tGkR?N4$7b,G_!b!h'IK[tT%-lJTrco%=$4L@(2mc_1k5+"B%@:Gn`/L(,am:uA-'.jM.(J5u5`DgI`V"Tpc!fRo<c)`-\n'sP
%>.TjbU;?uDJmdeHM-7F2"*#(WbO121>P_(HVM7!WZce:[EGOeQ.72FU)k:T<coDs^A=^SH,3qXUl`(ZlQZW_Un@3),;hQ*8%5hOV
%*W;]E(D;Tc?=DLlIYGh<Hnokn19EDu?sHZSDo[_BnNI#,\/c5\(1nN(Ys7C/+?!\$Ef\CrJ7?K6CGFq(lg):.U9?t=jJQB@L;rjp
%d7E,IJ4DrJG#pYeFAh[8"RHS0W!O#'[/:-O4WpB'n,ds!?)+^t"ldAj:!A.N.ejUJ(ZHUHR(.I^AfrT.P1^TUcr4A4BEh^=-&@*P
%GrU`&V'Vs;bTRc$E<J26/!t!\KLW8k&.2cT76@f\^s*$e/1j1A]E\d"FHOG.:F+@umBkV6ecpdfi/<JT2J#=o0K/qVjT(-o3u`li
%AXX:qCk5-O+bJfA:0]h4*[M+c6.+?`_W/9XI7cKo0c*1+''mh^Dj[OMY*(sVB)]eY(Sjuq0I,'V(4R'Z"dld8oILcai%@iJ#PdBR
%&i"(dO!-$kjKt;FPDE-T6H`p]EfYm,+3,UZETVVVYTJQh6hO)="(FPB>?GHVFpIs?53'%E@Ie^'J?8L6_Y(_SSCeAf.^3Fdq%6M%
%25g5;D/h;hQRJeb-n5PjQ't+0[>9SN$\:BMmg)Q9;F8Pn>Vc88M^FQW@?SjT:!Ke'VULthY5.iVB-PDH*8s=TaqJ2J&K0OA+)d*o
%mNXiUDI&.2%[a+hbuq-%0qW]?7fcnNVm)8!99QQMnNr.%iXqK4l$+TnD+h0G)8Z0B0Ms2[Uh+!]g@*Z"RACV1VVEfb"/K?UBG`E)
%(Gp':KJUS=@),9Ij=!Y\5r]MkH6#`uPTFp^=QnBaF[-V;39.F]]LAY7:kK?)DV*R)o-&-6ORj!\kq\lR,4g]S)20*AT9bkK(PQmH
%g%cj4&3f>>9T]l9$50K1&ZW]CB:O^g1l^.Ka.:VV&:,$:UB%mE)4tjnHG[qj1G:KWeao1h0fW'O?ke/HK0\K_&>>ITLYjo0jt\-U
%[EL!?M1/f"q66RF8:D,4NQ&f;Zo8(F3a5)qP9Fii9?'=7_SQXNK;=Z553'_aE5@WF`l5X62+eJ<jpJWaZ!GAEAR*t8jc*h8n3:(F
%0OP50@,L)'&-qQORl<9O!(nM3(`lcV.#:9dfM'%M4e&hFP)'a-3?V<k;.,uC7mSA'!DZeM5\QC\i>Z+YS?#,0Ff+ALOim-u8561K
%o%Eh4j(&c^;^l:mRIVHe]!>XSMN^g*=s$\Z4dIVdZ*1l7)Pp0fZ>>b=J]J[](8Ul7S8gqHr^6cESWl?k>H&BM.KdUY8K]^IJJ.T$
%C(:>d@t^s.dub*#NPUR%p745gm942;9Rs'&f;RBDlj(9uJONK?gPcc7=YtEd/Yk%2iV?74)EuK:<OeI8j+:-U:lX7YT[,*H]4/Fr
%-c6$:6qW:cb[S2#"[)D5,E8.cJkno__92"]N5'^G*1>agKrD&nE!qF:_a"1[hf4bQ3`eqASSi\b>/64D^)LB0-K8R0Pgd`d)*C#h
%&u.tpY`6Ma2'Oh[fEB_2@_eVgl,D-q?GhtBi+`Q9B=eb29*oD%G3A^f).>"Niillj1,U2o^keUT1c(>a$S"dJ%m.BSe0QQ/-fIE-
%%Q?1Aa#mec&()8Sb/+Kp&5KT85;=V)*qQHU7P?P-q2Q+ebX,TO^Bg*p$Z_$!00jT`gCh-Di3@3M*&81k(OR7VFqTq-9PE=IT.gg[
%cAgdVB!H%pf/gAgRB/\"14()h")/R1UCg69c=J3r9)d-t'\Ok(BGji67:;GK42+FBasd:.1>On_du"lQgrpF72'UW>#=>U>Skge(
%+siM$,=GOBdRj?L"U_0>,Ec,Z5ET\kZ*2A"&/)oh;'GKTYq?UZ3/#7&CnC<.A',!,M.Z9*+mrB7FaW>3J+_P4pm`TnEQ=ZkgZu;;
%m8JHmre'VZK`+4"#(+XW/f_Q>6\@i9+8WV>f.2$j3SJ6Yi9&L+HdLG`S[<>5[H,lma'mr2>HL39_X?s'Yh!/6/Fa,<[t?uA*u:o:
%cLQXkJnDD0(>)o+:4L.\-hr1_p>te>h7\V+?rnk\+(;M3OZJN*<*T%4]5"g=Vt7T6[8lT0kXO(r:?)T7W<0BbhW&C^\dc9b%NpcM
%;4Z2J@k($YEXc%9T+suCYZ:-\]sBq%P@k^'FF!BIijdf\oIcjJjX\aQnQc=Q4,9+"`h@sje7]U)5JjR#e-`FIKm*O"\*Y9)8.SQ\
%RO,!sWG_-t)bm-f]OS;%=#G65g[6&O<U9%%nkO_e^8_M+LF5eAUirf*G6W)OX.%&/YhdG`51R?HJY.\!O?[r]F*O\'Pte",XT&)Q
%pB4UcWu=+a<\M>&A$a<Z20@s;::&cg"Rb:S=#L4i<5%(_cYHn<i;TD,*q]%6c>-e?i/MWVR=!n<mAh/<eF(o*DVi3TmGAjF&r$:g
%gY-L!RFiPPc3f?oFu,GqX9--OCD>SgCGRi#7$Y(_J=G$B\R023)lMM,kH%P(l9F<X1sh&e\Q"k5@6JDEjK3+"i>0ls%O1bFdDA%4
%.X$c]p-f2sg-I<aK9riT+OuGJ235NsO>[$F[2XUpKi1RP#bH4?o`c6Il\2/oXVS/?HJt)q.VK<6P^0g4'XU3+IcIV-2u_ODnX!]8
%NoDO[;Gqn=X9:":hQEihC>AUM1"FVb9r/qkIWYE@TU8T9$C*mSkR.<M^SurcUf09QWZ.=V&a4c]VubP(Q#ajIPU^"YXZ3&aEePQ,
%pWFj2?J1%lPgSH%M&Li"MT:XuMrV--N5FDG;O7B:Tl!k2oR]uZ%"2-p092mmGfgA_'cs]U\;k%VfdjY7iCP[kgG&[1J1+>FW/?0I
%*WYJdY,]67O63<"[Z0I_W.7U#^,W.\\r"-P"WClX[UM9WN(oX@?\t1V6#S`d;E6'i6"8j`;<'EbBk7sTKnQGKKIMCMWG#9'W#317
%;R*1=hk4pdO,M1Snh3kQ<%7@sn_[097it?[s,K`t9W;QgJGg!A<`CBWd+4/ia$n8L6oBO2A6_ioloSCNn;l(/]#Nfoq+8g#fD82V
%kjc.ZphtHm/1mT;NRK^^Y"_,8HU\3F;&,*9?mniFeP^64%f,KaWXh=*'duYUVu^`M*!TP(BA-0uc%7$AF.g$>4=DL(5*Uq*-74bS
%4O@(XfGMO-*LUG7Z)H;S*%ES+&hcG61+sAK!`9Ap3\V$Y2Qk(!Jtbn,rg9ZoV2?i3oGE!8S<:dSME@R%qp;,4bJhdWcsu52?SAb7
%@tNEsdZMZm4J@Jm)CaB@>mqFH'r"rc.+JEg//'lbr?9.*5\!&V5Vj>*MFHk!&B;m_5`#K0WLK2fRuZa%-.=fr+9GM8"0sd8bH`_?
%EikMd>@mT/fW`V.6g-cn'NV\oP&-IoX!Q+T.Wtt`"DfgF0M"Hp@mb5U(J5!kmo5q_:-bNU[hN]a,U4/EKoWCsNPA_RSED1JA^FOM
%\"RoN$5YM*M*6h77Re^X(,**E2u`C'W5P<+U6IfJ.[?\?a9?nNhb)&DU?*u":*d%,^K[AOhsTO>kqPR$`D;2SE`@Em8l62Di(CtF
%MCf2-B_.l@.qYLmWM6;J2I)nF27"^+9-kEVDYs[Q0Dd2Z/(!>/qdYMU?(f4MGCHst?g^d1H(ssedBuL:CNBiJ%D[Kp)i[+##"#RF
%<lK`$OP6@-5aA;sAY:=$/AaC=aZ(!s+ZBt+Qr$$ROQ(h#"-as.]D35[kttqOc*"uZ8_K&EW3EotMi,Ua'4b@UnMOY&W/uT84eaYB
%DrljUb#7b.-2iZ;3:N)uS\$,)PG@V81[*6cj^Md9kV;]*YF!r,;5/5]U>#i$2hA\CEc.+lU2?Q6UgaL@(TGt38i;\gM'@K\M=-JR
%OKK:l)V@JH"V0MH!-t<(<%pEb,gf7-k?U1_"7uZ4dm7'.1c2[.H3FoaC)RRq*gUT)-DJ,fgKg'Qh>fGODAo.g_BV4`+e?Vn5[biW
%7n;TiF<49*8D!nb\B2\J1T5nUQK4`c@oHkuZ-]4S;IPGB1D;TOaB0U6$dBV6\146.prb-W`K*V(nQqs"6cG/qoI.H.@nZ5#oU,QD
%^K[AOhsTO>kqV.)MfkNZhkGTlcQ'$BDAJJ2k#t#gk_i=qpn$tVBr6Fk/6`8b_E5?iY"C_:Y+e#MJ)PCkWfDjNMpC?5idSc;(1##A
%4WEQ'dkb9>3dSg4Uh>Y^$&"XqGmImJJ/7qa*3uHg.o>C-!0t079sUkIreFcQ[XX^UDTUaJG.pO+52,]Og%8t"#@OemX32VY*:5Ac
%Q:i>?/&M"knJ>;7#+fU&p6UR.(C9XU@=btnGL6K0A5Qc`ft^&'mdbq\"Mf:>i'V$nh=qA=4QX"P5ZX0OS.2SN9RA8jf;i9d/oX.J
%CaMikFibQmJR_`rAl6\H0M5^_!Y[jKkQ%CMJBRd3O&8(G+M1L6CVY^&esjI$OPQU"i0'+NU)H7p5qnRZoEoX+!I^0?U%'>^*sOC\
%:pK4s9S"8\s%LG.oE_-N#gL0D'&"lS<&BaU.Q8\(Uul&rQVrZWHq'5L97s<?8n8/XU'rK5;<a8A5R@M?"([0ZFtUoHO!KGnaU01;
%JG?[&E4J)=&jVAb^!A^Ki5[1TE-.`]FP$eN(f[t`@PG"ml\(=a68=%gY\<[9(E,+=Ys*]\9P'_&%Z"DbT?,s),aJ:$$CErO:u:t?
%-uhN(X>mlFgp8<^:`;"Be]^0d'u%W#0PY#$\\'o7=M,K`L_"]:7tt$3QP(t,"TW@nKQ!Yl&=N(GAPeka*Vl`X^k$$jTn`!5/5M=K
%)-=+2LTc$P2o#I';q^'5[H_dJPs9JZH/571=\GAVTa*GgDE`glorI!JE!uRN5C]J!>*Y=b3;lF\la9,c,T.9#\<NX7#P9G()1E9^
%#^@=SPPiQO6%j.ojTq%q,r0W\c(\VN1^p`0nDTe=R=02FFk.epZQALgA.`t&#<6GINsH_]rDMU.c+m-D)e;iG\=uQ6R!?]TE&%sC
%,"+gf`*u-1`ofe/H]mnCLZ1m1NKrKtE\UH\+&P#gTL\uGht+]S()A[3O-t-,E6DAB2R1S\V%-WE-<\,tr@2>fPe"3fOelKMX^R=!
%TlPLTbU&+h/Ik^b3J*LG@10[Lj@@qp8D5(XD?u0<kLPC*/Ic<'W$FAQA6G/,7H'=S@<1%pP3f-/78P1fh][F(,fuaRli>.)+j!S*
%\`&Xo0L5u[*'n&4,V^d2ZuAT7=Bn='"G04#1<>+]a9.dP!Y]*p%]$(EhG66UW7)tdO)YktkSNJ_+mNSpalq*+rF5oJksTBI`l^\H
%*mp*E1]p+ob0pC_Cur4Q/O%$<&U',;F+a]Blloji$2$Sd<Nni9_Rq!oYs!b?`^;a`nAOBV$ltm/c\kHqEL6RDR@h,;Sqq!V)=pbb
%KerTSr5uLJ&=3mb5R?<s:h0&?!#NP2O37o\c73jVE$l.f=QZHsM\&$\1TS.on]esR;&IC8Kd.QgBF_Hf3dOSTE5W->N6"U>o2=O9
%#Y?(<L)iZu.nZWL]JIYi75:WJ8]@!Q,8F;.9O,i+MX6RgS69#u.M\pR/n32!AEK^\7@pscOTTs-<1'fl=H-dHE^Wcb/$e/+7<Z0;
%;B_;EH;$dL'@B=U@H%n+L4iAq`?N-Ac&+u&7Nk^8a,Hr@O"?HWT!5.jhA_XM:<S[mS!K64EfjpmO=L*'40FC^.0bXt,<m&,a`.38
%]u]lN8$N/HB;2iNCf]%9E&SoIPH@I,>+o&k7b#BCdh8f@XeeeY_P2T-i:im77I`Wq,(d`+-urK,%kJBT<-]b9-N6IH5iPmLA;apP
%&%Dsd&7LDV`!(,#ZU6U;*GUcY.U/Uj#.<roI^7aVF;^;eI4pWK%)mRpk^P*[9@g(JY!&+BVt]`O8',42`gb,M(fZ@laO)D#fip_^
%Y>KeDAKEoY/&kSHB8ZE-"F^$25I8e5j@9uXiF#hLU\I2F`\HI2C"Hq8(5HCY6a=Xu$DBs?<Qq/"N]h!n+*B$tW$TmlEbMe)F]n:`
%kL*s./EYAk8[$4/bN@De;<*T0T.Ld*ZacFBb:KmsOc:V&5GOH!9-mjl\#>H1-;KI8aY"Pcd0K?9ZlJ.!XRMJ]0:MC1#rP.F;i.5r
%+rDcgI,%FcerQ/TnVR%4M!TtSSeB$1b++oRQd+L_&^V4gQCt:GZ35#!lAFgVNmkpQ[Nq+=SUl73..*0u'5?BmZj)b[UpeZOP@QJ/
%Z^=8sOtA"m0/75kD(?(M8SK]s`oFWT.k,<[E=45L)iXbJ?FXho.A3)p4fKSKb;*Y`"5f+03^jY6T2*hkkGFH\]d^5:+6T&\GlAJf
%r*p7&lj8cgaa,!,Y=\SYr'.Ls`P(71=W_YPB&\=!s+tC011@<+.qD/a+lORWfs&T"=?-mmG`PH@pQ]C.Q6VGgjB%6<B>4Q-CZ:35
%C6ZuA7G]Eg%;W)p?TM$go101k'R?Q"H!0qp:M?'om>=,d*[cE"RV=4lb(TnT8b+lSk!_^"jCfLqQccDnOGb0dC-3OR2.^+`MYuC*
%^=Xmu/?qX4Nh'K7Ea$K8Bu3b*U[2!Ajfai\)X">n;&1[?U6^'E<TT?BOi?U))qHBD>eo`/S\/_RcXLI*eM<2eWoOBud8_QOYG)O8
%1IMu#:_ci.3uM\-bgADuMH4UMb0"1p/Ab$L<RAokFL=MVeI"`D<JmCe'Haa!$?3g"."OE\#4!B3;5.)J9`M5^'ap4H6(J);)O.sV
%V1KS?pfIZrYCk).P-+(i]9pX%"AP]_D2!&QR$;kH*00:M>Neq[C;i3BAR87P[o"c[:s"K6A:ZR&a#&%bR`2C3M=\!*do/4I`<=+L
%W4u3l=VO<-7#&BOLP-f^3s:7A9r)ce>WC\W-<Dk%T^=g<&["o\!&4ZI.7^3Ya3])G?&k]ka3oa<l,)+**6s\i=#aM(ntAQ,6@kLh
%o_qc?JgQjd0(TC#fV]O4qLnSrp'J_\nfC,Y3lMq(M>`F=&f@+VZ+i$u3qdG(=kre1FDarbs/70]Yskpl')PsEf;:1WK2%fH-pjVf
%SVFEL2tdQuT&Q,F8lA&>p,0HLd;^Q)<l[DjfX!^\):Y(6R#D>\b[i2o*_;T3Cr6V.0$3WMcnRu5:mBVP-Mr/22nR/D=_-A?12dqr
%2iGnL97CKk@U3O$/2D,ZR5^&JRmlJa,4fE/H*bT)=_-A?12dqr2o#-UPo^a02iGnL7HVjk1N.<shFLGqB0BZVkMN'kE7-a+guCjF
%6n&e)MTE_uF)g2U*0H:,kYC4"n>mV,%<=*AUI.>(EINp:)QCg)+ho#+YaCEh.$K#AJ6$O8SWhAu/"B?bd?E'$ce`[;1Xm2<>(]$u
%c(C?b\NCW+A@-Rkg>uI#lmZItgLV9La=t@MZd5"W%h[o$Xq06#ki$%N4d2*[S^^l/^$_/lNXFHWAIAHn\;5rp`:4?MpAeBS+rhf0
%&P"WL;;B$bN$/e*?ok8.`?:o="4MROI"-ShXrtauj@DVca!(6YnOUP05)j*;^e;WO"E-io+3?\VI4-%+b<EC03rLXU6Cc+j@QkA!
%lo@(!a\-kJiaQO9OnCM8d[lY"-1+Pa0In[>l>Wjuj_bN=Db4U&ARQuKIk-r'Q-S?OZacen/tT[dVXS%?E0/"-npB*N,VUKJ$F*$]
%[LKOWlcJT-cLmkK%*p\W,,0HCU<!<JFC@[`@]\50M2Ca]8&AmW]DQU2EV)h[an69raXcU'r."6?a(q;09ef3:Q)5;l=qL^n-S5hq
%7<Y83iabIA9)=L`e29;+0M07CGHr@!O1Hq[q96\I4e;J-dl^.7ROj%dR?;tZF`2*$1(-NAARFnZqRHsdTfHj>ZMt\'c:!_gm)NQ#
%;>(%c#obYKFrt-u:+/5_12Vg/ZViSP'RuW`dH3(.j);<MYak*6G@tI^KDD;<HubSE>?pQ.dGptA7?;qma'[%USsVqNG&3C7QH19i
%c9k?<P,33@U22T6g2W@>/=iUfk9S)NakW@=AL<>jA=f?>j0'lcN9;TZ=iqpag#Q"*-TZ8!(YQqn?^YIVZ^bUR@2%hmH9CW:@Z:E7
%?rj$YGXW%gjtT48.J0Cf+NnJ"GUBZ9s##(FZQ80'H;S"PaQ<r+r*>GmbB%h%=b@n_f8VP+j%N^LIiIM*MJQLZAK0ga;@_KA^S6Zj
%3>8PH1>tX`Cm5)>kJ+u=Z>kUMJ:?N3OW,f^`Cfs14N,$/,N^=]DAWu:,M*KtdqQ*qpPlp9)k2j\k(U@p7-_*L4;Mg$E@S$a#\?1T
%bG<U#j"RDG9T4kqs,MNf8a2hr/<[S:>5(VS>bt,2NT)o[b*+I<&&jOO0C,I$b[DU=@X#,afV(h2'^=R=p@@_;dF-.`Z(kMe"'V%4
%g3GE.ZJ)G!8YaR-DL7W*cHenD5Q5W!45XVKD"g?;H^+15q^\67Y5*qDG2bK&1Jt5AZ)+OH4-:C6B?)B@jO:[1ac(NEJKE!%-%,pb
%0Sp:SKH^aW7!\K@=j&4>7PQYkPZ\AW-M)%D'mjJ2Op-/R1:$b_MjL2h9iWh-.N.Hq0$n,+f9L`Va-[NI8YPocN`s3j'L_Y9&4Z:+
%`2G%,ZCcgV&m6J8)8^QUEf&n*'JK'gLublS:*S^EIQdh>@E_,2UnT.*C(b5I.E@t>Z=On8W?]tEM3?_;I]B3(cVHZ)OaalNpaM-n
%dh_ZHEu1W@VOtZFH57akW=6<_@Z&THe-f*Yj-<5;C_QDF;pTUqQg>Q(q?[^>TZ?">Cf[od\7A*Vj/5J3,s,QuWUL>g&Q.b!/$ZSW
%$;8)SLL85Yg:V=`ft=J*cmuD,f='pl>)EC2W>?9DC;G)!FZS"':t<d"It+dLrZWs`[;:..Q=6dCeoMkT;#./uF9R^?#1f\cnWCX[
%;'euQ\oQ_)eWruU^7l\Er)@''fL0^q0PT`>?7p=>T5C[Pn+6[f;KXSBO(HD=qQ55!>^ce6L4(oeB@p:nDRskRCSiVs^L!pc2=%*-
%^U[[>;n.^57c""9_:VBRak4`k+<^24_`4GE#M:P`5[XAWG_oTZbbn"8-I_$WFV-G&U.6se+X_TX(43_1$K4l4@?MqjU)V+=;C2i6
%:rVFTnjTO&dd&B7piR<=.5WT$L8E/5YG>"9gd);lH9@0nq7mVSZ<g0[.T&mj>;BLg,MB>Y=1@Z8[.s485Z09$Y]t2V82#l7b_B'?
%16]r'"QYV;LbX.US&HL-m^CP8)`>`_AW['f\?K5DMbB3X9=V8AMD;u*F,-'D3r#;;?Z0skTX]`R+I@%Hc-c4&Jb(4[8rpGLAXsi)
%%sueYJoYNM?f?60?#hh[V'kX0(+W4f=b3#jJ)jEa8buC/2>nGg+\%T%&V/4R9,W26j7mg\%Mah+`HIToT90^]aPcYEm-,??3bO:4
%+,MEJbaMp?K$aKo]1;.IT:2(<itC'djqH.AP,Uso>&!VNX=g+3jk^oA?1!i^%t-!4jPc'r.V@Zhhq0jh9TGaqj^k#%J0c''HXq@b
%j:\^sqOV;L,Q*Z=a\A*IQ;m-\``ogWN1=*8ds%4\a@nY3qRG!3oYa\X/jEd>,X"F64[%''59LdU53"b<.noHFE44*-7o*6l/4Ft8
%9/2j4kXA8k]-:UE5E@@9(+F#2fY52.(\QuPA[u=t[#@_%MZa?7:H]r>P`$f2aA=<r5*OtjBk>0AC.&W4&1j[lWt.mLaA<m4'o,C,
%7UpQAWPIT`(Q-^q85YJ@@\9GAUfE$j[3.gc8A'@F;@"U^RHJg$;A/u6fT/J8/OcaoYV-Am+,ft[.HlQJk`tda'd?u5Ma2%fG'R(s
%?L!^"n@,+)>22hO5r.<0547OaE)0Kdc%EK$K1<0h!oZ8#^),AZYP0\o?FB)BI4mNorC4D!mJ`VpCSS-+mmXPd2qP).I^a;Zk_Hk5
%_CAOW]%q,4:@5.1XEVPte^+X6[m;U'DW7l!:OMIjgfspW\[u*kGQ=;C:6Url<1<trlRZkBT(PV'6iDqC_$i`NeYrc9T16MDQ3/%3
%n%+%k"3SA=_"`,b626iMKV-j$K"$0h2*5I$,BYaiNHu(:YgRXpdm!aHf(u6:TN-b-QJ/+T7tTuYGh8EcUYj5q>b^q,5#A,9-h[f$
%j$>J;e\]G\@BClN-0kE^!1F<g2s_!BH'l7CG[977g'@RG^G^t%9-Eo+hI3/sk+UU!mHXgKRg`;4E3WX5=+B949!3PY;?2rha^?,j
%HXY81^CO`8jcKkKqDjtg-j\=B&56]!iSc&Z+\dC_3_V8dBXC6kB0sCBXm;^hKD(sB$UKpDS2G&,+Nal7ot`G)JeAX^:=u]BgYEjB
%`)X!d^\I2S::o-AkM%V=BGRDF9V0&;Ed1L7=I=,-#gU;ORjJ\Y`KW.oVVM1\;spGc"m*5hWnlkjN4DVi(<5,O">0qOR6b=8LEgVD
%b:RP@Ke9d<jVG;[0,d'pI+`PN^mPd=DG?T&CG$\?dr3Qt_B34Xi2g+#s)Z]k\llCaNgkYu4E)'q"/Z'[bruBl5DM,Clds>=O%'lI
%PKV%0X'`1Kn?b7?obu@]Bf$8o\)*WbIHl);@f73J@NHBWLo1#+b,4mS8MBFk+er1NAbe=WAU)jMme'jhU7'fu9iQg$S$1C\[_(l*
%S;js]&rcX!1QQI9f=NXblZL(umU4P]/G@>rJWV2WTf;2,<,:GYXdY=!'%O21ZHE7bd,^j&mJ?3NY?u/.+hHVZf*7k1+2H%6STZNr
%'S(1e))XD)9L['SU1q)kksW7R[theucNV>gEe*\pCY(<7g5T-_-_H00p!6@mJ8`sYXuFS#dW7uIHKl^Wo;Cd4L1ojPSOJcQ)EC%m
%7I=@+YoHm1\gT(aBKI<t!(jt69K*BTeg^]Q3n6k&GodQ<4pr!6#,G\6dGLu_7N*>S-k>DloO$uDqI^UQ57]IJVhO.^)Sqb[=O2k[
%pLVu?%2"d[WU8d0M"A.uIrlHa/>#@s:F8'd4D">U3FJ7u[q78hRW>='[sd>HgW`VT%0)Y=:q([e@ih5r:l@?*K>tf4#'hmH.UJV8
%56k_g",7[L0'=O_XPRVko;"(aU07;th<g`?S*eZE6>?kPOSN?qGoeH'FuD6SO3T>Ef7J;H;<qX#nmRUBiRG"m5g0Ygb4TH-D#!('
%3"'m>+,iG0TkdC&<mRNpcHK>8_gJ@f6^d6B$?Dpgceng-3VLhZJ:_PN5,7\-jLpd:$iYJ$hiDi/1)D]Y#-qY-XMmMJrg,n:kD5f,
%B@U$5C`\8SYa3VL+)Z+)n9I$GCR9fp\B-U$RrY:UBi]$.7G-n?XEJ2RjBPZX],[NQRBUf&eHN#gL;'[EYEK!aYBa)/;=W@"i]J47
%QNr?"O\pCgT,DY1q"QQ4bAg3b](t*#%SL^9G=N,cAnQ>KiE+L2_<#sTpHLXCAD24]8^:kBP=DmH04Uo*I;<YZP5]Kl-dRo-XOad.
%76/.C`cj6#nb025;nVEk]'YD<PXX-*$]\unTBa`Bb6"cV?gZudlE'-UD3c.g6p$G1dCqd]RZ1?Mc1.`!XkKkiD!/o"Q`=@.:u.4L
%eB(Nelh*`^nKSQDERjB,.Yhu.5nemc+s85MQ`P[B5doCK4R6%K%5%ipZ:,Cf8X6L0ZDb2M(V-EUqPRpZ#7%T;3HL:=;O`G8PWV4T
%NeKAUmYaL\au&p,C\*XEOp?f2g$6,8n$G/djuO/%cTu>&R#81on_o^jT,almN9$__jrkNeQfst=>a.?dYn3N,,nPu>PXR4IP_bk*
%c:(V1&*0J7jrkNe%hQ&lUDCBg;o@L-o8nln#Dh'd*K+0e/842>of9@G;j3,TbQnHGmDJO9jUs1H@eNQAR%8s+UU.JU)9gY,L#2N#
%REk7\\mj:O/BY.Y*kti<l"AjJ?XB6XZf#W6`7M'o?d""P"^bL'[09p,$,0I)_Nfhd[SYSQRB;06U^O?6i+eV=C("TiTr]iUg4HBM
%$WiN:6:Y+IEA3<p/I)X^:B^_7gZ\4_aBi\X*%4p*UW#,`Dkk"c^L;2e=oEV&%hCFa9#8`6OiURC5?CaW<;3ts>.e&f#El[W7=4+U
%s0HlnMjih]PJuc<s!9(7Gj:,h:cC5-TUP@S.DX76I#%_\i'q.8o"#dBH?dkONIHk(@ei&n[9q4e[A:Cc"^8*^a1b4OCN8R][3,6#
%8a0?IplYg6/=uVlD5u!'^/nE4]5jMSN1%fET<Hi]0&-udbl]R=G+&>bZ.g(cFq9hKh*I&;_TrWpaN:N]SKEf\i/G^pHpMm2aTZ_[
%ps)C+d)aC]Q*/B0O9:570r5!]`cT*PC98+&W7U5ra8nXL+``$k1?=TZfM'E*GrjFCEjC/ZKk%OFkau.6rB-P$s(NW:Mh-[Wm_Ql+
%IZ#TPVBZ"$&#WVaikGd*(\-BVbUhbgMtlc&Fgh+(rt;fZ#dC1BjQ)hhR.'^gHl"I4=N#S'1#N#HkZPiOY?di/`-eK8NO=T<:,`]^
%2bm*PH!\6?okYa0,W!=Ejs80?432B&o<eHamH]AhB@q%/s-X:!ZZ1<BLC.fS4PM^uFQj!.]PMu=q<\r"WNA9eC8f+ZfsNj$d\(pg
%k!i[W9NKIgQ_mIsba4*$nUB5HL[75<"<48p0PkTVa::-IXa9$7^%%lFDMJ+LDHPe0GH7j.0r]lmCuIEZ\B]P?WH.3'$iensJ+eZi
%$R\G$V#%jG`LoH\c$bF+&N-bMcE&#DKMD4lVl*"aHd-GsEeDSq*TS$gR[[2ep<O4]>VetF]hVZ3f$Rdae5)dE"glO"p.>/eB)=G3
%F6!=[n%26&>DAV@oucgX<rVK:`cER/j!G/SbJNeTE4l*UE4g-K$Zit"0+@Y`(64`8j(71o=ZB_'NgGI[AL8BMbqX[(=\?M4309jd
%o;<pU^^Zm'p)qW7,IR.-&\A`V;stQ-*&]O2S06-$#E-JHVBX]/l49B*ZOYH5fL5^\h!(/_bsm2dg)0(oSOJZ#D_EG?*&97n_JsQ.
%drYl9`CWbP+WN.LON`Z6S>T;QndGDME1@a'3/d>#9C0@2kt?r`Q`c6?^$VSIZYI2PcWn,/B5pI>%O<VIB:iY(+NFLrMoXMSEV&79
%;.Mi1RnB[.FjX;4(e/Mj":Y<:,H!adl%OO2UMa2[\bTlmV-SMLpiZ$#?!=9.M`/AS&F$9tlK*tUBj6uik\$NY79N`+ZXBK+\oN!M
%Kq="o15DT]f-T0N,7cd62!VV,lZg,/!bP.aEr_CoQb#Xd.N]4IPhKp&Bk'BI4<,NXn7+$I(piVMYSM\HWE+P?3UgP>JRRNX=SOTd
%IZ/t&A)YIqhaL]C0kS7_JJMG(ROd'&@@tesI<O&@f)!qZX*,^`^,]sf&M[/Wf)eie*h3U`J=%2hZZa=`<S-j[pd)[BYDmRI->[:q
%GM$Tk3_LYoqmq=$F7N.CE3Te`i^YW"jN?'XPZ#_FgsC&K(C&^bq]K_*o%;BiqD6:fkN\_6Gr]Lc&%S9RgD>,NKW8;o,]e4SOAa<m
%%[2?'O)iaa4t%30"te+0])Hc'nqc)?YsDNSc/PuoJ'.;&39VCoRQs3GlkGt^dnb!eh:$9%/WL)3K0+7Z*2TYj?O:)M^mU=<Y<8IO
%H+I&u&>h\F.i-N&UJ<5)-(jNJTTB7IrCLbWXG%<!TK2S^ca=]R8$^MNHEia7EFUY<\c3>O>X"I_YiZ_PgqoN'U6L?h\$5#Wg7$3Y
%O=[KDH*HGn0Kj5\ccqJ5QfAX9)78RI5d`</(?XDhS4eI=0]s56>Yb1:S1eq9(H=3[cE4'e@*n!;@erg1GO9SPZs1em=Vpee4P4^8
%+829![@YQ?-0FBE&igAj`OQV>o._'E@u`XP@$^TXidcuUH#!@o%`l.$B64g:<VE`Wp#BYlG.pg]QeJ!FXjR0ZT$+Omli1e`nP\t)
%f0sgBhl/a2X<Ar2^VUG_EuP9RGVcmgH?94\5:>ObCT$#_]utT%"_qAp2XP,%_BD(%r%7rl1T-eQjb@;XG5g$mdb!N@catG-[;%="
%1K"%\T_dh&f5onFrm(>IEGSka0&9om=,lZ.^YS2JX!:tYQZ+%B>?htd3E!//KC2==(?QpcAG)HJC"fA6WolW@om_sZ6*B-K<:d\e
%R5WMV*,oKN3,p?__I#;d`)>E,<hIMD@KejhU<BTeE[&GkFu]Mm8T!lnDgPdR5mrZ\`anAAC-lCe>s]8EDK9U`jcD''[Zu>(m8eH\
%!95C6V.b1>U4l@Ld"s)FjFH^XR9#4-/O=YGQ+TaU2>+Q;_V%)3S03U&3$3;8MS'p2l+/8n%h,5mq?\!tWRe#o8(C2HTMG5Bj:N^$
%f-j5]#CiUX.Q/7E]kV&QAMT/fES_=6X5-8Flls[H^5RbbS49Bg&<>3?_mBfl4L?s4_XWcna[/6f1Iqo,3%qRW(-T`sQOQ]jddq*2
%aR$"K+.^AE;T'QHiA:"SO]dqIoC["k\NZ?n/mjsR3+mEg3Vc)Y]$#)r_+a?;[@m#Poe!a1)-Zm*B9S10f*1\CB\aVk-o?iKlS=WJ
%<YS;T2X]\:]f+\_@SS!aRkO_RECRriDkaWZb0\W[P-HnUVe#/>o<Y[mksClu6RI89g1DI.K&15Fl>XI45JDeC4nT`0,/\::q161u
%E]eP)1HXc?$t8E[O.,7nkmN4ARQ&[lPHYu_](=t_q*Pd.(5'L&l>[k%b_11</*([>'>SPX\fVTnYF1j_K2ui=-J?I&&R!L6."upo
%Z_n0d]5BB&kF\0-Xu/4m9H8F*pomt>ohP(j8RVs?rmKKq1ZA"7:sGEZGr]G^lE.OLlXLk/!N!GSc/tYO2m[2V>aD#+MSFVk;Cqjp
%$nh>gUq>KlWZ5#Bp#osXFNq`s8$CXK4m7T[Z!$,=9AsT[-/Z9'f;fD;F4e1>joBl!d[Np<6=.?R*#;0&61:oEZJ)=ML>B^a[gmJL
%FL/dNqUK2aEQSDFYBni=2]igZ6Dn0A"O1]]iGtX5VZ>1@:>cW_1L`g5kBKbFPTF@%_%\#Yrpb%%ZZXqaYM2:W'>Jmuhd3\Ds0UuC
%giQ3Dc0!rYdAloX_M>AKD#],GgFJp%[Q/p3r!9(O%uKH[>4q[`=A/Wr[F$J..KLnPK]XG]Z^T_:TO4gl:M<e/p)5f6W-54*B_4gF
%hnX*5=7,]ONL=FZkqU5^/1#F1c'Ln!/63]1^aiVfW#c9SB/G-bLQ-a=j;]+R2g;m<CYS#g9k8ML9@`J!LUB&,NB5o"@X>O+<h"dh
%YB;=T@<r8[Zk(o;]cbd4@1mAeAJ-No>N4,L0%kV3@/pf2Du?FG("7+:XT2^56W77bii&<@lZ`Rs3ZtKeR[.IB'h;6S<Sc6-_Kug)
%Lm$iUs2;[D_maP\75G>O^o`rW:S3n=r<D'67t(aDf+B1IYmR`19@BmYf9=%13+'5DlSPY,fq26i'M'`5?sSR@<cNM9FW]kH(%usq
%bCni`eZRt$=#c8<>NN(&[d(Q^N*H0&9F5mn@68H^)JH'`C*H$?-E!J!.<.<"3O8PeY&@eDUpiXh#u)a_S[!kDOEu]h7Oad$``fFQ
%cq8&LV%o#;)*RfcORSet(6hI1]+Oo@8_lf2FY1KsU:1jH^*iW,#5\DhY[%7`_6k!3q'4W;H`=35;6gU__Hmt<bXsZ]PVp-<=YIb`
%h_:NC-@1J.iHY8>@L$-p)]&YCRSm*:72=G/-bXsq#QE<>G:l2]$ScT,0d(.Vj;1k"PN-EdNrS!WI$F9Ekl([EImjbTGMMZ&%ol9,
%JI5%gH=>o*f\3J!e+^*,Gg#H6g'!h"_5b!K9#jK?95e!I]%%1mDsNAoQ<^cK/D"-\p/q7N60T(fQV%SF7T6j(_QXhuEJ8KXm)d[Y
%2N?qCEqDoFXAF_@)\Z;Q/5H.IB<JGL/:7hTBS$1N[")"flDPN"WpYt^kW#G#_PG[e9uX]4AfEuin#O3Vf?5?#5IR'\i')ZLQ%-^*
%!%5[%MAN"bHq$2j`tUe&Cna8kIX:r]s,F"%$2XKe$gkG$@+Vc0Ig7L=^$D%S_rB56m_ph_U/Lm$G%cQ!^1[mt/.C7t#o>e;h.<)=
%]su4LGtPJkFqdnk,/0tN)LP(js4qk5g(08<JalfG^!(ibn?a-h]i8q#<kWq/p`Dl-W[Oham"O8a3!29kpMJomc7P#NUUA]kn;C.r
%MtR[_hsY-lq)/m]]!^"#KtZH:T#j.CW3*mihsN=q1lZ;@A5*.r-8Vpb\%AcHgV].8rBJ)`ZaX(HlsJO_WBTlj2`7IUfE-\FA?ZUo
%$^%_kjAKgSJ6nSR:uJ3s\':N!,/4BX^G+#(Lok^,h'n-hO;;$Jc-\`P6k?gc`1e8@)tDJ8,B7D-[\_Z-1!;I4p-j1!)oG7Um[>I,
%NA+sTiY>Hl9oH/N39g2-g8d*C$!$<$fr>F>O3R[*h>L\YX6ik*XH=goY]iCTXaYrZI\Pk+YKN#87`)fEm@NM%e,KZ@p0j`J)h`pY
%C5;A*(9Dl!]!%3<]8EKLaDH%TE!uj)CURg>k]kQ-`NT[/774=#"'of5l<9'd9oOJg^oLNunCLNm\F\*SX.Ku_c"2Hfoa5a_UH#a]
%+V9"CU3[>C%8kS9n@,kIZOF8-eC36Cn@<+YB`GdE5JQ_Z?c##Xp=o1fRJlNUh7QbcIuc#ZY[6]u);he\S&?f^_ID+3&`ML1L-Ni:
%lSO.Z7Jpbf,,ADNK,?@;Q+Y\N@i;;i'HpaJg$OYZ.$jXZ;B7u[4nX_[C2*D9Pe5RHs$`IE%u3G`Ik)Pca&XtpMllWDk>0go'Gr'e
%i-KOmm!k<QOb:YBV\r\_^Z6*]s(r^"A9M*&N`7/cl%&:,b`kV)C"9%2qT8!sHdu`\mt]-XfK3]"^S7\1N,)9KW.jK/./I4G'*OFM
%IG0JM`"2qET9kBf^&K263dKc*?[F[*.E/WM`k:)*!B\YB@OYg5i/#asE""`'8V4=W3fH]ip+JVcTIT<j_9\&"Fq_Las5XDd;HHAJ
%^p-aSf*3$6(<XG7i;1hgE</WJs%GP0"W*tIZncN[Ic:Y`8'a<r=5@-/.&.hX\pH:-dB^AS9D;W'UEA$(De%dJAPa7_9RKSsRS>I2
%kKK^$eS\*1q@;dJgU6Wli`gnH-DKej;uh0uB[pP.P>=Dt\j/%V@K.'.P64XlqGe0ImiuE1dsH;"ntDe/#8?1P)0o9Zg'Qa/9O[li
%I^XcLVh<n>c5PpAm>EE$It*\Nf6^LsrD86c50Qg%s2D]4R!`T1Im'G"g<.*mJ#7b1B7Q3?RZ6&!Y]3%\MMbh4&\aB8T8!&HqHOC]
%W_N`tef>K!2/=sts"s$>;=B00_T-Fe#C'iX[8^ocF;'_`Aoj=PW7DC5-p!6Z9n[<A3Ti5WT2PemjO5%ScZ-Q-R`8*IdbjFM:+)[^
%6'E1(1c7l/ED(I/8I9eWe"KclYa^Mq>_N&*F3":RADH(6bj@IcRH1)&WA\Pkl"*t8$n_na@B\K,E;*G`OghHmKub\Fg=)]^c[#6%
%<nK"jF[LOm=>KiL1n1Dfp2RLN+*Ik5Sp3TmmST3c;JLqpI37Rq>7$VVmDF*[oM+*unm0EqF]1F"\a:04h>VE+g8u0+q!OE!=u_Q.
%R[Tp1U[)Z8h22)R,9&k)V\%8ZSdX_`G3uq*kSI"+m6PB4h$0q]qXTZo@k8[j"cA;gFDq^C_qnO)^Y8"/h8]K90e'52MPFU.b)>^f
%]D0AsQpmcVk_Z6(%V3KXl:PM(]7YP;^mZs>M>^qaHn-kYjiV<>LI@'V+(=+^r3p%3e/SAOEMM4Ns,8\X],dd4SSIJ4:d#6qHgOSZ
%'"N]+\l&QG(P?="!_sar=2D)hZ7>/4U=q[FG`D?G::4D(6eCY2qroP0RuO#P-nH@fBbZ8I..Y%)c#12g^$UD1kdR<%Mo;*]4*h$d
%^l;]<rM]E",YE'NjkgHXq!Me=I<l7mFG.92no$a).q@kmY"r#_2hP!fM:`2PRV&<0(Ab80)/Cj+XYh%<5Wmc:rrU02!m1[um$OFY
%9tH"3[3$PU&5`F><Man7-1H]Ub1Rf@_q0Mj;H.'Pr"1h7bXbFA7i>*31/"WM</U8*RHNFM0PE?Jf&$P;@.J8\6N8&ln*M3*[tEQ1
%hC+gc.1HMjo3&I3"7EO3eL!'?*`^9^0r!BPOKc?&:=PQt+/41C6YGuU''VG4a54W/ENC`Ln"Eig!Y]IFeW'Y`1g79[r*[1-E_S("
%IMaHUAB[t`+,S5)7(,=CaJ^`G@h7HPl7+*Y/&BM6oqrut?>\4QInqlK"SZK0n<oi!f4D(?mgZZs1<I\q_)Nit/+7L.5"JRk%]'21
%O2J,Z0igA#b#nU8j,>k=J[A"5R#&NbW#s%%qEs2Q(o)^9P4V-Bb8#C&B!KYX,#Soi[a4@XX7LY#=uW<rVg\Xr@'c,J(7k<??C>"T
%Y,OnaSm8VNknY3S+B==oO:J"b;)H9om^G9?%+1"0KW_qMbJMZnU,eo21V(pR.^=(tq4BQphp@%&BBa_0W;Y:2#1W>bVla]gG*]:&
%CO=87Y-ECQc1X`()<Ro#m2\.^(Y-fa\u\dg]cFDYf:(N)Xkgk<E`>lT9c'j"]_]-@XdtNRgoVCI?/4#]8Mbmc-c!p"P^'Jt196OJ
%aKS!c#)68=X.A6QhMOP;bcc)6EF&e6$`)eW/O^E-Ss%ZG9O1c#4shM2_=?HT/?6b%YcX%=bJ(0BPO6-qBs^XhPNm:eP__nR8Js^p
%G'i7G8i;Z,9n<0fZ\og2@t'Q8ZHOqA<)7H@CLmC%CA5B-RX'qIn]Z&RQ=leaH=H#>/3aI)TGN1a7uH$1SUAlN([K=@pS?U`]Akud
%,3i[R89tq?UfR]mM+VW,mZVJ7aAr9-'Y?`&M:@-YWi*Cp(f]QY/88RPWQ<Tb0n"62h-OjNX'+aWon5B`l\udpG#8srIdQ.X=QULQ
%D"l7">p9sR+MAW<)+PrKM<b=s_n+tIR4NCsa&%]^aI7rf_\-W]^n^1Kj.D$G([T*.#dk"D8ug)Pq42&?USN+$A-^$I`*24b)9\7A
%F=*oN.0EE\Rj_CMV`CO`<"b?a3[l1WN?7DHHCJ#VS1J0X3mHC)EHFg<C9?>pPX;3qUD`s;7S8\IPV>+p&ok.418l.3g8oQUY*N=`
%bY#RbE<Mc&c-;\KcTkNrA',#tcP0UB.32YPM8t2TfU>X9W?Njq7e=nP"(]>_eU#jWHfLJoLTrCe@G+dE(U2)Y5@kO)D)TD5UemiB
%WJshHW((\F#,k">OO%l?24UnK)$_7jC1EY6eZ-&]OV;Y,[>>;0(q`8795f[m`PT7V(sMej+8G$V9*ap/p\nJOr6RnNVC3TuZQ[L)
%JP'Tb2BiC^7c\&JDi5uX(6[OGaE:n1rme^%^L;1:m%/m<1fqccLfNO@jHN2^]S8O+fkq1/<40VPkoWnsO/7g-O\!1HE+P"`esbVY
%#Zg8^2`b>;[EcgU'Qo50\-#VV=c$GB>MWW<VW6P)bu+8J-d+tV1XAJ9F&MC\R=t=IICp$OM+i)u"$T.HSSBZa`R1Fm.:4oYI!6)t
%)<P27V,,O7,DE1="!NbQjkrZ40r-NXOoZU#eIILM1r=7$GLR5+qf]i@)eS6,XpDJTf#>^Jn_JkIXP(@%[-BZE@KF)17'>S85"0Z=
%&A[8Xi8V7HD)CiLbPdBT;OhNM.h,^rl%MN,LU&rrDJg%>a>"t_mG:`WpM/h9]YZKl.G?Od+pM'a[TX.`!@OG`Um`d6fsl9`p1&!/
%foc2YR5UP5I/o.'fFL5Qfghr+*\m_KPhZ5F=DFU!B3BO^N,qs?)OY$K<;d,3VX^]UCR]7QBFPIJeQ*^c?OjTFlV,+7mWR_*`mm/0
%EsF$F?tkdj5fPACH*9;9M\-NlLLu!1Ap[Lj*;94<jriJq2]L04>rk(MITV+@>l\rS^eN2Xck<Y&?K%N_YZ9meJ)EGhXTEOfASNUf
%1FbG>C(G6g"%Zh,.,%uY!!g<"iHL?j96C*<4XbD;1_eZG6HHYj9nRS7M@XM]>-)!q@b@^b(c^fR"_]O\gXo@T/2SbU<@p&.XPH[r
%$\/Zn0XL7oDbrO5$#d;qj>;lY@jCU8?r[Fclh3n4Tgl4>BV"19@`8r-8A]PPgZV2BObrbMlF\%=&IWW1jhDc_fp<-;nWRBQ#C%@Z
%_P930"e+Rjmj;38O[Q2BqOgs*D1qrMfH)^#X`j*5gV*qL[r/X@C;cD[(W/j'c^TJ?M9ecqSHl[Fq&(Dc8<Jr5J-Mn?:V1tFLRCgG
%OH3lbHd$N`DUi.$V0PKNZG@)qX3\D?BN`fiXOn*m[#KV^n$jB@kEeQbiE0GT=qUCAh=bir^Jk(K7]M-(M\<AH[.05)V="nf'*Zu&
%;:7+=KC(]NDr[WJeqV;=3AQ'@-BU0mlR"(mfaDm.%n0+fL&3FD/dks+,k&g<6tVBH!7KT_WFak.9Pip4m5Y6q,<s*P1-JO%aSj3j
%5E'+F=_iKnEgP9hY]lcJ>=Lh4*eulh#LspT92L<\0Y3UV_j=h,LNS:?_D[8J?9//m/F())]9UI^Y`nl6E]$GOSRa6`i=W0,B!2_W
%ra<gZ[,!bri02&-qjtWo[bMBs;)EXd#n+b:h0Ybp2W$[/^JTEoqHUeE]2mYN5.rp[5Af5(*o("+]'hSX`SMX$c*N:MH[Y5)e&O,$
%-gNjDhg`2e*RsGKU:k[:WePLt;0q>BjjR5kcIU"%ie+AXeP:%`pHj34_ea2Vh!Bo%chjQfB<QNf2N@4AD`i>N.i4-<:PZsDWIKF!
%m;d/ih>[2V?iKc0A:.Wdoe+r[4]p_Cfudgjp)kb&GM\V!2=J;4@EKt?oAe'Omb$rarV#o^^V*"Lpic;.EkV.l>FXflkH4D`nRA?-
%H?ToO4ft?l0SHXf.r<]*aldkkWO^Q,^OB'Alhb>g7l>j[YP60sFm&YQk*,]2=@Y(0T)[pE9,kV$qd/-^Dr3+J3T'7L#A^eQC_H3;
%o`5K]ITp!T<GL[^-3)1Kg=Z&clM"=OY?&E@D#*h_"F`=TnG)DBgLhJ5>4ilM2-)1S4(iAC<I%]S]8\mZf,J(gf1XB#:[YE/=8j7c
%3sYMo,65nk)pciP(rk9Sqg$A#ea?eG4F4R.d(];P;8]gap.f_5>ME1[cI^UFb?F^emk%qm^)u(tFJZ_.n/k\>Ok#eZQI]*S;UaL7
%?ncu\\\$sADr,qE=`mG$SY3Xoah%H'p=iqT2W*(MX_Ytd5?#=X>B^+Da4>mt\1F8RGLl'qU?Za_I+_]`"T#R@USsf'^FVUNDVbb=
%Y'fTq0G`O?6G621(e-O"[;F84/!#<Wrb_74jTV^RY?&BChR!gI2GimiA``IBb,SKkEr(T9o^:,h7fD)B0=71qN1n#BOsu-:>,CE0
%'L'Q9:mW6jA$++NCZ`l>q2!B,B#55!qIk;XH&(L"/*2tM0>:MfebaP_f(#6]mbZdoDnKAjZr]FOBRJ_6rd"GVL+*u^%Z_Gn5?d`@
%Pp:G5D97%km0;ZjmuI=c2s]GBai3)b^d!+;!Y-<%[I*p=4!)a/pjVbMgYI/E+t,+r?SLgP>dH#4,gbuo?`uS;>Q)i4H>GUlXc:6t
%/ar1SIkV:9$Fpcr`+$CJh@s69^^f)knO/)Ra84UjmH`nuZ4d)KV%XkcIbbFT5U-e?=%[?(97":7aH[QC/-[>k-YL*ni<c3?;>#>"
%WH[u>-+_c7l"k_VQ;1a#4_=6SUUGR5b9i]M&gPt8h[P47H_"aJbh>:bXR$XRQsO2CHtX2"3N1Gi:q'hV?/,P?DD1mbB9f(%;1#Y<
%fcRVGl#kX*epNtNr79?>g?Pr4[4L`kpqhep]Yg*/'jrq\h/[5m_g0g\WN&qdkm.(g2GZb?[&:pe@Ii[O"j;8;NM(*:e5dVTrJG5_
%`1R-9[?I7]2XQ[8[elA8:JlQ6G*PNK5Q'5\;#8bH?^."][r(U'm/7sgj2FX?6)V$BI\d5Bf'H2hrlNiAB_M7.a]d@Xj/d=4Huf7T
%"nQT'0pYpequ3#AkV0l3c\HhNFo(;bo)#WPA)lpHpZ?@qQ`PDWgHYVcFM9Wa2Mo&bEWLrP/$tp!S#,_Q:*\D=W\-lEro=!1Wf.^T
%/J@AMQ/b/Al-]6LZ/eL47=nk2gSZaAn6i2Ho6"VS]6=>S]6;p[WIs=\n)3MQTAOe)Y?RLBr$#,9qA/kBcFoD;EH'tZ$kA9l/lbB4
%#$3Fc]!_3XCrtatqXDDbP?kq7gFoS9Q08*A>KVl#M[KB^Q]r;$h.,?6IsC%k\+bsB>'3KPVOj*P"V)bYXn%c2Q;2kUnf)s\G5#)`
%hHZ#T3b#dF!iYj(+23.RZRWV.LCY%m&8TB.d4cBuF<As'UDD2%lX`7#2CG"8o`C>M@2Pfi,u/6dFMP'Lh?Y_P#+MNq'MUVOlHU`s
%%eRf7q=I'irk-"X$+8VPJR>$3)4NJ^d[)P:aN`<L&f=5*hL?htq;TB7`F4q1Q+anu?&[9*`5?7IT*ft^<-eF<Ns2Nr(h**s58hi[
%q;BW;P8FHtSn0&^fJh2(^RP!3BnOuK"F5s"NK6#BA@Q)p)9*KKTOG.q`P<d1#`M;NA*$Cs&qNSMEu`1j9*5Z`pjc3`alu@.Pl^gI
%EFMo6O,a#81#"YWOsQH\Tb"bGo`5q5>DDT?CkhgP-<1uM)daPcE*79Y,T=PrHNp!.C!l4dNS&\Bom_f8Bj!F2$u*)HEV*gX=*u6S
%&.f'3rP+OWi</Q<m>G#LF[%tk45`MjjbN005^K$i"CGMb=:]:5.&'gB_W,c/BE2gl5bBKtDnWd]k1"<s3SLL_cG/7HZ;&b%bl6I4
%F%=eM<o/tLK@X5Sih<?;:Y1o)0V*0$Hhm,4kU#RMjn@9[qb+)A2VA%3IduEE8Hu/9'RKYYo'Y)FQgQRX\';#_2*&kfR25+lPigBU
%g=N!g^AIENng?+jhf^KWe\d.gCK4T&9M;d8Hs."%<1_&Y(F`2,#B#J>Y+>OYlq5j"XBC)PM?^<>%,*(&D&_cu]`HC/g(.QYs6\d`
%:k8[RhYd.1`_-fbKbUKC1gY3)/j^S;#^$T-@to-C6N2!H>;/gYfR:ckiQ^2"Xu<tC?6Th;7TJ6og_h/DD[VKhg#(m--0maRY^B]%
%^%LVUl1NlYI8Z>qk>,)>"')Y+6Ic%fH;Q53J$Z11k0WT_jRFPc>0lQEc(.4?pWX'gHe>3S7cTnqZ8iao+'[<KBHK>g26G>'A/i<<
%Z$A#ceSr"qo_`S4qs<u&\j's!D70DNF6hJ$=#Q"=aaSG'fJ&fh3O="r*Ak6+T_[hr[C6*G=5/%Be)f`YiI_^2F`'ll%VQs1Du40s
%hctpS*utY#pfmrPMoZ&ok:]oP:t[obU5cI=G/KZp\b>6!Hm>A2A\EQ?<,eh.-S/u4'PphL/k3P,_3`IYD?lHX!4SkLf=c,?IBD@O
%prTdV43pR'pU9e&jUW02pf%J?mWu'D*P=h)>hjSu:$62-hc&n5_==,&dj[2Ip3+>kC1sk8;km^mcnJ-]RDDq5HhPH]J,/L=NNf*=
%g%^F/TWalqrjL>PDQ!-.A.2(f])&:J1U.F^^3K(cMm_cgU%,hKn<gUa=l&B"HN#I?Ye4]NlZrd?ct^5tibC[`Ng=UT+ftOkk4+eh
%f"9NapX[Yk%N6H!h/>^L'!E?sFZ`kY5OUf2ash1pDJiJrZ`;DJ:@sij)f(a`O$k2fCaSO[4n_g7ho=)<E#XG;fKSgE]nSuDLUBpN
%<)gU/W@i7:"/LBQhZR@?[]uu!oj9PTb.?lnI"bg5q86OrHgsD(ZaG2Qi`3Zs^Mm6X#qk$8F8h"op7L/Q_J--#o5TmQ%%+Nkh'6u(
%r-C$WW-YoHYgb5lX3g)sMf]OJL5l#oNUs]$o]>KgR/Z?pXm`)>99BKAMl7/2Y]]+]+N*#))0B%BIe^11e80qjIj,PuMt!99<1rT%
%009D1H-WGDRsHB^I+^YH!f^anH-aTQV7*,rm28RbCLDkb*2XhInb(X@Rnqnr.rScO5*a@$mu-&g#CEB*ro$J"qr[=qcZ\PXX`n=[
%L'a5;&'N_"Frm:\Z;4JN=)T-j:#@tDGNU).\pa$7q#jMpC-$Q>bKlN@QUp4p\H&TFVg$I<1>H(Q-[-'G1.F,dXR>g4.hA]p=l/+`
%FcK($[bfm*pS4F+@$sf/>5aulNP^j(=BnMS]73c4rq(;rpCW6eo'=$fG&jnF\GuCOk^':9;#]tN5o+ErHKGPCZgkU)l0iW"hEJ/N
%eM_SL<Aq]IbNIr1>CUe,dAX.T5H;LG:";<ZK?m=Hq@E"(]l+Lh)5<t^4ch6Kc^9%M`-VI5J*"FnOs1GYqrlo7"=j*=I9>a9mulDG
%]2FN:iHKMZ/B(C?etE?gon?s?$GJaZ/2qds=@)'Wq;q=po#\`"[bnT;`ru5sG.lJem<06gdFo`1mC$dNpZ9Lae_=B5]\(pdF_%nM
%cY[`;X1RL(O@*r3p?2:Qnqm8:@HD"O^R%9dqlP5F&9NIV+2%=#mK5j\P%5agMZ3N8Sj#j6agOSeNuqMN(6uDm?KKP?h0m^!O3/iR
%HRP[-fAQ7KG!#3,c_l?/Fh7V>c6IJdF!%!#fi>ZihmVA_DHDJ8EaP7FnE&E6[as>iVcuooHUP$\N+"3incN&KTV]?.]Wa0i0A4P2
%e)ni3Q,iUIB..]4J)'f1Xd0H%ZdM2Ws(e9iDtg]sSfA69c6$9:#NaroI;Ncue[KTkF,++XeubV,o?^4=DngW;L*B5++:f,YE525<
%/H#'=TK=u@N',i8Pb3Bgoua>U6"P-5cJ:EEOWV<(/p8>+_aO+m(5T<gO/,$XW(XquN4Yb#*Bl$H*-T.><),'AXgm3ar:T=1i9#s"
%md2\+nk$Gtbb//VjQPh`#)D%?rlGg:hF>Ar6&i]MpFT=WJiiG92&+:t5:\sHHoD2A_mPlp[eBE)0C!a+=PBpm6Nct!j;.4-iT:q5
%,R,d(N>RA+oES%4NnN65#KkKDDr.X#d_QiOEk\sW\8tm2PX7H`DtSku,*h$M8*f[aUZ.\W04#mH:c!j"=u=b_JTdD0Ui$>tX\-iS
%_9cu:jU?Omp[!O!!Na1o4g47D/<(JNYlDQXe]/:N<QaS&b7u%.lf#OH\[H=+qYAj(g&R8m?Ko@N5&>M%p*=klV"I`ee38!!o%(.m
%G>WXnNJa=HW9NQ%XX8`DL!$[kkkW9^&qW@WI4dDEXZL'-n:7HkOU:p$!*RAAqV'&'2hG''<P3^fXH]0ucI\;O02\/`b)\'nb3"+T
%^ZSm+m"X,nL)ACLNPQ[TgMcQQbH&84lU$.`+%4RQa;Z&[?DVhgq@&\8c#-?tp7J0=ORLNhGK?<234ZPC&$5YH<idKVBE^&?IohN7
%i&Jpt7:Y@`AS(W8$K1Esg:2Hi?c%8>E<h4.MHN<a0[]+Q[PjVkZE0^sHTN(X!HBcBpKpqUY9[LV*qqk00r%.fM,6?=HG04W/XTTM
%)n4EX\ZRGt"\6gm(,/F_\RiN?Xa&.??69:6CVeHj[C<mHk+]<sY2?hkW:uY?Tc\d!+SCmWoTNIGA=WhK3UWD0&q\d)a4JjSTEM]g
%NKZZ\9f(f&KCVC/7205Yb!@]$GL\hVAc*YV[SDD+%gIg^a^f4MAPAIV/)_f$coV]$Pg,QO_<Mf;c09j]@Mkie8o8P5aE,pi[np)3
%;FC`[W>1_Xo6T5=qr[KSa+!#4o?TVNDkRJ\CMWOLrh]PP`TF9Nm[S0LH<O.Y=4u=&r!"uUqt5i@Xa[GSe,OY&@ecbZm5N:6$'nhE
%^XZP;J#iM,\IR,=]@=s^Xs+0[n"Y;U1h`T;mbkPRW-i>`[l.:mIlFILh]Gh59R?1kfF2Mb-mN%5YpmM\3)Aj[Rq(pDb+gQc<gf*_
%?m_Loqk2g&6rgpAkK@&q&RDTlCPV4Zotat6\Y^E3IK/hc$eD1^MZ&%+b,[29KAc(Y_&6j(gaD,rXgNIgcsk'(Y0bSpCdh)?Y.]J<
%J$\4DN_b!6T1a;%7Cs\A.-5:kqL&`tm?[k3nAAO>EN]W;>u#,&]Yc]%@>mDEI-]Ms!.XMkiT<O%IshPWX/#;LAb/nlEhj>^9(t7T
%b7>L%CR_@H?BdQbFW:4if0F"_f1()7.-uiqii6>hFKABbgO8T#j0#:%&//5V:9SSeX9_%-<8Y*uTo&ZNo'L<kESHJqQhP-2JG6-n
%aJf-hHF*M5)eV&j_;?J!&!m)3m7PW,2G5]iQQ(*`qt1:6ltJEPCX<5k#5<\KmsM4<I;hqS`]JTC,([b#ePkq@gj<FWIo1Xb#V>0c
%YeE$GjFC)\%j']D3F4q"<;t\JE*FNqW$=(t5mCVRl9g'gT5E-1b1fYj>tPQ&[+Bfb%[LFc**euHO/m+("UP^N(%I(ag8JWFpon5I
%Cbda;7oUh,e]H8lS1,OcEkd\^XXj(?IqHAlrVCB]CH]5=(OTNbXPp&O]DVThM%WT\FFNjn@sdt'^:!t>bqVHs#$c?TK&_7=\Uk<#
%eGkhCKYM(_^U8OfF0;Sjdlgm6]NfGbpT:O6?97FQC6+uQ=)[MLm^R0bTC04en'I5P\NN<PIdr>?GZO.j/Fg,7,5EjZi`?n6)PTU1
%L=5po\$Mmehf0Ii!.ka=h2pJ;6Fk;+>qbb1T5;!0C/0=d,?$;dlHV,uiWO$5eE+PBMfS^-DEmIRjYtrU_Kpd`5(_Js%-7bp_l`$F
%U.=u6(j[^WqgWM]22GRtUY2Y>YCU\8>rD-]E3<fYpYKSP#rhBS1&-N4/*rN[pnBb.Z7h#4*NSD(Q<@=B;;dq<'e\-=$f=SZ=083,
%lNOqqCPmaGm%S""(0sgC;o;6<9[e+k4uS+4i'(IiM`P1`99*NIm#i#fdS0frBhD5]D*t[Q<.<4mD2m(E'V/NMCtIcC*NGq;e1aPC
%e@,0Q6a:`6d<&Z;a\lAr[hZ:j9@lU:>>l+F9ga;,4i>VY>"sc$W?tnK9m4W,g6Q<TV?W"<ckpBBEZL[U;)C.i/m6Q)CXOLDHGW<u
%d0.BVD%3%CFZ%2l1tcE4NPV&F[RDF1MQO3>>f11F"(5Cm)-=:AefcRM&e3+>2,o4Z8CMF2J`[jd?V*]:3=aiSXY)50L<H%NWlhL6
%FbJ%6eRY!\^o_:L.>Gg.aDt:\W4EB@Y`P;#/t!2VE8+,F7DaRTARegF"-S_?3Lo_HMpiQpib].Z;E7%[g/CG`;)D%UY$i)$a;`j)
%?um-m%W&%#+MORc.lPegD$'t_<Otdq!d(;R2us]e),:Lrf3F!K0E>BDNBaWg^<)M!D.lAW<Y=!l&;,\(d%-n>_YC.u^rR!\8I*$>
%dk9-hA-@\MXoissMm#fVACI50EIe15TR@JSgYju,W@kTsCG%mSR+6.S@8"Y<$,`cI2W+e;B>P3@,BEsS#SO$!(2\d0+@-t(VPRJ+
%-761OQ(ha'E&9_;%BO>6H8DC46VGln1=^O">`M*@0m2bTLRGaaCPdhBd@`O.'NPb03Iim>AI+t'ao:@K6WG^m4PcaV5I<mEf]'FK
%oWN9LRMp:*Ms"hDdj,idnQjf:"kC#3,1u+`4crfZ$EOLe;S3-jW%e!'75#RJUTn+&S&"YR`@gF.9bWV%Qo_ZuE=M<r!WZ;TbojFu
%?#:p82"<Gp-4T?G(+gpGKApXQ/?T)5b:j7I!GIk/M6G]W(ij'M"bb,u*Lg>SE*Lg/&aO\2LrT5iR<t9+9:"X2CbC8<O:qY25j,Sj
%+4>s-)V1hj6(/+>4V.lu2?e[`J:B4Z%uZ6l:')&QF3p,N4Ec.n_o(<c*m9k74fN2i\WE\c?k.(&FI$=<B?Rr`Hue@$)Km^a.[Il9
%A08M,YAtCok9HVF=.p7V1&:eu$`g:=mBo!D^<69NF0qZiHM6>/89W`oYic["D'%o^<^#8[9BEV14C@n8!fBmRH8qt3n"WJQ11TaH
%fh!F_?bJ=(k:DbLVI&G%d&m7Pc\$$%%3.=ma&@)OJ*RDZfpRH&Wt]oQ;r92dmXk%Yb4(]Xa((-8d#O]Xdj%Qs4F;9DXj,#3?,+YI
%CcMGPhX4&Rp##RER_iuArU9^if+lT3lu\6fItM)(pAV2(_V)]9%R#%s\)SFQo49s_e'U.>k'>g!:2c*A`t=<+X4,Aj;WW9u535mZ
%Hg@_9MQ*01f-dtU<9q*nO'g]'Dpj,>h`;eaqP6]RSo;u:@\RNFD2`P-Pc7lZYBg[?^<Cl'UQ.?u.Aa2n?UoC2gmFP^0BVV;hlJh"
%kHOAreCrpP2pWl>qYVq;U[`9VJr-B:?:K_K;%i'Ppu#D)RS/d64`GMm[<qYljWXT'FIOmR>H.UH$p3(qpisOA=url,c6<_A:%lkk
%/UcG7*q,$@n0Z#a*UCj?..ocr8*=#3,7Q<GURM%`auO7Pa:@RY3atD(rVJ6\orhEQk:r;4JRaXUl#%>Cg^H\W-<MH'*C]lcRf91(
%A^h>7@D+fNbS-M08(82H.-tRtF$Frq1a?s%XKsncC,7%e^X&kSm;'\!o?LtnoJN6KFCSHKJ,E:O1j;"lSatg??h&;"bdBEudMcF<
%S#Z@SR.KEdQYJ&8gh\i$Sb'5ea7fo4hEMs[DLR(M_5Y+tUa&X$]'t13/FT(Z-r0P`^)V=lRJg58\GE*]n$2i'o^?$*S+i9e8X9O?
%XeT9t%aLAVf$^V@\/j28^fjE.)s7IFP"+L(85cFqPg;+L2*U.iRcZW1@?V]*ApAI6h`5$`efiX0%`G4l*rLaV7#kiJ7t(.4kOWPJ
%=pZjWS5#ed6Hs_(O0a&UUn!A9S:%T,WVXp2bGja/gE+ZQm^hcf:edMDSR!$.=d'eCE)o>!4r)A2=nKmY]%5j]3u>WL&PXkHK)Z+'
%ktGY/qDcN9.bFUd)2]f4'o,T6-Ts;66[c(q$1ql$8bW#Vr)p`S[a=iO>S2.;c6C[#1eW(DB+l7p;R?"DM>cNsqj3i\m%//@lfBpn
%[iX!:geLY/2P\r1a5c+XPV&HKoI<XUR;c[WI:F)#ifP?%Hi(UK`G=p5jh,"AocUBeibtDXlE\X'4udAZA.LM(q\S.q_/m/'"upO:
%aJ?tbq/%M9lgpHai5mtps0:UdDg+i+Hjr*T'eVXCmishNU-I8W7mCrBSo(b)l0C'3omZCO@Oj$)`"@u?D:qh<Do^)\8="`)[d0;%
%rZi&s]fGP/:7=mS+4i=hD%XObC&6bS1HAlEcYd;nW(YE[Pt$I5dt`(fEFS7J]L;+iF1KeF7\@qiZ6(BQY]J]m>MStsThXcC%gO;h
%H?]ne*/LD`n\41%>e_jg*G7+VV3f@SHhs[a+=d)_caRXHIX4tK\(G[OrIrD`hAI>G`VI"m(%7]RqXr0AIWDWGUBo-Mo`95*kkH*Q
%OG*9$l^QT5?&Wq#UL0\<$9[Jud94b@_gto]D"<O;p.W@=PrPB9HMF#[kE+!JHSj(8E=)M7<p(3[Kg*AJKk-fe6#X&8$9lt\Og^gu
%c5g"E7s#5:X0[A\:$:$Kp.X<9_/c>o<U7\fi8F6bM_okBQ-Oi2W8"M-M`[beqGBb:f'lg"ne7'4JfI:)G6D@Nd:4aP$g4`unQVL<
%(cZO!*mnuLHoW)ZkI/F3pM.l#BlbB\E(H`Sie"X18'U?O(_MA`pqiVR%]dgW]2nJJ*654.WbB18c-Il;^$fCShg:d]Ki4K@6H``7
%O5Z/3TG&H*_dI2dnY^=V_DK7&J\'`>>4?sETLtg,60IIbE>7g^&HJ4e"2V+H[E-[Caun(?mB1i/9&EZnS.Fq+)A,uRM1)a9C49ZJ
%E;$\[c\Yc/2`Dd^;frjKKT=uESsQpOYi2q)6He%?jOqJ@U2[_*S9-?VNK:9N"ug<U%^bhJc4T[[LW=fQ=V'LQqc&NJNedb6;<41T
%eK$09^8&0?_\7q8&Ng!cBXp0OckV"[,<Cb$l4\UZD9>=p/b<d/n^G%G6XU?F(a=``?l1*-"623'&9n>i37&hQ.J)UkL0SS#%A!tr
%k=:QdNom"mH&k%oV!'=8bt!*M9&NBclZ'(=s7UhQ905:o1W_^a;,p`$&=p"Pc"HFq#O94!j/c(*gnT*7]P?5O8!JBl3Fq9+E=<\&
%e3`!#6,1mN>@u4PWH.RpWUT[I*>9tScHtuU<QS\;esRsZ/Y[8qqqHR(hd6&(>rrI,<0spIY8GME1'XHWB3^V%M;Qc.gGn_m2)1^!
%;qF*L)TN^?VAhh#Cc.Fh\j`8@h[BAK/H#4om4]\']fOFpSe8i-)*0dMq!=::"-KW@*._DobRu2ANj<G@cM"F,+n/!ET.r>H5Aai@
%T=$Rc+Cio;>kLUOG+\;/LIr/l4n]m$g*";p@,s[S`j.CjO1L2B3',?#odBhDjpL7uem_:Q:m@:Us78ojPin#up2W7WlbXW,Ra.u2
%lrdPV?ZMZ@R6'hb[5i$T#j7Uu79C9N55`gH*-cgfMH_&t/'62eH^T@h**P2oI)e[C\gH6bT6bAO5[0!`Ap`(tcRM-M=mp;VD&7&j
%@Eo_-Vj>bF8'l9PlcN^7FTsdcEBChNMX7e3m9C64Ge;!%3qICYnENQjZ/l3ZEt6Oi3@f5V$qt)=[u?rVcob-`LsP%g;^N7Q3aVMY
%1"EM)cUlfYij!Rs*+'#_\b!8Y"u?b.l?.CM[W"Bj$*!#`r-6uDNUtC>NWDpcq6o0m?D$:0.Ms3)8&A3BT18f3mt"S#p.[ka+X&nZ
%OfO,rG'41TEA0hOd)h*2f_Y'WcE$U;1Ro^=S$oLk.@_Zb\Kb:<#pA#CDME*sK1WsZp<:Y3>Dm)ehu%?V4q3T;R$LuS3XBld:tfKg
%Xi*qW6oE?pl4LW7OY&a]%.7!$IQKDo$%\(NOmgYi'B?O%o)h7g,ag2^><AB3\dqrG\`fCCAZJO_A%8+1H1#urkV-^@!+AcI<q2h#
%2ugB5SE#rbH;9S3.J/'t^>jH)'9W\eFO::jndhJTk`rB'7U,d>e-F6r!N-FBAUnIA0eZdoOOW7$,36jR1o(TH%t;%T1Pf`-9\9E'
%&"IP+o1dr$H_Dj+8WI]7?R3$.\93HB/+22$8f,D*RMG\!+I"nN24\%'E6:FFGOf[u_pb?7P\CI#bI"DZPE1FcZ9f:f$lc,.JVu.c
%+2s@\`V%R24PIIuLNqT751Y#E=:I6N=.,4,g-kf_Q(lGh0@Sur)RQl2WA9NLb'HjRKU@hlD3[)280OQ6"VIJkcbEdao5`^_gQnN:
%ZX"Mtk,PcUW3X:$ML-N6j"R!`8Os)M3SBuW,`K00<8l88]eMP\a&U0B%4U<h4=5@-Q[L3ZD<Z(QV$`6NP`("EA[+UY>RhGh6Lamn
%SIfPT]R2/'qFb#h]\h'h3U^U;*t?VU[KrD,!l^q)dWt?Rfrab)<5F9M6?E_1(jNcP7%73g78'tOLUm[g8iu!Zh/b>+b].h*JnGHg
%Oe+WFTAfb=[jrZ7ORBG".&p0)kP]&Y(,:u0o\@g-.1#"*2#umorb"n(.#d.3CJKV"+mT!iR0m-K\1LU%au^T4\_mrZN\X"`OFoQ+
%1qZrrlISlrR]%)IQh+$1C`kdq[RKj/rVGoA/5Ifc8Ggn>S#Me_i`E\DA35Q<je6uaC(&d@f>ol<]H[Q90X_Jil9M1?",,o3KNeFa
%nAuN`70K0>9WXInKY\;'a*_%X77QahC!*_tptGri=!TXrlS?o%L+UC)X6nQI6P^8#gOff,GVn4dqD`h[I`.Dc9-;++$!M3tK1C6#
%EXo@3D+elUiB4lF`;")e#kWWQ<$31e6`>U2i"2m)KUfT\.G@C$OY*MIpm]0E@Hqi6s-0cJ7Jp&>;T&TSgD5p@VPrZ\5R(/g":K:R
%bEL.:Nk?&?4D&Zm0W56hF0aU(Ddb'jAXf.3\*PW`[[4\QU,ZJe*hX1Y!UH+<&uG)5e'KX%S8>g)4,j:=*J)q_Gt5AJS%_ibZ@.1K
%:#4HPd@kXJ>n(<IE6=1b*t_AXUe)WlNuI%>4;-9H3\Y66nu0LS5.^2TF5LRqh*$Ea&[(`([T$<XqJ#1+@D!-Xa7M?[.P<]<Co(Y1
%KYq-%TGFYJmt1&&(^=1&g"-Q)pR#:9SgjSP(mg%BXW0h%2T4XCD%V1_2AkQsoNu,VBVRk(p]]7BXEnDJ2dbXEfS[0GY'+XI,.#]e
%i&=;-@$b6<eG^N2T<W`mORE)-5Q8Rdol!(pb<Naa2[c,op&VHe6u5/S_?`=T@hO=CO%iqh+nq97bXFq!*Hc$GG[1?)j-\f=IYNPG
%(HuJW0G%fLcnb%,fH;.`.=E2p2L4e3'fpmE,N>aKCsGQt/6'V(#>FC*0]"\k+RKRM:l;Iq7$ITb/7V(d-rO#&7%aI\U9Fs%4OZX,
%*$`VJE3/4CRQP$9G:/rWe^;ooB>A#R,)#Ksok+"04WS80'bP1N'_.!L(JDj^-&C-:[G61B5c=Ygb^hK'c.Jf!&(qETF"KlRoSHtS
%m'+6eUhffYj+>E1V(M9BO;g0hZP^CZ&QQ-=d_>A.,A$Fd,!t"+[FCV)4DKL\.`50KdUecL")14r):]oL_G<bXfc%4bPn]X."Md\^
%ZF4V3(PWgdX(U2NrG4IXr$7h"+gDAE+p\rP(Wo<r(*^cL56X>$<VKU9SoH_<EXS(9#_Wdg#mjY'Zgin1$qQF,2AESFreL6`iaJL]
%n_lCa'm3$.Xj"I(br,;2D;APC0k?"&@DIO?B9mO`+/:$/M]<8QpiBWkVCe5+aQ9'@f#^2@^rAW!.`6$65qU(`Bo"OH#go#>b:Y_D
%dLg=f+[%>E+fn[fPAOLG'NV5-XamNDZ%'KsT&plpAS%;!D;).(ig)=$Xue1c).,.J(,Nsl:,(n\S5t@L&Mmto@8EdP1GgU/m/W#2
%N?Km\?00LH#3I@3BTs-t[=F44C"jL;?C5kD,bGeQ@kApeWCnBLQY]>_=tPt%%)\#.+T``+jr6`O(_T#co#e30LGE*?&7h3uNg-%=
%,'4Km;.N+,+\5ops*Nr+B/l[[*#q/en9k:ibNVX<,-G5s<+Pk.VDQ(;N;#lRAJg0/i):cONbH?fiO;GRSn%6Q1e"@#No[NL=//LE
%Q#D4ZKtQ57Oi/\:!i.N\Tgrm@GamsF69Vnl=EE)'C,HmDbUoY^i36e7quoH34$rCWXr<*+JJfS`]7s%g7KB5qo^!IsN=6Xhlr`:1
%o8rjpX_im7O>:9Y]2.IjgCDHa`W=I<Kr#.3:+nq<8+-(?[)D.5.@`9uC@F'5YNg[:aRfjNj#2HB+mS.jcA]9kCpb*k\1D'IIGl8r
%`*JpJ=j8u3:HT":n:GnBUW/!/4L4a)pd<DVF'-:%@es/9dUo*"Z^th`hH"`AC@+r#FAm,h?AQgB6pi.b>abaD!MW?3CVHAp(eS!K
%4JLEhbFJl@N9JKm//hTa)QE*A&ba^b7\>%^2bOT,*Xq0H.+3/DfE1MC)MppMiE<mc@W`*Ka86kML<e2R_DH4p)q"b*AItIG61W_$
%>:Em<1)TB1+*h5@o]&WlFtrjlL`.<GQF\f#)0TY`Oa>;7]Y+NV(/1s-NL`3L%DP=Q;S!+-S826ckHoH-MfC[Xi@.!T#F)a:!8juf
%LaF1lE_&\,kDc:9db>Y5B#Z14=e*7W)U:SHiW!>[`b7>)Yc'JP'bY'[Mr7k0I.%,pGcEYH_$7b'^tI;!,t6"%_T%\"["YOTq39mo
%:nSR^Q9G[33D<Aq(>D&A04R+T'jfp$j;IEeL$6,89=T\;/tg/6O6^O?Y5@7FqYMR,OWH'.gi%:?jP*>AN/`Cddf!)AQ9X9'7t[T\
%1U.=!#THuFb0)RNO^I',WV\[eL>@fUZnD(aq7^8<cBotFHln\JWlKA><g#-urHL'`IY[5mhd/3Q+iUE"TBtaQ'[U@Dg%hpUWhBOq
%D^eQrU6fM37bl5j!FFOLQb,]4olEb^Sm_PB?7oRQ^?oDGo#%-KYkoHDCOLP4cN5):&hY"Wks+(%6O,;??R%4aI<5+J@StEWKueH&
%:hi%eb`)r6)OGf.I,C:7K94*0q7'['lJoU>fmc-B2=Q'SlZ1n>2^Y8Si]foZnQgHKA4*q.FMdkY+3c>nBf'64p:j!-^K+SgUb#=R
%4sVcT'`#JOYX3Z]<J6_]Q\0;#KC6HlLgE]7q>p&9pM9PE^NeY'#ah20!kUu's*U.WpH=5!Vu`%T4EUHUc[!=hR^q%ZJT+j2kddj>
%970gU8k<f65HYbDn8[4'2gmgG4n*oWlZ1n>p2pBAO$E%dabn5uLU;;D(JGU8qUNS#E\qVr75)V.Kk8$>!TbMhrjpf8nnha>l#%r%
%MiWe8S3CieR/G"R`PArAj2JaIX!clCDo9CB4[AieRn?*Wr1/7feP-Vac1)M$RT@8P4`E1af:J=ULj7O<i$fg:"K:u8c\if<R:$=a
%mV:.m+_a0t2=Q'OlZ-@h25VM#mS&!P]DqJ.)E:/R&pD3Nc>;eQ_dBgmdIg+miYqQ9\[^?\jP,-OL#mDq>g7H-Fj&N=\/m2U4Pr[G
%q>QP+He>!7iX,c;5Mq1F)"hCd-K3\]'[2B%?9Ub8\T@31D'2IAj?$\7]1':_IsMK"o@8MVMlXh^IbaY%%3Ei>%D:TX]%koHNEJO%
%9O;lE3^tUh+mh%.!?dpj>XP7%nC5J`0+ZH'&\^-W'/oPDU9Da'7)&-Ubs]YZ:Mum&j)TJ8kA;:sGX#LC]AMSYf!h"E^)"9eYJ)QB
%JMQKK3,EUFLfq=P74n*%*0]T7?q5M8Ge;`_npS356J@YHI9nN_m+_DCReZE'f>.8@Y026?hg7B%&pr,H5GTMr(E*cfHWR:,_IIcn
%4!%Bn"(Aq95&O]CRHnUskdckJ;ALQ@Y/Ubccb!B?foN&C`]`3Q(]3p/Scg0+<*p)i&E10ln'^7&^g'3TTKbZtYNJnNCPBd2JPQa'
%^IWb$fDEcn`%Ti*kLF%<s'fn2*mUP;hFa.2rh;&5`ldCdhtu@]o`?J_DFQdOZI[6&ZnM:WYu.Lpa2"`"p:f<6]'&N2o`BSKcHH-2
%hg7RM+7L1n^W(E,Dss``ptu,>J(R!br]gAV5Q;7X.G.5l'5S#W:RMX)"!SQ,fo`G_'-FF/j^kTH<"ksOWhDqR4=1+AM,,:,R)&QK
%3@X/"arF7kp;,`H@ZM<tFHFNU*-ghk.h>46!(Sg=07RUG2<%U=?R,CH(E$qNf)u'X$(nur!c@5ba"'14\"nOQ_MH20?*%E*TCnG,
%Q%VYl.G<ktU`*AHne(ANqa/s;&3U:aEEY-&piu3m//9.a@3j1n=cI0a.7hYf?l_qmr01!g3SW5p2/l,E[fhC=[Wm2J!Z^\7@2IUR
%Zf@:U/s+LRoedV<BbG!k1Vd6:K>='W?Rl658YK*,Jk@PBLm/+AI1bAS;2.Q6M@HOP?t'79)ainTU6V`H`4n[fV^lin0XR?L"N[Vu
%C1jqa;N]UC;!f5AWA;^#FcjpZdC6o%+&!(ce&*kAiP77q<P^HK_"ihaMHE'=/XsL$<YX$8>8Xm]K]g>@0X@_=H.shY22V_Q5+H94
%q:?#A>\NT;FVYN#64o?-T/pmm$;talKo(1Q9?Nd'WNn@;>24;#BL,PIkb<I-BODWf!'fh=fqK(0>*e5BVCZ0TU\dY7+@h^X@)NC$
%GH@6/KiP!O(s8P'$WQAU5!P5d/H51K3>UuTK)`Qfn(J$ObWcG"Vhf]RWos4>_pA'bOTJ/>(SWD``=Yd@K6(HV'jHL+gp+?B+;,4[
%D\f3F@hFd#$?2!F,iJQUMFsC'j]/T]qZG3D]a,RI67u-R:W""d:`"MI%Y36qhaJ.OdOng%X/o\Z_fKgSR!tg/QM\.n2t(&'1F$G&
%F*ui7'o(G+TY$08Se3C"a\"-L(=SpQd;'1"(rbI_[B'!*_pD]r1\:4Sqd3&%/AlVc+&-Na`#_]&GdB.IhObkm<hZIUbJ"U!LqjPE
%HBG\g^8cCV!Do\pqQ+)D%Z>=-#n_G*&;[MpVU2NLk86e6N'aQf**CEV';nCrb5S1)3@-`,?b]DnD-2cJp<pQf,cU*j&N`qm"Y9jR
%"F_'_[V_]S5N)>DRaW8#pg@r$Mnp@4687Vn%1B[drj8_Xm=W\);63#@2]c3#dSs4#NXt'e2SAKS"oEG^0[qF3#jR.#T7dLoeM^RN
%_i`bM28d_&!`+>f2ruq7Eoam3^_<B";*B9M@e^>]Pq3qa"&]_-UeEpL1i<!j4=g-*#\F)iV6gl>Jlm09AMA1'*f+bf/g!Pfpfh;,
%X3OMkk"L;)W?2bqFc'+!hEpJ0'a(mRC;Z\iX!q^Gj-5o^nA@H=6&N7H'rn5i/j3B:8RWHf^:<uLO@-,nJBJtE>82cD\^'!Tg'#l3
%7>H$N9(=4l.H[a!f)W"l!!/7'`'6st4]*J3"(@t[XcXHr#lC;CCG3NT(Gb>U.aC>^.e#>2@Cf",BU;8$8rHF[I8[7(&]f3W4r;?f
%ZRb(MC[/-,ZA:NN^_^6WRu#k?r8p@O$!$Z8I$\oqNo3*(9hugaPJD!IWmV5aCmbcEd^6#E+'tV*&Mr/QeZ\gd-:jjs*tQb-G\-Mh
%TnJhkh)#7bImYt'/"oR@6UX<S=$krGF!LpVR[,Pf7mK1,$X6kqn=dTGi'UK.OZ"4PQphdo*mok@0KCb_6o:5S_?=_)Ug&pgWh'9/
%L!(4ld"lQ_Hj1=bnS0"n6>d?D!/Yelg_5'p[X3HqJ=LF36FBke_YP^BJ+WH_K^on.;\Zh6iTc`gAo>?s<<OcY4^8bGOIrf0;W>YX
%b:%`hA@j8,>ojSE9;m>O3*<5l7dq.uZF[K"kcms[=5oT0hVie;($.Mk?E>5h'S+1P@L"%VKBaD2.I.Rk[a9\@&a;s*]A?F!Q"3S7
%#Fu;U]Ict7LT&)PdLoZ^n`=UURtEb2*AGa[Be5,bQUajGdP$``e7geHl9huDZh^*sT@39u$"Z4Sn&b6ZqJ`Pk@/-%:.O#h9kh%I1
%Q%]>#f4gd;lfahQ.d)@/G=TSLE_TdoXqYIRZ>(K:DD^.`l\0i'l2leQpe^d"Oi#bZRQ)t$/X7Ol8?UtjfE5/1mH^ihBgnH+lu@p-
%8O/G!)Yc)cM+"K3bZTZ9;EAO:iR#El<F$_a.aVCZUl#DGb+>h_TkIsf']s:$X2;c^C@'II5t'EK3ej]FeAAXq'CXAII`c\g%oI#F
%liAs]fuD5?73IZV;EP86)Yeue,@K/o/RUXoV'M\,/OR+Q?d-36!SAsdkUDSSqboI*>;RH`&V<U;0bm&1W$s*B-1"s);C"_RRb$q(
%A`hDV^$S!Mojt`Qip\D$R[eDmb4#H^\!/TLr-MIP,khm7>=hm.gQMSMUPQCG+)C0IF$NBML&i=&:M1O+PCn@B7JK]7\cp=Km%Wd>
%(d@F/[9^bXKJUaE7W&*2V<Rc@gi^KgUTA&u?WE`,-rN@UX5):=YOY5)Rdoe=q6?*AZE':##./8<[55ulh@'PKB_lI@H0LVbNqJ0$
%""/@o)dkbXX&tMs!Igc_\/5(R<:q9tfOf`1f9Zf9FbMCYbM)A\b4+&oVU@$#I+jWgXKp/:?":t(-JIV']YP$TBn./'@`a]XN+*Bq
%%RjU"+=M7E<jKg*^TCVc4`Dpk_jdTdM$XT\=u>>WG4Qq2l>9A+/0PhgJ]kW7D+i8EhBL_h:*$8$*f$I:SC'/\Gfs;HmV(]Lg5P+*
%033JW5Ak5`b>kQ!)]o.qX7Rf;4Um=*kaP7-BCW[3)__h'o+W?o9+atEG7h`Z0E9VOFA=NmjV<\g/E-K5<]T=dH<E<`*qU:O73P:N
%!YC29(llZJp_8C$=hQ_&ZJg<&N%lNCpH>Z>c#BI!do0^T!t4Cdiu7[n4j_DR<<^@S!NlAt)(p=0%ld)OW<$jR\lo2-S/;N1k6W%N
%-_(n_HOS,!%4#:)+qN$@BIr#+R6,a46\/)'<R;LNJseNMSkgIq\^)FE.3>/oiB>C2j-k+G,P^Bm%JLpQ#?N/jCTDQAYo0`qQ/>"&
%Ias4\CFq<ZQ=uG4S<PRtnEQGFQZl2RSQ[;87nAb+.fq[]PBmlSK(ebR,s@GO"F1.219\alBBXZ,Vs:JsEU+GPX?)Fl@cUT)L<6.u
%J&%WmJIaT)`%l.pKb%0fR5BLjg+DknbhN3m37KD0p6l2NJ'j+>T)F_:Z/DF`_Lq;47M%WM1nrum+,`:I))0)D7$*[qp9)NHkiEeD
%@O(V4UqliR9irsc*M<;dG^+Y:4L>`G+\5cU1a]('Q,%;`-h9X_oScS=He9+5#.5q5BhqTi7X5ltDJ@Y9SsLt-K"LJd_+RQc[*.lG
%G#YGdiPR@27[$XOAGrZ8S=sRmROEfn=[i45T-DRo<Fn^b/kE<HB*IoOP3jkGQk.S;WfiM1kJ3l`Vasp'fHaBg_K;Y5?HB4hJTUMf
%'r*4./:nEtNagih0('LtpDW3OOAlb4TO;2=C%ioe>Gt^$]o"Ec1e+[&M\DfXDJ0B:Lg/q2K"\X??j"]h>,aE8<$oNII'MJ0RR]!+
%%hmSiArOh(m0@/_bfl`hkiFLT<6-q9DM@pDoA(!(`aSK_CKX`gQk<5:h3%<lG0[T-g3=83WYEuT\$VRl"T`EB*i4?pV:+I:&Llbf
%F4DeX/uS20(W%4-?,,L!q'):!!h"dbaa<*e1i4Bd!NJhanIKKQZ;`jSpHSk3A4UOg0!8XGNH)Gm:cC]q;!q<S<#9YS=_B%@l_K=?
%ETO[N9/:_Jj;p8pPMtV:V#3P@IQGGVUZk-0[oq$rG1\^]PTd]0/?83FFOh9.Q6?bd;B*1+Bc_ea7JtUkdoW=GhF'Z;r=HgMWri+&
%4RL%fHo`_pcb2bR1H$!9JQ2^TI86S)W8JLSAr`^i.hCl`bDa4]898A4_$XQR29dAJ/;oHXfV?1lFS#oA97&-q7fk`B'%7RC#dQ0b
%_d!VU?:Y1b/S!b@PY,He!r/l]6n\`$l&In3SfLdQeq'M&E87$rKB`0#%aanp;D_)L0sGM%N^:lq'=5OP/2rZ3Pk?pegI:2?-Z6(1
%[ah_8,XVdGD$@IQXC(7L>aJngEa3:QeG35Ai<j,6kZHGW%g:M1j;EKRDJJ$`BX"9?5CEgH4K$6M[Z@o<D*u7r:8]#f#AU-EW,j)T
%QG4\mfd.DE\tQ,VBs&mnEeO50U[StG\4&(4F3(6P(^M<Kjt.E68`J[';pFgR/gark9gkB>IVFoh>eHW(;>?<uFh3r/04gfDmX:&K
%4OTL2;RS/;Gt58@_lQm9*Im=t)J[Ts<N\9Ro0Y\6Hr][>Uc0`^q-o!ZO&iPjQK:Y7&&p"7h$d>*L;=PA25tZfH3Y(`m.'1C=ZtL4
%F5SP5V8/R^f*ERs!eh7F2(VMKZ?&Qn0.BtE&EZ7RnPH9P]VO[)g:;rT;`Z_d`^Ai2,.l"S&XO!l#S-k"C:B6&VT`C*XD:Ig7W^d?
%`.IBh=%+eZ`AJ=p"5Gl:<T7kGY^tl&D]#QbR,RhS3bnkR0hJ;76V??8E&1+n>Y#jNlZW*fPfi,2-Dm_\\CT`a.1>u!+pc5L;+OQs
%e]"J[i"lo$V>HA_H3dhL.k<,k%g.g[hEEU3$Ns[JHOrPVT0bDs-rYmLamXbMka/"#Ig@9^DLmk)U^28T9#>rE6A=)gi'X;.k(C1P
%DfI!O?8K$oB-#&$)&9AtG\BKaL(\CeTs2ja>Xo7"-UdL<*X43D89d&*CDGmT_s8R4B:'C%[@WUsI@oAN';`B:02aUS<&ic<j3p7`
%;m!ZQ^k!DEg>T8fhrefC;$l&MCRdZE2mA+I:"g>CJPak$DA\sn8B+p8E!rr,Ggkt^@":REnT!"hq(Uk6rA(SaaH]GDg8\&V[tsM,
%@QQ<NPBl#2@?O5'k>XCJfIc*L/KgeCDZa2\gH.A34!8%,P5m*/e=uGY@Oqf>PshraOs[Kel)a;!HHB8LlES#3ggX1C_7.MDMep/R
%G\4PT"%#6pf&BRRN;A;rS(B_1Jb@mW'i%a^q)OH@U$6d'XDisnQ<QJm>W83s/ht>PLLu[NoQUZTZ*aGjD1O%&Zb?n8W`f31M5]*6
%#e#uomc21-31<+3$MDQiOce[=QT>T'90oghhkU\(<5u@S^;)gZMHl>3GY^kc>*I`C]9VtH/cKdFAN9W_Z;tM3InJFaN#bQJ\ahbK
%'gu#E1O2rV6j]Yf7TL.\K7JZMZQ7jL>5]X[\R'AXQ84H/<@=E>/3rBbQ!,X0+aT!"M&,f+i"TJdLRO:.:21')WZu6E)0$V9'bDKT
%M$<E41:30G-W_;o4LC#5jM7,R=nf]UTSQ:k`QGJj6k6jFalAJocC-n;*;Wn!>S=rT4KC%td8-/7_OcnTPfG1$Ge'0VGu9Ltaj?h!
%3O%GsmQL&#^qb'$lZs3F6gE5/%quQgq!2r^$H)?0L<+XU,"NaWTe?h)Rd.,/pD%5#>b8'e?W_-k9_jdd+.Al0fnEF+<&mFkoocs%
%p_f(@C\P>e+h!J%W6NZk*XG;RDs_7NB8!rk=Y:@T?d8C5f(UuUQB^.0aB8q^X7njZI-*-4WT"IX&rr=_^6P[^LrQe&\s9$(jsT*$
%>q?Q]f!U=Ch$2?`!s*485)$t*o1dX:++8uk/YlC\bO]HZ7IW`UKX(>c$a23oTE/oOap:'`DFc5J7Q.pL=fV$oV;s>0bqC]HN#Wan
%M;b1S(<l0?e$(5L6MBtG-!e]Y*@\5QlQQX'hh1oi3)eE^UYXsVfTd[241h.Inl\K9&Q]\WKlNsCV2$$0BrX0)9nqZk(;1FQ*dO$+
%PTQ6MMg<R\Se<9IXhcRD6>P'?96:LQO(--?\6qm/]9-3fMF&mtRnT]B\@ROboKrrKUm-!8N\ElpD=WW!:'8VlR;Hm0q*e6sXaM'J
%@qdaWn@fli4&Sc-pC0tfcM">X"'\/2iBEH*#k(D#$iW#]q<R`.#`kVq_Hih0N!EKECX:_J5=@0$KH6?g.?P61Xu<r^,[qIN5=t[I
%IPF9tOirM0Su[`+EkXHCb!AL-0LOoRnTYW43A@@eXt_E_`?@?i2<pDC"t,EUG2[lngj@1`OD27@43#"BaLPeN1Tk`riI7\(hF1/k
%N0b9PV9kchoA<Vr."O&*iq94up<2j'KPT7&=Rj#g)ON4!Dl2U5c$2Ekp@e:n3B3NCK=V;rE0S^,8EH^+4=[!A&.a_E6QD%oHW=a=
%#4W8jJTIA*ZA2,tn8f^Ilu&SfTfD_3g"n9"_BLBAEM"[<Jn-:oI5-ET]r)oq7;cV3\&UiWG[>`S]gEAQ6GS=KK"SPc&os"tf?4l#
%0SqVHj5TQWLai^k*4re9.LQ=m3E8F/=[t_K$V@S]K>`j8QEp(tJ8C=ODSb0KV1#meEB*q=jebb(%22b<&.Mc@0*P`N\qE4o>V2H7
%lFpt'm+)E'ru-*J\Kms?iN0-]KJ?0dGdEOXTOM?M`rX8>@!h(!M*2i=m+ilK^M0W/#Hfas5YX[&&TI#oA5k@!r]V';C"_Nk1bi.s
%,+Q0sQ,A*`mBeJ?(q@utB<k9/n=k14o$tY-Pu#7LWL4\"dfmM1_QiTDAr-?tfg'Z``\e=?W4dOQeHt@])WHs1aZp:aWIpHK1hIT/
%oAs:jmi(=IjM9a'$,)5N6jjt/4FPr;m,iq$5aBo<V4F4.;;`3M+epaG@pfp-7EBn1N;,gM5>6[DI*.d%R>+Dh5)!Egp4-E`Q?Z/,
%i,XbBI^`.J*`kcO6kL*$X93LYA>ohaPaC4ujh@,2JF;U^d\U_#[mc6Z.HtVUPj[eO2;>X6GW\HB])%m"E-?T*:qaY.H1W!FG`u*l
%L:sDW*`C":+R6qb.PiJ+)&&44m803%;qFfn;s)m'>;.'DT_J&\-s5<+49pIeeW*Ue"O\k?ItXBf&>EmE'i&"N.=(HrX[R]l4SO4B
%Qj$BR2Os-A<Wndk@>0ag#Y1+[kfY1(b10Fr]10F3s!dNLZs6XT%7H9#iefjlZba%R<Q(+SRW*;&W>5O;]:")+D7hJ[X#_B<h\R<8
%C4:LpVO"2&JC.!oo(Tir]&RPjKbX"bL""8+abs!6!#>)@<tulI2E54o49ePiP8GC`:*<*c3X)E0HITV:F$?sHEAldd^1j"]?WQt$
%WS63d&2da(G59AK92s:X<L%m<WH/uu&]7qLO7V9$CH=KuV%pt/lFQJ`%:7E75nG@)!RHUK2;tVFH7.;^coS-WJ`Gm&\?m;K^gS>l
%p<>Ya<DtV?^K3uk<Eqdd@)H"(^kPK)#b?5)h7Bi+\0?r)4GbbcpaoCdOLTfGjVUE0L<;ho)@q6H,$C6]CO$F+1-d[%ZsaPr>@gSp
%`cW*=U:(.f:kdZ&6;85H.'Zs<JD/7G_Sn#%)6cR;=+^lYfl_aG6saL)Fr5B,.5bsJ2Z!'OLi-5fP/:aR6\t8:'!<#M[\-h)#'pA[
%P+amT\LaC.RXEfOX2m+L<N0M/a5BhIcAIOQJrlPl>A6hV;,KrGhtk9/8\S7Pc+$e'%\q6c^YbCG?iR2ldSQVsUXG+PhTpC[<W'B.
%04h>'M+Y"hR:tP$oH\$8%*UfMfn=]1OFH;%5Wt%aT;&J8V(_c?Ooc,8Q5&blH&>D8j"(%aQ&H,]iU/)-*Mc$fB%[4s$1s'&5/PBZ
%OpDBO6?4bUgn>!ZnY*B9715Alm'hcmc:NT-^_oS.m_.2^.s8Ye<7s^=`!Qa+`sLERi&t(B$1aKl=<QAt'[9;H5G`t.;A+KoUh:iY
%mTs&-XV>g[+,SATmRL<_`Va$5j"Hi:9r1i#Bf>=0=!@bR2)sq>a(J4O#`7"&>p.Y5!ig?qmI-s.LfW>1">]iHjY[E-.WTj)U.)/m
%@dP%T'[\YELnA8sgi<p9mp>;Db2,Qh>tokP('YBt^pW75V@0;_Q13E;J=Rp*oo#C4qU:1B73mMR#6jDBR//7+.X]17FUDjh98n'$
%Sr'=Z)nnsH30:b7<E!)jh1<"\DjBb+,9'`l4%%Gj=<_W<Ps59YX/>R,+&5sZ]PY2U7'+2%5Udp#Tobgp(C_Z#*^V\$7RRTUE`D#Q
%;8C-AWsKtpMgS]NK/[9_^i2n\'@OS()i[-2W3CS,<gO8:l_-#:1,L_Ej9(V#6\8(=Nda-f=c&%dlH=\reSUF'$!D]eG6aXFV5('@
%)_#"#ZWf!IIYsH>$8:jZ8kZB,ic;k^:_hLAI8t]Qni?GCUU3HugoQQ<@s/<X;X^>`kC.nb[S]<j'o!!&/_i`l"j7dT>K$!Z>o!,O
%LfRn5DCeBif560^X,;5\?H;HeJ6cQ`a0%\7&]X2k[a4D7*PaZ(MIrYYh$fn'0'WR%5OkUGKkIMq(-j[;aA`7J$&tV]m%hf7AW5h<
%l)q2(/f172@BuM'`%!a/?GB]5)73?7*8%8k\SFfk[fA_tL*f@+b-;(Wc8X.`pkk]l.MiI3;'@,E^.<0>+"M%EU+eo4H&eA\",mm4
%hl6n?OJdNR6u[&o'TZ)9^dcNaVId(&iZZ/*PB[f!V8VQJGs*0D^pt^/;5q>D@NSit#3:V+TZVe[FugIL>C26hW,S?oQ84\u4hP$U
%6r6#>TcRdUNpT`sOK.A[$7p85KtLl0PG]i"O:Ncgj_t:]]MuE\3ehV*ba[S2,$QhIPU8,(7@]]!H:2:XEjodjYIh7n<jt?^/GqmE
%qVE!&n]7R*D?%7t^N7FR%PE__645$SL]&S*574mQ@>n(GX)K"%@LV*#\'^nci=QnM'+@tSaZh6B>(kdJ;V=Ci7<&T4;9O\*h)C1P
%UAk?@*o,lh1%S'$P7:/-,)YJbpKuilDAB"[mN:JHaD[O-[q3-U^kMek#nOK=Q4qnN^K"k[NCM`RR9>@G]C);pd=VEI$NKX.Arh0N
%rhHlj.p\q>^T9+]<;=emleuSC$NJes/qn5R;"Y&bB07m5rmC]tCOrh]hlk&(k`86es)s=!8)=24jMHDZ)3,X6e91f+=?h<4ZS!"2
%bd:Q.H@#OSON8T:KajTU.hb_f/#2nt;E4->Z;`CGPU6Ec5V&fJ*(t:&bc`;P8l$%JS(K9h^C<jDdtt[B71nGY,uKOJ3DrNe:6]5E
%&!AlUBo#;scmK8m07'iVlZA'_IG#Y/0lU,s@YHDN:r'V^6m5qJCbJ&^DW-Ib4"MYZEDid7*OP\L&7V'--Ku/V[!:i:^(5>D">-![
%"E93=p56uG\F-D,Q!t]M>F)N7dpUqBoD[ZqPXB?qmb)54r\:Jjfh-Qj0],)_E/^M?`^AHZg]EUP[EuUF(!pdqffa(NU$i_2ia)]f
%!]P5ek*+GT(1)Srj:pUFQY\-9M?nr-j%;+M4Ei*05qWau3A,'(CEPBOlLoj4#5c\tge.iWh1Ppj@1a+%;:;b/2p?JGbbN"b`-e>-
%+mWkY]sJi8%*iW2WsS_I,]"kOe'^"Q9;^4:QD)X8\cps/Q;>b$a+>>1"foHN;9]6q_df>Gr=gG$8V&F7]:Ei7b3#QWI]>*U<V:N0
%*BC[<736LYhSoCFAHt1:8Q4HhSg&h'V&>n'"T72ek:;*bVO$XorUf7d7Sl8Y_\JMFrKPe4csj-a19sOZTL1b&Q)?%R6@S1.\$f\-
%P=4^p>+A^69Ueo'&q7B6V&1cfa0MAJUi=fAdXuiMQm>&*YJZ(m.H[LRZYP1a!-3Nj6,ItR,-K?;f#$Uc)PILOPfAD],-b:6QA.8g
%,9Q:!Z$G=MZa*-MBSIWRPfeB0W:6Yi)Vt_Ug4t>p&:(HF"L\%S,=.h8A:=M(V'&HCF0UX(Z66NMaF/lC$eiQpGR[>]QDW8&K_ciA
%m_6j$5,H1Y6KINl76ig:.F3m<9!0LKkYYe\$7KEe@5!QP7k:5[[fD_`E9t'<L&qDsX28,,V'8fMTg^Nlo=A_uF5ROD"ZBV\Oi1k'
%>C5obD*^%19W-TtlJiaN9^p_3ZA<240tS)3gOEPMf/T@q;H6GO!'C$4ncpIj[Bi2)S.QDu%,9XE30;1+FVdDK`I9P"\:;eeDsJi`
%04d@?&SqjOd8B8!Y#lUab`s0IVP\oa+njB#p8X5hDmN,,Hs(gJ\6L3a=j>mu&='([5IKW*`=^n)?)J_H-S&roI\EQ$IofVX8H4*Y
%-+:^^;LiXp/rC[hMSKBoQ'%S'iP(5k8FY&G6Wt1U<6'u0[Nkp\fW2MO]""2B=Il6XILZKBd1Ra=;Q.+0L1U[NV7Ra1SDnX1jjBMd
%5XChDnOR36YcO7s]g^^)B(LBYlrP[$VC3qH+/5H-Oo+a9::3`mSuC<V3NToHW!)A3G*nbu+6C>%WM6WOm<*r<"oNdE&Sab![X(PO
%BZqh9Osc#*Kbr4%KZJH_,#[%.AX"9t/T)8eO\6XsX19[LZ0DU>;.ES("`"J/0r->`!@msb,+g^VMRI4AqJCSe,J2*.b8+SchVX+C
%#X_^q7_iT(">A!\J4RH.eQ@eh/OITC=17L-!ahQDZe3:[/4%H.qZTAD"F,hY(b)]X46Z9[_16`+MC#_Vr+Vk='QtL"W!R+\%^BoS
%Kf9Sco]=t6HM5/cFjmE%!;VE'30R#-;IndFZk2H1][(<!'imV9Y?"MLH".Ht,1[r]g:OXdDG36.63f)D^/b#g6J?c/A's!e<RCT?
%aS9([l<DDI$q7FPWSem*X`4TTkUr,5e4o]Bn0-$T(kbp#&Qj=E+8I'+[2JFQe,7@Y]")*6`4*EX7/+K+r^Y=BikL`rq.d,>>o$9P
%&4,_>it=&:Ur-W1U!+G0EnCB!Lu5X24R!os/m`:G(E73];62Oq5#(X".MdBS__&Ge-.+$XcFk2p9"YL(]<#@1ebi#u1oK/.Pa)7-
%I_MV7I8-pHbOr-+*RAXCkO["h8+7+Cq^i3TnM;_tCl1(1]_TC.`D9FO$TNn#I$cF3_\/C9CY6Ul^uGTgdZ<jIb:dEqB^<iL"8<./
%O"Eu,)@OsR>p>l:eZCpjUkDH@V##C\2454ckce`ubtc!in4n/R]"3Y'5S!MLVl6TUT3puOAg,^WIr-'=:FPYK,R@6aFX(qt)L-<V
%7c=E$T2WkLLF'L+ZIkq@",)_.Abcl*pEWCTY0VYq:P<R>h1\Bo6)J""/aRg7(_EJM/3lfk+`,H2,-=0_80K7og$H=Z.%&],0m!j-
%]0\G+S5>`2`1>qjF=oVs!mi)iR*)<t\d.`S0:)+"pRn5%!`Zq5Wd[R&R26Z-2.R99Crr,@<IQYt!QR\sjIHn<__LZC`Pl0P94=$`
%(c1Sff)N#b^XOul\2hGM,LD>3ea\m^BY:)eQgf#0b"WMq*CY)8H78X5S+ar#!+(8m"T&T\Q0.,56#AhS<I(%"gl@J.8TBqh`_0?b
%+AIDM&G[K-?HOG$W:Ck:AlOI?nV/M>Pba/l$sPC-.%$b[oke(o!oe41*/1iIqZ<_$@Rk/UdT\`B&@fZ5#qUQAlmY&@/!d7j'k<]5
%G^!]O!mN.!94V6l9e>^`T`41A>(K]I&0P*e]..>YJ7sZAW4&\J'(>X=*WJ#>Mu)>]Y6`$`mu_I6oo_We?\]h<>ZC"?<%n5"pH"r[
%9bBa?]-p)8d^o4j,H;hP%qE_kFsMfn.bM(7<Q+YHAYlWA;P-j]`7VBMok6pOKrdds!aKfkG3UCofT'H['B:KjN4eOVF>rH28unZd
%H3Y88CYJ:O;PkW.1)2t94`ElE27Y?4$\5R$\HT4R`BH(<6pR\`ikek/`q/_4g2E]Sjq'/R98Mtih?ZsX\W6CprG>"$Y5CM.V^Tm"
%=EqL0JepgA-KJE7R=o`k\9dr)FiRR_!lTGqfc3+1'Y%F&%fLq3jE8;h/W!GalETet4.$SQFr42i78-b:7!t3lS>P?(Y!Q*<B!"lC
%#SAXEZ4X5N?OCoZ3#1F4+0'sBMRkX-_[dnB>5<K$ZJLmO\QT2"Q5cg]U\`YNGs2l7M4H4qIP1=J,U'WhE+lom@g=<M*RDrAVXC&M
%LM2KcR*5Dn$<mah)Pd]=f\b8ulVF"f`(:4q"Op;j8mj$=b*NeMa?3A:L4T_:3D.U8&bpHK<n3!WgK_me\2FEa=d0>(V9/_O7#if8
%<I#*[IrrrJZH3$7j<CUI\4"CcTb<WJ-O7U/XU"!B=b0;Q(-UlN9Nh5](F`fYqH\4!ns3lsaY4SKF!ks_Qpa:c6Y(>:#k'p<+`nl0
%I'JIfERQiqbK_OL2ZZr)5W:gCbp,;L$KD6CQnEotBbpgG]hRc]o]IgBUDp'-&6>J3E%Q,O?*!#_14&nEPEa<S>Q;8mF&]5)f;<8?
%Q4*9+K/D'X'8J8(2lJ#(KacP0-O(c&Y9>Y'?ARrSS$(ik2lnU9jIs"''":kt7GWr^SW*W.*oO$:F1dSqXr7of4cd<J(L<XO5f=f#
%q')9$G].:4KT]9.as.P3A`^\W!U(/AM;!Qo"p2agk,R`f&(0FODc/oh.I+_T`$cs#?9tfebc\h%]Rm&G/!nh"2-UU_]sjY>j=1\6
%fdRamc>QA=(TZfnqZ/u:g^EZLeTLCpaeG,jr3b7DftajpMpjf\=(#sQK0>]D$t7oL9;ii)\sOATLseY8cD+r0+_4></15k-/SWlU
%.@Oi;aV?N[`dn4pX*3a#=BC81fV*X2%Y5K4$'2D2n6?M0C>2R\86Wl5:YTU@M7ad4k,MsYESiH.LJZH"V^[(^gkZIS_[6k41RWBf
%4pk[;/9SUm=-:f&Bi^Q7A/$";)MGNsjOdpfq'65#0'VkqHWRI07.AGW[d_DbG0H,OQo8_`fpkJrR&,dpZapBp/$!'>#*(n85SR`"
%Eu2Q'ZV:J\7Za'N)?N]i>0/U3r"iGR0cGlcC5UahC6>YW-<'i/V!M?;H=E9HgkI+g<Dt"H3%-fTh2o^3U3'ff\nW((/U\uh)\?o&
%W7F)_1`4gJ2lrl4a7"NZM0:c`34$e<'bp]7,_g?FP7qN.7?=HeN#5=RC^%.Y/_A#tjS\DWb,N9]W_Zhic-"A'K'9r`;CBnY;6h"]
%)\3\n09DePAN1``[Gi!I"ZM.WToY[CB$/U;&NW0?A7[W#f"R\$-'k+X#aOVDdcRLZ+d8))+mK:5hjk4*"^SrJ#:0E&H37A%*nBXn
%#X+l2YGj]hcARH3&:JL%oe;KK!E`GRIr;:0-%!(o-im.ICr!LOW2p2/DLf[WT`L0@Jl&l_OS?os>qRYiB(BT[Z*9SMR;]SY3sY=$
%qp@($F^Z*X+7s4Ld4e#4[u[P-9c!HfXi;@8q:Onj`NT^c*BAc";em1^XOoB5Kpk/.bH\+f\KFdd?AV<@I3=P@QNO&a9F%lpA%9G$
%EhNN$,h3Q]UX#bX.>g(Td^h_ql]1[^Z+!5_ree\&!p>9_U)I&Zn7E5bDStb2i.fQb]sgr].b'1<7!K1=OdM1I9,7gZ+>3rB*j_U0
%Ud.6!Dk\9Q.>86?'e=7n-cJ'cN$dP\WPfh]`1n8m]!gm@:l\^kV"p.L@=bFZ`\BkYMTG4NZ)[C6n\Z]2+TNUH.iuMj$N3@Lb*\oA
%!/<7Qp!+C+\mqJ8gmR9=;W_;!pa$D`N3X3<_RcHUW`"IW2a@mgDO\4C)&nTZHY*)=i\eQ;gSW<KD2*hnY9K_g:D4AA'Uou%\A_tp
%P"7eWY4$SX4FE,h>^8PBidCd1<d*$\lj<bmNA^7TM/uZt5l%'u7#bNH/-,cQ>ee';+T=M?ABfBN;W9Ib?Xii@,>NeSN,#3O3J1-h
%W_?jtfFh1$68sI_5!$38Bt3/X.8W=\l#3:8NORi*nA1Mo#"EorjrF=,Eq:^'%mDtg%,FGj!]X<b*E_TYS-s<99qRT(-m&K`<4.bL
%^OSSpb>959'#am)DW@:W)S32oP$1"K_/<l3aDd2!c17-m-e5$TC,G/hmfgXkZI8>Mf$*m7WmCW^J'+rBKmL2T_i>X"BcSq`Wh_SF
%OdQoWs7c*qj"4U89aHMJC1Ouc&eZP!KVhNt[O+:m'YW_Y8F(ol%P*!4<:@a(U*MJsfhe.!2Mt*4!$i+nP>Y]L=jTj;:NHe[*t`H@
%>#=pS*HZ0:Y:PsTc@qo+#@.*(0A6tMd[bG'P&2*fa!_>O'S+lm%FSp9h!c/)Xh!g/XU+FJ<4/osZ7@A4A/3+GUUR&0$-$pZ.A=\U
%q>q-KV=N],89Po0/?EPbdS5-"f=WD2a0ADl-.-pf'b`8"E4.0TA'U!jY.2EH5UFW.D:mIi*#-f&L/g&eA5L@9G-jNNNZ2u$6:.R5
%:EE9#2BCP3n;bFd9>G$C!qd<o`IS@\+ff?=;jDS?I4]r8A4#gBUU-jNV>)'qFM:41f+&S_%:+ga.7fnVB<%gF:QC2AnQu2kjgf>U
%c51ho\<epP5?%(_8ZRGdX#!of0JkYEj07"Gq!^@Eq]uUT'#FP36\%s`Lj6]2Q6N%L\d?H\\m-#Oo64%e7CI5/\g(W/U4C(3]WZXn
%C_7#J!aVA+QWnSq,ZP[0h!l/'d8b]8UN_K#gG(+ui&cPmE[rGib2bB!n`@Rs(4[8Z[-XghOC[HpE5Pm^ZjHT:_a)h0@t]fD_h<JY
%6fu[b1LVpEYT:q9rCQ3#H:cc5WsOpa&=T#e,BY=mMd$:6L>7;7e8a[hl#;YM-c-he3NR=;cL^F@$2(KR%1hF&8O:MPMm;3Y&"_5M
%8:/kojDrYnU;F[o&^=<g;GY]=/NXO>OE;5%ieFoRgG&4.O+piH<cJCPdsam\nQT,9)RUb$9WZe?=(_b=*Go#2L5rE)C<F+e5<YMj
%\:P.A2gsjnT\\@5!l^h3:.N1*JPuRX9l;DljPG=5$90EM%,q#"i3el?77j8Mk.X2,I/MXUYn>]<?3\IG.Z[sCl2a<`F?_.J9]\!@
%7r*7V=C;`k0R/BAYCgd5E3kr,i3(8L:OqqGRecmqW&[:r%V'SOVQYj)X,!?Sn_/c&OB*(3JK3Spq"*B:KAVt<SSlb%]HkAk5:Kh`
%)+[+pN2,)PB-7I?Rdj+h1rr<;\qNj)N6lA.`)fN$9]"cF!DQ<0b[k.s",)pO)fGas,7?R(2e!Ri$8K8ulctYh&QJ2b'$qTMpGeL4
%EH[bd=kp7)l6,Budbpl<91.m,P%=UpamX4*`#u&Q""/UlYO2fObqBq.H'p+Eg\6mI^J?aS/Fer^]#t9NJ<FL=!;ZItr1WtPZ:?B0
%C\)9@^hAi=G8Bq&W8XbN9@G#I&,"gCo0I,kFWD=qiQe1BXJ@"hnTSI"A'G$kmF%MU,J+nRM@oOK6s%H(:q2ND%<+`%cf5]E;,l2t
%X1==aZmF-)/TO$qba/WcPfpm7^913p9eQ98^D!S.V?>]tY&CGfm:9%D!cBDmI0*ki(`hf(EsUl;<Zg+/,D;kY\Dn8VcU3NF-h*NI
%RF,[O55r0).8gAe&GJWXo$CbkV;^8XCd\DIVfWl7FBW3tXO1iYP,K%9Gs*(8,Qr7E>MI:MD+Zh%#t\1<+#YM;4*>U"4ptdP1Zbm1
%64''W*^ZN%&)pVXTru.sfKj*/"G2O4)]U6)45%mXm6,bTPLk!!V!@i/]n&RfnZXcg/;^7iS"s@*1Cmn-QlKaBbGK1/*LE7;'5>i.
%Q:G)X&fLbEd(U>jpe*1M_f/2#?kS@m+Y<Ji?suqDFJ@5?NA5EWM@W]aO5A]#LX!i9$kjB]>@ZZJ[m[X+0A/g\/_^TZU6t=B-O"ou
%\U^u@A5ga2Fc-7S%QsD@fb\-!%nY=ck_:5`S_'\1B0SL[iGGcD^Ei[N0"/<FTs(3Mp/S(5XK!leC=T?3;VPniaO4Hq$)ZuY?3:lG
%)e\:&OD+[*Fn%<tpg3Kr<PeB:M=b2',ZmO0/$V]>R&Da"VM[<!,T[TUYmLLT'm59.*>+DSbQ9mKJI19,j[l0:gJofN@A%$\IP++0
%VqU*LB"$VNi;2054K=Q<P9Hgd[m1`W26hUX$QQgZX9g'Bo?:g/A@]QEP!hV`hqc-pON1o/miS]ui5u#<5kt8"%dm,38"sRg#U!OU
%+f+^.dUVi.njX[4)YDMI,cZ0J\jO4(?!dAAYiRJl6"]%tAQ/\IN]MfO*k-#bh:7V^'>JCh<Y-e_fG>`D`.ZqoRqHIJIYBWlc18+=
%ebop;ZIm/WYrAAe5$1Mc%V@SV6*T@[/W@4?^7MmP,9mPm'7(;>77khQbf4EM#=%@9Eb2AhZD5N[#-Z1o>au3lnnL2L5sH.T'At\^
%2.<hs1H4Z&g!%T)F7$pgMK*FA[%H^-I+$tS7dLJ_E'i-lMAu,b`5P!,L<<#:bU1Y+`.ekOAS.+!(-$>%L!+C$*i"gQ"q2,T=l(DL
%*II=3EtdWfPCea_I&r\Aclp1A6S(d1j</H37jMo\JLSMD7Xd?=gpkkrhqO2[<;t&Y*SmlT9k<q\*sFh0*+L6MUM\T<]ASmh5LGjU
%!*C,BZO4;G,V8>56kPV0aJW8XH!0nVXFZ$OaO(qD.hi'X!"Ln3l\h3ak6s=n,"eT!-7Lj8k?#D."K7jl6PlHI]k1s!"gCEM/dA0i
%-^AsSZ8f,B&2=/5#p-Sp2&@,IbZZ0%B:=+pV^d@#%(&H*%RI95B_Gtfql-u]4I0hNPL76`Yl_gj9XA,jN/INfh.:QE>69nh<D>Nt
%@[ic,KZjkYOJaN_2SiW$KPZN<#\Lmj;'2KLEOnk'!YE\g@\=rlQfk)A!FK\'#JoY[@#"\W92d0V=pf0a*S)q?l*@7`'sC;;i2?d"
%N!TEMZ4@Yd&&A$TOl$7V559\nX9<`4GOhsqeV"I8(KcNJ3Q<iI2Z.5F<$5m(2PC".#b``@IoK9*Zo[,e3AB>iOs]"LPbr(#pe2WP
%aa6-pOu>-!,"1ROJI\R;j\e%!C9s)%\La+;,"4!/T$kIQl,6VZ!bDM[16Q[gg+!ZCme>1&-fY1$J,SP[pm6L/?iTB`YQ+7@s6[T#
%bJ4)PT-=)YTL\=Jks,.Aci;b7rl[P)\,Z?GhuD_$rkn'pDa49F5QC&!`Rt4_j+"qerrrGo4+O8GH5s(JnaSgm<"BoR)rS/o]X^rR
%3o0[Fdd:d5-tT#pEQJSCGA%(<QDkrD5=YR"#;*")XronV/eT:]M6-o\c"l%p(nu(^],]e+hlYk>bP!Ier&5eb%K+p3qQ'an@ZFd!
%/#DIl6bFJ#)n136hq\Yl6\+G9Bf;[?JNG*V%SU>W)o#'3"T8/.N,"5gNaa-MYc!skC^,$6M\0"+Y(9\DXC<Zj:QL6Me*1c:34sQ\
%fUcr@!9[\b4"gblfj[4bG>j26J<l#OY,e<GBYm16"b&N<q;-g*ka#M,Dj#)'G=`O707QMo$9ZE9-j)T,^]JTEa9YM=]+kr=g?\$C
%"Q@ija?i=$$J?V$]rIR*Tb][SPP`^r1(M+3j9(Fd<Y2Wa*I2Mtr*7^m$at=bO]*PZHsmM$l]`cJZJpuhP8Q5A":RoBreA`X,(1V3
%XUu8Idh`]Vdu2VWJQ&^^N7e;i736(!/5(snM4L#?15tTcrD']+;+X-Z\[V\#aXZYTE7u#Un]A"cKD%,VQki=l1=DE]#!&0i!SA.>
%h!FdhU](S^%`+iYKJItXd$gI]`oquN7qtD^Ob7!U'K^%]]BrtKLH54S-S;A*?ujh(A*5*.g.>F5Fhu1_Kb43E$r&)#7$BO'3Ijc+
%-mGe51XNBF2XDqmG]3hOmbFD8W\];uD_ap+j^KRS`bS?s%Dus#p=crB9pD"t)(OPoU24-[4*V<>"30Kob=Q2Eb^U7K1eQhpRJXlF
%H:@BBf#HmD&SgGqBciok2o=]JDSZ+J5od05.Pu(d\KPA_;GabO]'[]YRtt]YL%<;Qa3gF/rA)g;@oU2RRk_fn.G=,Elb"@ff?*8X
%V25.N=4Is^"TQ;+i_oj)n#+WQ4[,Kel#4OtZIpsmfFJ)gqJm6I&A(2)"!%K:5M63[$mBDT8Rl)#M=J3\,fusrZCL/IV@mX$jUjlu
%OCEHk,+XM:a!`^Iq6OY*+qRC$>?JJa@&u)_6HM]lZubd*;X[ESO3t%==CGjMKe1j6oiVi_4#1=D_2+mkf!FNi,0jS7JMD9j(PdeK
%M>QI.J;/6ALMVhJmU9Eiq$r*[;5,&;M,^$NAdB36G4fa&T4MH/TV.@.H!Xmime<W4',J[p,059MWI6iT4#laJ`]a'Hf$DP60OPN+
%m4@PlY,4Y*XGuS49&:nBfA>?@_6el?FnWnM_p.\mE363h*os42LP4jLfham_p)?8t?'=kGYmeEqZgOao$?.O]$pN3o6oNaql'9O:
%bj4o(KB0+2]cm=f^S/LgFJ"lqi+eqe\\KhgOCVUc6%\OEQ!^HBdm(WuM0MNd@N#%,k-@+dH]CkEjHIF6Zg3BW^5gk6f(G[#=>;js
%.RZi?'>[g8-I+&NOSR]<6\)(k[.^G93jJ#d,I#5h&H#TD6?5Sp]k(+H'$Ie'pW1/G?A_f9lEU>gmKt1aMf$CmfOhVPkSQn%>TsI+
%V@'<ojDI8^$X.p5"q!.X$fGcna_Bd.[u)uGS,DnWZfROVKYaXi#*sQo=R#]6IsUY&lRdDed$]7JpOjQH[QJYQB%.hGQ?)Xck/#G6
%Ic_*J(om\"**XfM)!BG5H^VbPAB9;*j)V9\_5:VboGag[_A<9!rCBfigbe4BCR.q^[punT/gF_O*FNZkVK<D,&*m1ZROaK%H.7J@
%2,TerkCkj4>s:7V75gcG.c/D,<B5r]4i^Y+`XI$7Ke/4.Ads8SCi3'BXoNm0_(COVG#03mL'g<9F)!:*EJ-(r:#CMd1:/$8+.t\.
%&n@@'a.c&;*qS\VrQFl5afpM$@Ku.rKpmlO.n&3(TrVBtW.XhPV?N(+BH)pW6.V0a"\)SfC975s7,jk'+j^rUWUI5r$*2ca;TqE,
%'tdN%Jd8Q%#WW^e(8VEe5P`g/9=2rK2^F9^Lhq1@!+Gr?RV;IpNIojgFp0il?67ZNj)"c.QDXXn42IhrmZutr[2D!b0X`EG`m:;!
%!GN'q[PDbl4C]@-)-cJj(:j,.kcA[(>M^INEIDO6Y&/\'-W;0?q0+XM=O(U-N&&b7=c_/$lrK.aY%;1_q'DDl3Zj;Tp)$\[6N[YP
%`L;_#"R_RX9ruOVC1*X)76_1_@NY6U@Y)4rUjIfpWE[QGH2d'Z7324:*N1>m,)^7J'=<ikaeAq,qJ\79lXU>H(<R&n1fk8pXmXCQ
%^p/blhYHGQP8QUEW1d'Tnl?D/&V\2c!Ql8'-,M%#>%$W!chB`\WS5[059/p]bgb>/YMM<P"7S;93jpHq_7&af2:cs8>_"?E.7a8W
%SdVXdCR#mM4r;Y!C2HDU3#i(LUs6KBVZ8NiGdaSR$1pE,27]Zi?f<s4e?l09M.ZpuXRAO>"$c*>ib.XV4X^,e<ddH%=n>$NS5cPq
%a73AAbMa="#BaT.\.n`nJ<==l7dp]0mJ!)>+#H?PGTLLtEd(m$^O@,2!qs[kFA87hWCc;JP"B>$Qq$ng4JS(Z0TGO.-d7]%2i\fa
%3am]?#Rd\@0n?'c&'VY9j`e#Z2kjG\B-\^Q[OTS=>cHtC\hO3sfQ9ZiPmcJk(*+8<c3\Q&+@+A5pn0$DR2di5j-#a48U&BJ)7,Eh
%dgI]C>F#??5dqi;![l6Fo;L#"IG\\s\+fTD!08rRHX/,j[;Y&&Uoi8kUJff.DSA\`)g2_bAohgPRk8aI<74@e<hpm9h>BQ,lV%,:
%&Jsa_(;I6ibo=L:KS0sh!h<Y7VUi4m`o*`PmpOCKNc\mZB(QuJh0,)qNsmRfVL09P3TIMU_Eo.?77W[WGR3Zp7(fYcS=,A#Z*!dq
%fiO.5T=-Js!]&7Nj>t\rgd1]mU#Zc]LAcu@,EP/aOUr<gDd9,\%\4,oEH;sN+)j&;lX':1b,6@14D]XVp%I\?MSt0!6Z[`S;D93Z
%-5?GGEA.Mu.thSVGQfq+1m-=jXm<Q&;%cjP_gD`h9b[tVJ[ML#T3bD+4[)4R:K`<P;AFpDQQ<&:@&mpc`:&W5<\7S4N:VG,8,Z4@
%HXq1(bYVmjYTY&=GW^'RR>I`4W*7%kILah$pSQ#1C7Ye+-Q).C-R:@7UpoZZpM"'fpP'3r++bl>Dtt5LO4/c'cuS:N;dX^l&Y!i[
%TTGlML@V+ac7HWln*fVRk_)UO?\Z\l;sKoS!#NhQ=sE0Mo+$W?9Clu):;VnhQUV&PK4^m$$gTdNA)$]ShRt[cfqG71g4@_oP-;Vm
%;e7),0iD4s0V[\)B+r;$,J<Oq\k*&>1+o")mQ"`Nl"t9;I"-M-cTg<AE[Or?^dJDY2k&nFgc:%^%7(tf'X*JD:toa/1pJ?8GE_=#
%MLpP%RNdG]F<Op2;J1^EAT^[Viu5q-g=2BYErV5CT'S+Els&%SlYXL6.$tJaK]!1L0UMlBH8[d3l6?C9&iB2IK&!/KF^N!ia"19t
%ZF(oOip7(G8GmM9[J<"&Yl4qAFqnQ_Ve?LlZoOVp2*%E;4%OH;ne$g?5qhB$:c0LO7D1Hr7Fs61dZ`^!=TZ!M*U]/B)hP`.>6qip
%.4(5ViqOeTf0_=4H]7jX_CjtYG4ESt^)#))FnYZ;Lg3FA7P"V6]7*B)kWXZ]oK<;?dNeGh8:N6U76Lg1l&dp*7pBA?h8pV=%u6!,
%Y)p<W7@s[o4bmSc5'gcU'0[[/?0T$b/tq!d6dcqpa^oo51i"[fNpK-iLEIjaa>Y=`W-+V+_%K/pA[bs^/QQA(l%Q\nEe9Gu5)0]^
%Zl6ts"R\!:H*S#G&6L+nZ@SgZ)=`F&A.pF[[+^XgXGR&l^rg3sCrmuK\\TQu<:41.qO7'cqujbEhBMLA_\ApBN(dnS$5U]FAu0Ff
%<!)Td%:J-ka)?!J&LMb+UT_l.ok,.Wf^3uM[D3;>.+>)^b0*,mI]Q9C0+43c:Mf"!NH'Zs'S(ooS`k/`3?'6Z%'a8tbi0dkaVtmr
%dQNQ4B#mmjGs<V;k'6.3ZZ(_oN"o0SSo7[oR,)+RPHu0=naF?:L:p=?'1s2A^Sf"<`XcLc8fbm"9)-X$#iSp>"@%R;UF=,>%.TOU
%9/1DpR*fA+?u7*PU?gJ3Lo?0G'J,`iMQKT88Jro+i^6kc)b.p@)V1"J_AQKFHhJ"ER5jut/R/bmFMjR2]ZTD+);CC/l#]+&1HGn`
%'6`.@V0jqlDsQf`k7%_!Qd`<7^5%ZrjHAR8d`V(n"4,!;8u*Ao8!mfo_FB1Z@V;*(To0g;@@1ke54]D3=\st1K+RC$gB^OU!:Ltl
%.;M"GIL)p>ea78,J)cB?&2e7Z&9)\^ad\AW`iLA/Kj\Tc^J"Fo*A:h3X1e<"@\Fp/c1]KnAnaeB%Ujn%pE%>e8_8"E(P"nVdb5E=
%plpf<<1R-7+T98cO=/e:?Y@DR\t^EoC#Osoj;o'p1ua5A'G&<MmWiLi>.DL,7785[!Hm/Dl>bNE&cpu5<V"Ktpmul,2'/g^gLC&.
%ec\.rbW*e2ZODu<5ua&!\HK6134N_W(6Y#tFM>h;fJ,u\N'Ri]pX$")gcj:VR&c!B?])tG2p(*?(06^*&0@#`aUrCnAQHJJ?B.X!
%hkMCTIpM<)4Dsp.m]K=El2lQVQ91Nc6.Xgko2@kP;(@8.(F<!R[c.#4I;)?U^NJ==_dH_,*bA9,p4pSWVn<oom$ZqTpQ^ik@FY1c
%@7X_qar$#L8"lFd@IIO>76U[-<Bgn,mEf5k:O,J&(RYBc@Y!>:-31Wlae:Ra?B4s.OWVKDD[OCF?GJ-YCQD`X5<XZ*@,.f]B5a8`
%8\=!D>*BXUZ5DmcY(&+n[l_S^\;,@)+E+&gJ)<r'ho$MVYg$q*=YZ$8o1_4+m'-".92Eo'*![bL&71nA]G/"Zs39^Tn)b3bfgs+]
%P5UN8_AG`&?1Ss(7<7;46C]f1otYk^"iln-)[98JOuP>?Q?Eds"R(959CfaU6V)Y+/n7d#E?f$HD"2kZEV2<MY\auRB)Gr@-$-fX
%/j'<-;<4a86!#Vo*$i"$.@U.^!@?Fu6Y#+*Ok]i+m<r]HAU];ZQm'ce,ha6W$p`$L`lCH&Yt-#DGCh)%kp[L'8BPK[H7g@d7=ZcI
%kHO`Q*=t-Sme):Yo(N(9[ofdT$ODph:#`,=]c=L@X<($cf=r-qj+d=!O&>WeJNqKPkNbn>N@-/+d43=jZ0@krG'I+4Uh$SEQ5,6e
%qXBY9AsQ]NFf:KLTcK,iob88jnKuJ/KZ*k4;)U"\Xf>-T]G/W(jlWUc1<Q.(++>ij5LY`@fDuV6B1NlB%nX:544VA*Eh)Yt<TSQ<
%8\U>>DaG<9'[X516KPsTP0!&/[_X*o+[KWIaH2Aq*-qn"hNHk^K+YSTE%4`2\;dNQL.WO&\07c,-%8_q,+lac:D$.5&sJ$DXd1rI
%q^,hXD?Y38P1mW@if:Lpi7H2eF6`V$`jX*Je%#jC_\OR]\;%931?nL_^<6k6%!I8BroR.a`B)L&8d.lQN%4r`KfkbaESj,T?93kc
%*YZGQj!1G)Kbk@'b^1bD>K28\.gq:G><o)a5Z8#+>'Z><U@TdgO?!6oRmF&dnG\c(P95\R&lo$I1E14WiSJqQD%$BX'-&\Lk=1d/
%OXT^/Sjak&9eAk$&l>7ngi(<4Ib%$@m]r8`1lQ<T'.Y_"B(%P5&o.[d"'rf8WQLdm;E$3Mipsogf`L2h22)l&L%mJ5eQ0ADo%!qC
%A!Mb$GD,59bB$c>LK-=R$k?X-Ut/&e.CUua%jOK&P4;80H>GPr[87MZ)??;?b#]/88!rS-XK/>b6TAYcj%;f$%RJ'j6JCfBpd*6T
%m.XA2W?4Z7eUqJ]X:9/13:QbU?GffKCA+ioqi2G8#7Jn]D,=e$;,S"QU:kB"21t,r@h_LNUgs*FG*A2CUg:U-jM7Qe6AJ,nj=mVe
%<,7l7.QFlTk-CocmU9WF-@o_.5;!7Sh,Q@/TsAC:j43.&)Oq.k)@.tG\ps#C(K43t)P\_paK>Rd`I7Q"$.d-(bPi+uL/deQlA,&b
%RrA2ucNcaE"-Zl8(jTSH_BOg?\;,kqK7pRlO:[4Wh^*:-hnioZ=Y,4&#+FDZ`K8_O(.%%>$mcbs_d$9S"MUMgK/:ljZ8-arlm(]7
%=S46`U;EVWHO6$rFWQmTs*ESliR$RuW1'ne0TV&("88!n>?Jc/:lUp(grg_E9)CUWZlJ2p;I,^GpH'Q.aio)?S*h575Pm$X]](MZ
%E\%N/,0"J!7n(1@rSN^k`&"W"G1=!K\M1N)ZI0U'<k*`r6D914Ua.UP9:,g6gKZ9kgm<P]?DMcTM-!Y`rG>Y7@G'U<Qc+)i+AAmR
%6HGuXN$Tjop*&Zd9(J('#l%_-1;N'm6VAWU5s3^]%)aPcY\mY]70JF.F>pO75!diuCKNI7h0gaA8C$beNc6Q$gTVtVp?UBb_>StP
%W!NQj7GOkOJ8-e1qksHNHL5`I/%nZpIZ+VLi=;O>bKQ$_*?geAOrZh0S1=<:^^Dpb!Cdr9nH&-ULUW"4;Fn+BV'nrD1Qk#HOXkba
%mT#?Yk$d!Y-fdk[UR^.&/g2Ojb*4`Z_krNCQLHG\6gQcXMjmPP['95nb)EB"1?j6h`lIkdB&sCS*ie<mgI'8+JE$nqA8e!481^2+
%SU\8*H,hT^6_sf)![8ann[$KM0=-q^+Y]ftQ_Bp'q@.&4^d]&SDB>S2W'.>Z^Rt837=%4BI<DDrOR:t#&fLN3QCN2LL'*(J*N>:1
%MbMC)-2&8kh15rCg;^@?2?m!rf8DT?9*%'^09nr9OBa(8^gTpWQq<F\&t@\kc6??p6oN.A,(aBBD@,G4+^Tt<"$2(IdL]SM'^F=J
%3@\86l+q'Q6:sKG5R@O9OMn`+`6MuJnb?lK.8,t:K"4b&XU[6p\^@@7<QTScW1-2NCktPs@EZsA@-d2p\E>QMk=s$/:<=.,PeD:t
%,q]s_'/FupU*6Pi$REDjI;hcp0;r_OLQSFlH)6;S^>Dkf#DL*8CLr.T,jY/3Fu.F0XX%fj%Q8YCakLjJSA.9g'aDl)$'+5@?=c^0
%L]WTUW=ku*6A?ZsT`%SCFPWa2.#-!H:WW0H)8E(dR^7K:(rFI6U3\oO,QoG%3CIjiPCa)RYmRmTSRD@I1cDCtb7lAtE>->Nc=uh;
%^NdB*regT,%DUibU=>r`%M3nOH,0^q&Yd4j8e'@r#AMJaoKBt[a)Zlf(Mb@ic8$%IG7h#X`8Jst'^8o%^Pom2$I4*n0fm\LhX6dE
%Q4"7h_>6pVCR6FP(iD-_@6?V:B$ZVdeo_`OCDr,tLibEC*I7eR%sT]qC)=E>-m4iYO"]-QGen"kG+pu6_23mnQn'qYXJkR>c(#2e
%\DbS_YI".ns,XHW'EX6n^L`V-i"^_U[*4ae#)Nf4CXD2DPslt`AS_F:JU[K.5oMr='(ahT"*(D6>Af=VLMs7!6s0adF`87_*s2lr
%ZMba(B@)XrmDm>%_`k?0)F5rgI4.7`YbPJq>1]RM'-LOb7U8Tp"&JtZa=o<p9X+]jSA727FI7GRdSI1(R=-.?kV!8[M?X4,FT-)C
%fO:c;81-k@2:3u!"4%k-YrOUb5F,Fk/c0[VJ*T$]Sb)uQ.WCc^W.%>e6;R<l6mI"S+VAJ7:j&J)P15BUFs>j@+(<e9doMd'6:._K
%'=O"i5o@pnI0rk,Z6LN9)85ES,VVFmSOjG`E.R(7U>uT$6al5jl9rE`\&%MM8=NM!YhHu77=n'6N<FA3R8:7_Wh8N;Z)X=Ze^Jl&
%*0irG(n444A36[ns,Xp/5%407;Y8]hJ,\;Q\;\$EATk&X&S6Kc/8NVH*O^N=?Ej-``%$.4T[B8<jX,ThKHl?H);q)/fl$l:`SJ]@
%;?Z1hPF#jXf`r@;?"0cbc>/$`k\npu%X&s-D(n*`k;kW)m5!T?L!HFN)"(;d@$u8FLN3-%!3158Wsk6:I7S#*gF9ZZ)>G0h4P@[6
%$(S(XZH\OJ8Jm)cSmgH_OSKmI"9;rN/5:LKO5g'mb\dlk@L419Bk(W(6QI@;"ooPXG/]"=jg7G#p\gT\B%=SJjWYLbp5/m@Gm[$E
%MP<69$p3!h&.^u-MEY5P`Pr6R\>L!&-[]VpSqe%*,U#]2KHVArPU!AF5M;W`lGgFM.iM;uNN$f9`r<Y&X9+-H#]"T[;NRO`GD_GT
%==[imY116Y40.@SGqRe67s-6biUk\X]c5<UX^>L>V:7uq2@0P28</?r=D:0fYRKBb:XJAXc!roCf9Ll#lu0]k<Ag]40]QXgZe3f@
%\;Rjtg5r+-))b1]d[Z*9M>hZiE<CohY5M(0e)D>a"1?cRd#J$Tqu@.20\=(;m1^=O+`PJ#]IAkQ5(]tRkdMKI?0hZG'a_-3LR/)N
%hoQ\OMAFDjEsFZaR(brK&#\`kNWce-5g^Q%`S#9Z$UpNgL>D")n#fHEhiUeO_e;PlS:ZE(,7pU1!aQ/f0`^UOaU&krYW/6GVa>/%
%!1?qMZVDuY7WkG-lg%dTp0Fk&:n[`ABCo-k-ot<A;mL%O9&c1'%1.tmFt)lX"$tUldo&2;Pl2bs_:+QoY,bh]N<]?aWst"`94!i5
%*kRb5CpLf*WF!LffrYO=#h-"+k!BuDQ\&-_6A2@/=A6C2'p,&0OWBs&'2urd.OCe.J<D0Vlei;/N[k#>qjhZMo,RAM#.O&A)*I)"
%kWgYqDUoHBWa[,[3Te"1&jO@09=om@=3.Wd#L(f'o:%>FilEJDV(37==(K1(V\,YMjPD(h7:6KG;0E6S&Z&eLRul&@Zpp:>2I+D1
%)b@A*l5lt;=YA]H$N&7+g5q8D6q+c(2o*NK1H3&JlkcCeNR>:U:b%GGU$*K5RV)9"hG\S=3k0Sl*@6C3p\4[3HOA*A3fbGgnP:0&
%1.AdDBWA4g[JSrSAZKh!1SHAKlsOiZUi,rbW56T>4kr(`DFDlL_ml6p34"FrN'kUjU6GYsYT+<%Bf))P:Y9R^=ha`S2$U6@_@gM;
%(\ADWkE$R!q)\,t8e7L#M?a)i%u1HG&F-M8S1F]*5u'/&dA\)GLoT_!pnuPP9e`D'T`-DiH+icJk)oOsPt\gk;mK6,Zc%L7aU:$H
%QIq'UFP*UdJuD7rL<<!T7W[Dj(YsueGsRs=A=/uA3ME7Z-uM7Lr>m^Ug%^-1gI>)m3UFYL#)_Y,Ba6Ot5]--c_;'j,'M)&(>>Ss#
%<GfR>C`UTbkVMRHTWj/OT^7W@C\"t2)^Mtj[g$klCsSa-ArINMKUT5*UM*?KW)qHWc+C2t<dfF-11BVs1QlO?c8lBIjbbS.3)Q:%
%UB6pLJiI[&91U*'2/JGQhbJXdDug(\U2D,I/KTM[/SfZ%!#U)KXHAMn4t<MkYhd%.oP^="&>9S&\k9FN56#;f;NbUQF-p'V0J('8
%^f*,Q$qUN/EbIT"k2j<or"^P=KTAM`iXUDk9S3X.+XE0[6PM5is/NUQq`0>rVF:j45('cX"1>\]4ec82`d-qofauIAfq>lP&aKVP
%bI=t[X`O?:&uTR&lhC[0>CK1(^oL8)P%"\*1mRkT=U-.3V@Wdma;ltA#9A[6^;k8ML"q!uoMjEIdslQ=?M']IVeGWEe4k(on@"Er
%\"7%4\eABO0LI8$>nI4.'#bDRH)hKB)A*^"7\N?(%B(R]0+f"'iSN\c9q?lfOSuPZ5GuqD,UHh4NatLVd0tjYOa$U1BC1SQdcr"D
%Am<%R'*8Oee;**GJPq/UZRpFAe[FI$lnknNb-JtPZ4,9HHY'`H'=2>Is$?,iIP7+p!@:#U.q!_C%&T,[[U204P,o*+X!*Xf`Iu38
%%.E@1"RQsfBHZ??7*$D=D7.'+mmd']M76orB.f)jP"$j0BE9PuLPRucE_)YZi#1.C,_1T!86*F-Apf`CSC'_PEFh`r]\"mYV-:?Y
%T5>ITV3\`\8HMT,mQ+o*G&ng13,R,FO"*&.8\d_#/2fiZ_N$%iQf-=A7iXWP@.5?;*"k;c;iQ95%S7<I);R;t6o..<V?7V:D]UTC
%gpl3:"AP+t-0p6MRmE^TP<3NB11=Jp2g&b#5!nU<gF[J7f'e:QWXaou.ge)#1mjW!&sKp\A]77^<r6G4,dM;R@nT5[hPNPG()W4F
%`2:<jkG5H0%YQ.3jBUmfOrSmSC;5$Mr.jfFCp1+1/3CH>5,HS_OR(Q[QjbdRd"uE1*-OKiET`*%DVWBR:hRmW-6^HL;bEX^4E)^r
%C<#f#LRm4ljEW1m$$R7ETp4UbK/:kuoVrVf.<8JR)GQPEbONFuUOX3;J]iJeWgi0#5tTQYZhRQ6fBrkG.C0%R`[b=+]W`fVd=Glu
%r#`B++=VnQF-aoRb*k7MhV3^3W7Qd'%*@jE.O26Q-d>UnY2'?B"VNVf,ct?qA8R&K6%Bnd[en:/o"[f?h<gQu5%kBlag*/2Q43\b
%m209A&-L$.cM]3E8VG%L,WfGe6Es'F7;e!AoY1!U$kkEpfD:QsC[H?7K)`&l6k\'RoL`o?2PR`P2Fb]/Oqp4XKJGZBQCH$]pkP]J
%fELPn!uXoM%-!?[Or]%YD/Z`?NHURlZ`cj/6`JiVUiI)rUmAL$JKQEMpW:%F3EW1%<HV)?i4P_Wa]VBa1.'I$_\Q#kas/0G#/fEh
%PGFYQ1M&ctGd"[of3SqbD0B_=B>Ba700ECKpcpg\MHZF69BL:mFC6jT2pKL_m@.qic^RCVfaP$ZARY[1]9\q\:uYcB&FuE%`FNG2
%`5bPA%bFQV1AQYnj8^hbAoZm>RXqlb[UXYC`[D1dh'LkS3,VL8a.S/(m_2!(hpf&^a?'<KXo3HV)'LoA?m#20Ip)uh089U1Xq#e<
%F=8V'"Oq-96;l$2!b!1g_P1I!/cSY41]VlhED,X,ha/WeB#Mi?r@a<jj,TOdPpG0sXoU@f6`8;toGs215s=(^`I^p'd=Fd5RAuco
%08D!FV;*(CSaj=#L.49-W8#r9@i)'C.[Tf^]b8]&WEe;UP,a>FDQf!J*P/YmeQY+X90u?(1T!L[eW3(K*XDKDWs%eZ#6)Icdtg?=
%=X&+D\8SiT+Ob$O/l$SKK4Kr[Y?5L0<hIZ#/l_;L[HN\QCH"Zfp#&Bo\QEI9E>q)S='734Gdb;`;eQ+3&Is7j`pg!<J&lKB6e(Bg
%m*C`SZ`A]7Ke8%=I4)0LBpRO7$:,X,_rN+8==,J<ZdM;*o^eGjH&1T+FpA-GRPHd`deiQW/,eV4rhg-I&7!@)JL7NFE`/u$@p9^6
%WY!Ag^$q>=a1+ang:aC+YnidO>O8!mO6K9)iQc:l9a_r8H,qtq@Jn0r^IZj\6!#/fX(F2Pd;i:#,HXn7k?7^(OmhsDDf"]$VHc0b
%ke)UOhMV8UQdV&QYkt4R@m?QZ;S.-SKlLTu9>("Onqf-!)hR'RpG6%rXo\dFR8BQn,5*%"(tL&rU;1%IiYj6hKd'E#,Nhl7H"Jdn
%Ocl(II9Fk@oT=V(i:-WOPqB=b_hR7aa:[?u[@HBY2(T'A!!/NTHE14l;N7b->=K`h.e]I#!c_t6#@X"qiY9>-Ala"P,ZcCAJMh#V
%rupaH_fA;jr$k9>4A_tZ$M3o<=r+3u7GC/gZ6D4(,#qnI6P8T0a94@Ol'/sMV>pP?Fb^07%q-FW[#hi3&5n\"bpK9CLOa`7gsLTE
%JgU>EBN(etjc,*f*6_(3I/[1m+Y-klflCXPgKB^kV$Xk/*Xu"8rP.^4>H9@?FX?h>d/P72Rt?m>qh9K>m<U3PW1ors92COo=bTT3
%[Mi:@d(f$,0(Y!'HQObLS`@'r$j)t_1Eok)^<=0J3JId,P)0ZV=u'2]>sqgD-RsQRf,n0Kq'="DT25D`b@6.s6cl/-"ubm9'SgQX
%@(8-?J]piNN2"!?5$D2C"[\DL//UHi8BJUPNZKsY;)ia!j:SEDjBe^j%2cpk%AB8.,gi)AQ%3bA/1QM'kGFAn>r3mJJj4HGTBMf`
%C?[K5j`.UEBWT>nBNiM*o4mMIIW&(M)XJ26&biQLQ9eIZ9+b<[)V5qa;A>si4A\+BXM#Eo5O@aE&h<(DSZJ*^Eh-LG.R(/.89tak
%h?<E'[Q%7F`ZDhm#8C#K$V;)GYVPht:/THCH>=+T-G"(cB`neE1*i%:ng`0(#mIr+:4Z]^Pef4HAOL-_\r`.59TL]Qdtlt=e3du%
%K5E\!X+5VD?G9+jIrjI7F']:aD()VJEfce.ND4,/WJT##go%Gr#&!>RmR1a"f\X8R-:r(tQW]&HYZ<SG@sP=9JgdXe?7b5,<73s5
%"Te)gKH&$"Ho)<VCaIX89Cn!L2X:R749>LGI3P.Uc<OHYK#Q\U7,bW2V>k;r5):#I"t7/eJeim".E>Q?(ScN_VC/cre0"i57oP:7
%QBf&_;plfDk.DAE4/@R<YnSi-:mOC<a16?Fgg1Z4;8,Rce1Z_Q6oSV4_n:4kWCrOf7`Q:f$ZJL4FH+ib=VhV/b/Lb7C'OA]8)^8m
%q2:O6"N'@TR`DMPMm,ph*F>B$5g!gZ2(:41CK^<q,b5d#D"IlqRjh4Chib>tWiG(.GD$lH5U4khJtO%P%?+N2<JjQ\rmEBU_V9tT
%4>/5]/?sc`:3"VnoRVlC_h`mr3hWIteo5!;]nQY8H%ZaS:o"g488Zp"BCEU+,W55WZKbY1n1i4dPO8q#9OC!hCn>!^fKu6$qN]P&
%Zk4ZE9d@as@8tc=(aC^N+I)Lrg;?dl^kep$$C`o\)mMZ\QRo',a)$g#\<V']8ocX0RA_DUqK$&<a=W'dRQMnMQqbWp:)I21@U<7:
%=1Z^l)@VKiL^fJD6["XoqoF'G'P>1,GmV4@g%?9i'"d[lSQe(TZRjto!:j#l=n,+-!)te8([l"5E=&lEh#);!iWb*jn>Bjn:_1^:
%VqW34/qQ6)WrUiWdf9+(s36eW2/7MS7"#q.ZFYC'>%)q^U;8(t]9NOp0e%eIal,jn@AQo3;#CXi2+:>9;C/\<!<d0uCJUgUjk"EF
%'kueeB]2.`%/+h<P#+T]=J\KNJ]V:OB!_lf<XY'^TI;I!$lNK[*g9I-9FoPu9LKriGp7m#DmZ]]KM'].,p*hhFMbn\om<F)Ub8Sm
%X;T2O3Vm<k[1T1U"b!eb&^\R-QeQ8<%3rHflSd4^.PYe?'<RJE&Ho><aboDnd=cgk*5S8^q_oOYFEPV)W1...TD%UdDJW@Q?j/E/
%MI:8,dl1O#1mK#Q3[==D88gPadri3_.4)*<HkR)>_76d#VLppfdiIR=(f6A.R1CfP;rq\ZRus"N6Sg>[Si&*$h_(=+BcKO5kK'#o
%8=10)'9V#M=XHqg/kZkF-A%OLU@t9[%6J#FYLY"KiP=V3P"Z+HmZ_\V*t@^c*;<uU6;dOsbE#SklN3dGUk!17Q9)m?M@'\Y7LRr/
%@LjESd.U1Y$OWnJ*.ju[8o.Qq9,?jWq2K:NFD.qBTXq:])$EL3`>GVc*[dlGj&#W^Qa"QrT4%pFbLO4aj<]R0?(:89j2T(;)TJOV
%*j$b_\f-*eGVGAJ6)rWk+S))QM>m.\4^JZPe20*(7s,UpKRa0M^T%3>I\-"`3P"PW<jjZ:;,Dp$D%VnZ;1;jV&$haRT.Fa#F^N.*
%X#\X_BOJHui!^,2+'=___I+94oPcd*4Zb8Af?H4U0VsLo=:!WB-/6iXm1I=EfE%0FF&;k,dpo?FaV2:crpRsJ)7-S&9S0JV6?84C
%Jt-X'Lkb3,EB3'CA($GB^_T.0#Q\sgF?<:T>!?5l)Y1@$&%-<r>^oIp28R32'bX3!8``&t@4AQY1/e6?9&>sU*-"1l$_jk]Vk]i_
%Z<Zt2;R[gFQccbeo?"70Q_a(aYhi\CAbs\\:]R0;=qM`C=8+JX27dff68L(=Sh%W!^\Db4I`kgmThYF[^H11R6cRA'f*t4C/PlEY
%&F,.m:j+VgV=YTU@aOSd0>?C-8cYjCpC(X&pN"FZd7e]&V?kOkOU,iqp;GXeM)dg/Miqc<6ohKGqN^BR401$BZ9s&`D'=S&(5*q%
%[L$*;,ZH9\ck`Td<N67%$6&:C#l*Zs'$cU%`A0anq'4NRDrJu6@A4[BpL$ku;%G:5+eF]Z""'mioHS$%VMQHHDPlS3n'%p"+GAW5
%C(_'AMBXW`b4-ZC[EiUhjX7<p^.9#/M]YU$(%$hpcg_.6-GihMToKmG*Ol:\94,p_^*&iNOW&m?@/)kDWiok%EAYc\X<7_ic7"s[
%3Eo"9BI:;/&3<jRhX;o_.mI&\kc-VH>t^f.=@?"S!ZQn8a*Yp8W$(lpbn>P1r<,RB6\mS(8;@!VZ3fheC*%%^=Q?_N\&]RCS+Np\
%CJgSuO1HB21>eit$]brcbB^hDE:nTIY%[p@:-'WVrt=N-G>%j8,o'6R^H[VZ'rs-1/'I"U4L*VP5qauc&!^TO>Ndp1=.`j,5JXWA
%,(T7#aAAd0,%+ca@-Km"H7^Nk<D:25']a'\nlDb:&c7XZpfo33.W-$WC,2oa':Qnm8in&Y!Ji7+*OE<)F7t?HedifGET)#\QZ1HA
%<I5`ZDj@J;;K\"'R?a2T,g>Fl(E;gp!?gqPfLg+XP5*$]n-g%g#X)Tp$C0Lq.q?ha!K=,&[7T"rpd3Sa[,"UPp8,7rK89JM<e\0r
%@V)R@-l3@&!i]iULXgS*.4rG%&e1m&O$CJ/g^dhnC;"#Pf>`NT^pjm_KT2ELq"C97;O)8rjn?u:'_a-hX?2C$>d:B71&0gJYBGj4
%*=V!mf[=T5Oa$5r\?Ks?fL7)$:*FeZKn+Gk>901s]V^(*UHa,X4^Wm^5cp/TKQ;IT)kg2d]M(b&:TR,f/k9Jc]G]o^g5$]d\mt_g
%^0DLCD#sn]pc(3jo`H6rcc2t3qRZT3^SfP322]mY=9-80cr_)^iB#3K4"ZmH70lGarF$#o,WXlWQH-sH(O:Fsf+(cj5_\<nD]fSi
%*/;2Oil`,ikl/7B6>1hZk,!XK0t$G50W9iIW)=n)7%^pGkF`:(0_$-;KJ^C1$3URao4&qfPMaSq>hWV547^C5pF>HR6&_AYjBK69
%[*41NS<a:@O<.96)nahof>9M39B"2q=chRfk?Ot4V5OGtE4=o39p(*j-gpfo2"5'#O@)b;Am'n8n1q<>n+lpeXbn9=MZ9O`j)N!+
%n>n3J#C$d`##42F^S5b4.;F=*,Agei\*BaRk#c%-k.8pf_qfd#Q/Qi@5ijaYFOPUrQXrj)!qX'7FG:MGU>6Mr-!cCn/?7*%n#hgg
%a=pG87(9]ijj\^Mm>l2)@TJhLRP;Iq&F%>K"IC0-Se^WsXI$Dnl)%aGD"O'S+ZDUqHh+@7D47MCEI;3!h@)u7[h##W,:#oYUu_qL
%i(Iorgu7\HNtmt9p:e,db@+&F8"+]r(3t@jA8sU>6U;&G<DFJ;$f*@1W++7aOE'E;_5kZC6,QrDr&$m7Q0Fj@7rdE>C]o=4#3Q.*
%_D8/p?aq*'cO\2dXsilcf3oA>CKeIXSBRHkd=Wg8D3N]k$k`e\>M8@86p%(O8M2nKp5ge!8U$cXKiDU]%\N\T%+-EmkDjQ$C,Z6i
%Sp=9,op3E<+X/Q!1kGi`NL&6\)a5-u`4HnBUbK&'P<G;YFW4LSqXq=a&]<Yg+?3o_\"ook;OOn_I9JEnM*hTmX9q*<3J-E\6b5Q:
%^PBL[9A)<6rL1pss&@sj=gE#.hApHTDASUN"(*knIcFYVm@8Ub<tY-]_g%[+9iB`<Vu,LIP\=Ejor-W1:BGh#-b[^ERQ[!7cFE6_
%IQ$;\Nr^$<eYm;A^Qf4]>J]5(_%?9I8[VQ@'nPLEQ#]e>NIqXZ.1+VBCX^I:Ll9RaP?\=q9)S0B=4(,F<V\VC#[2dNT5sf:ZN!"T
%E+*&-4J"M-I"tAXl=Ic<.j)X'p1YG#GR@Jo#X3/PSp&&SAEpkW,!F_O;.@:8-,T(ah*P)f6p9huId?b@k;&?8NkkT8E"UbqUDuQf
%Mq\OOS?:CU*^'B(`tI[_9YBk$b`+o(O'D$o-I(Gm#HMholfWWtZT;dWDBl!C.MO_e5JZ#hH@'6UiL=1cS=aZ6o$C!"029"PX3"'9
%b*N3h?i5iu2g8qKoYokO-$0!Wb]T=3<"Hr0_s9$n@5AsV7'qYhmOff?q5E&$J9s=-Y`7BM?\F3>qtlBmn8T4(3o99[iSBg$a]/e7
%7j/X_ns,IfG+ZD:PYOE!5.2ERmJ/,@"a[]XDMZ7V/Yj)bAo(V?:3_u7,B="LD8A4tf:Q>8bCmBI)Hc&QVluRB&>+guPI`ero=PWr
%hN`22][9%V4mnN;F^*m2O+RHS90sr+LgLG:ArQ5^\1qfPF7B%Upd5m#nX?3-)-Bl_ErGd%IlM@R47[Gmd@GN%M]qL0!mEP8K8LcQ
%;>IYb":$#;0)7S%F]A<#hT-2!#+lB^"'FbFi5s%Dq)kno1L3_pp[jAO+LiN(qt9U,>I%#Gr<"m<hQ^.5%@>D7f+.>np9*<"Su:Q>
%>a%k]%AR/DUn<rk9.?IVIQjp!b=%)0`_^?!ea/eS$j-]?[pe)ge!/oNhH9=FEJa5QM_Furc[RYRTV5/;MOW7SLK]LBFR@2a,V2p]
%A#g1175p.Hg`JRS7efs(nMZI8XD[5:r61I%e7K(`9J4$9%XX42,#^f_\L"_H;(1&O9`0]9?a>/&DjW)?dVJEr8[A.G4QP+05b+Ur
%m4J9L;b9s2ku+7$*Q!iZrcGV!ZM[PP4KKSlqEgML?>0,r_k]`Vq;Dn\Xh-`Hq5c3_-PfXOcH:6&6/FQ/14<C-R;-=,l*?8k.m-:+
%'km:Z^^9(P.VNPl]U\rA$DFh9^PTO'jI3#7Mr;_L0Y$9SB-2S)*h%]Wn6p-L(rAYHhu>^l)Gh0ub$='%rMJaq(hmE_8B\<8XioXb
%-7@pqQ(([;lubeMH*^b+rL;3uP*R](b-F/'qTkAbm2O0ji2uds6RgW2)7:8*DiZJ90/':s5G8L/Zd]9-Dmh3K4%u)TO>],]pg'9L
%$]@68HC4,U0c_XSpN&"H_T+nNJW+jf\]g%AlsA;tj[mq(?!frP/Bj,#ZS\8kf"<-EKYkWi!j^/;8#2^g"I!O+q1VG['XsIP*P!^g
%<)O2GCp[k'/FrUkKA]A!ES&L*a\.nG?:'j[*/j/fFYt_r(IQ_@i9uA:MKZ2+./k?E4ZUER6!@jQm]02+7%cQ:(CncG<Sb25#Cqf"
%LHYif;NJ'pI5OCu7>>h6QUQ".91=5'[jifs1"*oL:!8WpVD^)ca-o%]c;EGN8?@Z$aN]m/1uMr`92<0@2QN@f%O^\i+",%^Vbl`L
%L1Q(\nZLjlf/iuiVIeEDIUS'dGh+>s,OWoCi@)`IE2,I`d-%cpE@,=%USW72c:T!>E9=,[UY,oM?9pW55!<KeP*LNE*]KgZZ43o>
%h[as/a0oVMljHMZ5nsr=chp?>8h2h6Bus_=9I?JIeeW3=Bhh7[<SW6:q%R-gDoH1>$R2WdAVg&j+@!\Q(CK)!:PPuj!mu``3N4M9
%E=pr*fE;hF_J0slJ!52rO"-+-p!ceu;ab8+0LrOKYSE9rKsH't]7T",3sA1"T5GF9[C[3r(_4MuR'qU=Re2mf)?LNuiXLJiKV+7@
%gpk2:f<h)p,64CJpMRrO_p&`-?G`i*JIH#qef/458D$+#^Apm&*DhFXb).6dr/Dc#!Z%Z0pU_1&n[,"/8C%eZciSr.'roFk;QVKC
%<V%h`dnX&]Deb=-/T7fY;[kB,2D<h]]mBH!a/'o%f)8InWT[S^$67*o\a1<n)T$XB7i&Nk9b,+<U1f+MXV[=Z,X_&8b.Vf)DIMN3
%Ac.uA"qBQ46P5TLii.Ns=QNQt)4k8!VTL[hN;dpO-3@Lpf.0+ZN'WK'_Kq.Bjlc,"`sN=3_m>iR!$!9_+$B91fT2Y/:tH`6dHmlq
%D<UefrqN=$7];D5HsOQ=:XMK:&gb]AS$An*qme+9Q@h_,>>J<TRhC:AHkQhP1[]>:gTAm.99I9?rf4Ua+4YtdfKcZrRPXh#PLNh;
%L8h/,bbkmIZI=fj[M9G<;%(:n\Lb4^]8U,"6!"kWVYJZ&n,t+J"na.a`^hO'6\FPhCrhQi]Q*j4/N?-Rh9)lq$iQG^EuS.UZlCQJ
%\8C?JVH(!@(3>-'l&Lnc%ttFu"K,"7s3SW%A9oT;BqD`2mnsQ&o?kcF6PK';"_$pPgMSh!;9RktKH/A'4U*0,UC$_JVYU>=AI(Z)
%\)4J74okc>gHfZ5Tn0lZYb7A+/8puQ/AZ?Gm<l@=CuY3UA5Drn&f(n\1SE$%B@*oGlFFE0(+)i"ld2H?7-23#aVlodbZX(=`HT=H
%ePdVZZKMC:%NQ\/*rN]]\N]o8Lt)[($pb(F+'AnH\B9q=KH"&79]cr$=&Nf"2NL.3N,%IPl)m-+Fs5fK!V(]m`;>H)34.j"_*Au+
%303b?Co&[>KYa-s'uD2U+ons-30%l\@43rIQAr$#;.4o].5V,ZTccBnhV)rl/?BJj/Yr6MW*7&T7Zsp9DR0U!`<`0AB<[1C/'>!(
%=>oI[fl-+fYduSA:iWfuD9`[JViB:+^b(Yp5n"I#e=b$3MNC+)0oS8#e*#:CGaS%0_`H@-$PKd\C4%mJhP3uTK/F!s.a&O(#:!dZ
%i&WbQ2;gW:_i:_7_LgUecV6Kfk9s;a9n^D"c!t-oY*qa3>8&lc*3H)%157B"'r_TBTm=,di@*[XTMZ.tm<,*Jjca1f>9;c%f:"KV
%FT.ZtCF.h/5]OZXLW`Q4Mo40L7Wg..8&89ip/RGJcP/Q,<uWFlWUgVmaTBFqAe]SM9>Y8N]pHo%obe,Y/@c"MSHoCng.],Q.s$Pj
%+"*5*KWWs!Tfn%*OP[$i#Mgr?%sU#gn:noH0Au2M0*876/Ht/k!Yi9J;5m6k+f/amOg+Q\qu`;E2C1!9TF*quk(Dg9KSHXA?<gAW
%DYX[d)%oL\,S\!DFo=pg/$GA-TaO2?h[8,HIV5?L4Cam.A1?B=:e!?*o_F;d^CKO(^0rYr`sY,DEnD/Ej(D_=fF[3kB"NY.nE@*Q
%L_At]me5VG_cV*d/ImCmC/\kQbL/*jXZ):,_FE0.%BQ.UE],LA;("4W]IB/rY/a9E39Jih9m)Ha5-OO<Y>4n&o;bXA14Xbeg#+D*
%YuM[N0=)C'rM\]gF0BF:$44P].]lE>]f8ji-o/(rV&i:aB?Rh']DS@[jtPe&JXC+mkQ2J:(7qJY^roU/]O6$1:`)`R.d0=,LDA5p
%20<BeXC)23n:?DR_A:t90?Z^[_B=$a*!YIV"52Cn]41%J>Nr=o6A=8\2p?"lRPN^:!)!CE$PBK("N&%7PQG_7LLG=<eY>FD@VYZf
%W.e&WG`gX[85Rai>egZ`A7n^'Q+^>3kT2_2Nc@*H,Z`&5f*i$@e(e]%:PKcD<8<:`%ct*9dXONkgTaH<(VVH(#hLdME$9piaKOMD
%Kubb8b6I5M7e'BO3Rr>mC^?NblE5>(&^'d?o5'q'KLZL`E)m#AYE\%;@IU2AM`F:%G@?\[R=$[/lgPjFG.:Y'Loe@E<t6P3@,X;,
%"r_G.@*kj2)A_KOMM0"/0R?cJ]3VWkZ`oFCD:Q5udK[g=6deh>0O%(`q+BCh1rnU;AJ"/D7RTdpDa`/cqUAIsB9::SBDrIi3Rd@D
%?.9Rr3P5ri$8+t89fG"@de&2]M&2t"dBC[BJOi+<TSt9igKm!NA\`nfKa`M9:b*Vh[`:=!gLEh.oH/]Vjo*.(I[9/Y7ELsj^2Bt1
%_K'"cfCJ.pdS1UL4e!f/--`dm9lCe@>]]`^A"+[8`n.Q\ATM3:Mt=JdQA7d\eU$Y=$*=BSY0-&i12kmchA#P^6RR[@Hjcg=VNrq+
%3A.WA+,^dXiqYQh+bCmO<-+NVZ`D9p?a\0Z+Y2rCO_>J3Z5gKXD?\60BbZ8T1UUDJm5ceRk%.Q^<_-Xg#8B!?Ajf/>J:SRpDGb.W
%O?l[U-cp5^/58FS_m,#VO;?j`;Pj:cJI.L^7?]$#F-^DJh-">B+<WA"-0SsWqjsidJ$ChM!-8l:`i5P,Y$qeL31&PJZ=%5.-h9nj
%9N*Q]\d\l[Q(6dT0?,k.9@.5,N.VL$Fs77o;\k;e"Zi'N>S_euXfg8ah4#=K4VZ3[R^0@hDb0s!CJdK"5nV3I"d?*dfeOd*&/Hph
%K!_)dcidZL9O0XARAIm<@1/'$%D0Ebar#t^-C/XW*ZI(F%@0mMT7t6u<O-^QLS6n-5R/FAE'TN'&JU"6qnBr]+\n$S//<Fae$Z2E
%Lu:!)ojtmNT"5`rfC4-3k89$A5KEW9X94T=b6bE6Hf2VtdaVF/OA!bMQ<;ubT*d:J]>+>pm<:n8,9\M@.TXo]2u;%/;a,VBr1bH_
%ab1uSEsZ_%38[hb6,nVmddre?;STtM_#s6*(Xo_-7HA/9)F/OZG4WA6M,.iT<[O27?t<B^i4E,)S%C3kVE;ADc>h>TeCBjp%#dd?
%9jo4JZO7$k5%J&a3Po&;aClebCj@i4=WK,J[5_rWC';FD@)_=>j&ae(`6A"6,*Gd(!eqtdT7WpIW"AMj?-aE):CqXsglBSODI?AV
%&fj9n4p\ikUE(GD76K?u;4]m6=8)X`q7D(s7*'b&*.:Q[%cJ$^Yqg#))e##qn4D(o7m^mW,g8RcYqZ+)o2`YGf7](q,8,5ceWOAY
%0._N4dE)C`q&f[_9o;)h&],lOPd7=HZ%AAM%I16<otbPV]l+\Y:ch$5ArV!4,T]Ln4^0q#k:a-%4)0Rb@Ufiq)]lt`'?+>La[7Cl
%#sc3k)kCGNpOi6G5ZmsS95dY'#t2b^;a=D/QHJBK`KF"KT-b"`Ukg@l%&RU.]A2uik7jpa-pb?]M`AAGiX-V;0L3]AcN.\t`&5b\
%MqTEiWcM?a<YH$/L^s%8q@`DCcP'rqI']8tLPPI\$,T*4$GOOO5uH+T+g0&Co&g[YpQ)CcELD`]CN,[%mHP^5qMWd:/iEo^46^3&
%LK(^JC2bOG<`[C?q3LNjl'C;r0G],%8r--J$7<e\nsMED!#^.P#uW?Ih%PW,UTfW7++umMeZ7kY5.5uj?+1@J(">D-M_6?'-HVVB
%4Y4d@Qan@V?=-H\iY+Gm,Hd-MR/S'E896W=8Wb880n.+!MZF56P!5SGrWHJu!<MrE&_D;VaHIaZ&qWt*&g0O6J-q(YFj=:ZJ[QY7
%PLaXe0_RU495t[5?D4;,GoSBLgi/--FZ@k>ah),cUA>6>U(m;#0aEL,QO"O02)$Q>cB(@8VE76t=@LuW((*[@(+#8g<\cfh!*&N'
%Y)Yf^$0jd!`N]8/2Ul?((UI7Z7Y!!#rB?k8dtI_\f/DFCF!`Z6\!sfE!CZ4c&9.d\Q(`hTQZU/DEl)c]//F^SZVMC.W"NWTC6KI[
%'b+qkcdn5V_[[e9F^!-L"36tRbcE]@N'/5toZ7l7l+rQ=#A>uQ/A;4o88G,59/RZi$FL2Kp;W6P#%O2Jnc9N,]/oO!"rcc?qNL9&
%(`pbE+uPU="'VUh-;0;Jgd'L^C0'6Ro7okj;0<X>;5g$b2A;Mc*aPsCHGSO*_o50s=2la<)&O?V>"#WMO\*j">(]Xad_hS;L+Y'K
%E,6?@\:=A>I"J)u$V#&H*Z<QQ_):mUO\MrFd/XU?WC_m*MKBt7k8ETATui:iDSa)MDui"d8!l8_KPXOZ6n<oD%C;d/\[G%!%64#o
%m$u5L5Ac<FNlWB=R<UDm0hlcaF<sJd5mk6$*cBaT7=CE2A4Bc[*AS12258\'W3mg.MOZefh51gkK7,r+S8p8qDd7INh/pn4o/3<4
%0IqtmCI5cj(-j46RpJ#f$K#TFH0i\)_"e^^W]M]`8&'.!d3l>(;&#3<gXMn;/<[Xp8P&RPR\=k,U]X96?Fht7=buscWN\h^\bEs>
%T`f,FYubH3OrG>W6*ek7)iLaVO/Rb5<,`.a-HME%A%O>l#Db54>0s+"%d_NBbhLGtC5h=k9>:UH)JTd3CLs9tfXkt<j#+0aZXpoV
%Q8*YQMgUGlXlh?]NbostfK\f:#+#NF5^[c-b@g@>7/#f0ec38+Bqco:Ha293>#Id_H[$Q8l'Us3Q4*sDU>E].4jrBYU-]3-0sbBH
%.10O(D(rP:YoudM^J$=D\<oE\@J'XFDn^f)&:KC;jiB$tA^s[?DtLdK,b`anN3,%.-F,PkT@[5)S`"a3L@h"l#740?f`hr[l8HNt
%Cu\Ok$S?om'ck0po,LgmT?XblLo"s@fs;h/cum\$kXVJ*WZlSbC(*IJ>.=XiM5[$t5tK`TN<70U).?s(>7tHJboZh90"=l4=r*j'
%Ek>Um+Q#4X4I"N56bYJ(C8)_b:7Qp+UM3;1711VfE_^Be@QCB>[;YBn15B^ENghD9M9N`?XpCsqne+AGq&6+J5.HR2ZQ^"%]>Ig1
%/Ps_R8_Ja5'ZKpW`&^L6a(\Kp8WI)'7n5>8SP552?N_j=,_I=.?i-Yk]@\U9Lf<Xj9!31`'32JjlhP\@&L)k6=JQbVWOb<CE&R4D
%)fu<2OMT^X)b>W7R(r",`e+=J%*)jW]e0Nan2cf;h;Tuk-^'_2Ac!BMDX_)m3PhWg[(Le8Kb(>0;gH4(*d#-L#;DC.KPSN&C71?B
%7qArG%XIfQRB[<-d:Nhu$=s@g*8p#$n[n)NdfEon[;B_NkPGkF%Vl1YpcP9(QSp\lE$a"'=n:MZ@\H,qP#?Kt,#f23Bso-Rijr5\
%:P=Z:[M8,l$o(92[U]-KkAK_5Ajf`F/;Fi%>fQaok9A,Ugom.[8(7C8Dq`cgS[oa.*YC?SA&odTTSf]P+D#O=bImrTYHI_9np$%Y
%Z16[.0NbD0l*;af&&j5OUSr:6gf[X^k@A+l.%;$]=qhV/="NDf!tShO*!kM7p0h,QfZm:!`Ba\KXgJ<"&Hsh>p6+4"!Oip^M2/pQ
%bq]]hn_=-YHHo:HgPTB)g(.U_4Xmt9a3=/5=&,I$,d`LI1huDUBqtr8F-'uWC`9:^KXr0-3H?gjO]E%-8p7P[pY,krLJAQH!U5en
%rJ3'D\q(\>XX>Af,RV?hQB2FuGPa9&2H.rDaAFZu63V+34[AGFBi;_p*k1NJNe<"tg2*Tr7LC"j?0R.H!&@W'T"Z'T/W-I,k_.X-
%ak"C9:B$[+F]:[.$5c\V^;*Q]9%J8EFnDJg%guC+mfb,%mg8hh^n`9HZnTQ^T\.O&/"3#^<']3t/AgRjiZP`O<LnDW!C*YUhq6'J
%HMYWZ/:09,KSj0H<+10B_'a(B/DR"_DZUa4h*CM/LX20(GUO`]6<2"`FV=j>QdOVikHt`iVm1a.QjQH0B;)r9SU(+%>r8-q[#md=
%Bst$df:)ob1W2qtG#[Haq.!!t.!,j<baOi3d[G4t*2<)<_IBu\MQPK=5S-ZXJ(2b8c?BrgHcBPrd?d@;Stn?i(IES7qO4mc6P]tX
%B%K=9=9:r,-u4p?^WW0fO1-OaNDj?\XE^)q`YE""TZ1[_S>;rI:"U#<F2Qtf?b[hjlVPeA5=KjV+>JXi%-Nj6gl9iQ*HR9e);lqQ
%[U%dO;,#?m!<D;)D8FbS*"r0tC$9`McNMBf.M^;"3.N!TZ:'d)!*1G;LH#PY5<7Qe3ai:L8J5lEE#Q(S\sCH'J2g*%T@M[%2%]',
%KE2[2%8NKS#d\=qeu%WeUP5MUV=s^`N@F_GQufMc&%UsWO?6s&b:nsBi8$m&$&2ks,TbI(oD?a&B_-+4Q^P:6[/qVHW,=reXlj4T
%#1QJ?)nk!^/qSYfk-M"_)VcT9F"S9<a>EiNM"oWch(Q#e2.@ZF(8;$;^p#D/eoaVnT'A#!:K@*LJ)g760lCueJJ6p6%XWWEfU=(#
%6]L5SlNFYE:H=9pD0@Z8oTP\*+8D/$"?T*qa#*Q#ZoN*lA#r6Zh&Y<i$?S\S^,<Lk3<o"&cG,rJ)[9kOMoa+YRoHHRgf!>G,+dQO
%l"70#=JAaT'\*cQn;off8P`*s%=D'N,/^&fFt]29\f=@6*%k2pTP(Qn(\&B9,D@Fi0TO%n,M[cMB;35*XHrF"=h&Vj.0SK;CE]3b
%`B!)3=lP/P<C[KGOK)UD8#mok40#s4IFG/-Jc#+V:H.9YO]cUX'k#1mY0YdH=l@(*$U.q;-E]?_@k]l3;O`-UVd8o])ZasBK$KmG
%O)G0\?scRT1dr<7aU;[)6D+I*]$$2jQ$V+e\A?idpVZhhFJuNg8;Cnu@,.m*W1S\J+Z\li"f@a0Z#nIjfgiEsXJY(VTHF?f6&Ho'
%e^G#T%\+k=mBPFW@rYfQnmnAc.+$O_+2#ZGG&hr=JgL23l.oh?^d7%pD)VPT<[-ejANOHHjSnW]Na\k-s'RSCR"ur@JIEkmKa;4Z
%En(1!itQ\f'a[KPXT$^s+8d>*!k$sl*\@:==$FQ5h=^=TF65g3'HhoQ]*lenG]<XdD)Deio?HbjRgFn8h/FC1Yuk/;[CEGgP&&;\
%5Q%B[IcU@H_]k2o61F6b@"`JdMREScYld:]WjH4(p@+a=W8+e,,VnbXcG8MpNpki+REHhT''6scGQ&XM#\b)m<YcZg%d]u@e=K06
%6$*-\qI-Upp([/d(3'?JN'9Du_:r<s8UYD:a6()Q,^$G>:cRe\.*%hI1o?jYJE9Np`_<G+DT'j,O9R+UNa^=Lp',/n'E.DNf=K+P
%*VA<kT>0n3/9-+K!G`'e!l"A"4^gl4GX'.DmCbMXD+q]UF\b#]oVoj-P0)18^)]V;Wrm+"BH72s+hH-5a2B</e.&(Z`-6_Mi!^p3
%5^g;mAK6EfUofkG&n`@;O!ZE6FA*\4^K%.//LCt\C_n:#Mm[39:+^ElK.hhH-t_c'U'aqp1mEJT&-=sZGAYpQ'[X7,L=jF>bH[Ts
%JLgmkb,][HWsN1=pSeRW7mWN`>_foKFi39>,!tpJ.!Ckr;2g,7YSp6Fb\ZCcdaXo**UO]M*&8^uQo@<d$;u,@2kIK3Tj,7B24\!g
%S(Z[J@+r6D'V`?nX9#I8,V4lCb&%Jg#q$j&DA#CgWjn(Qq$0J,p6uW`cBJGoX<(MeG]$0"J%.%7I#d_%)Du/!PD-3R/Ar]4X+em7
%R1VsF41iK5eO<IlXP$A<MQ.XBWM^cK?r85GUsik4h/]B(.oG1@/C..T%0=^VLM=H<kEJjTKm'\jf@65\>NfPe'c&K`!T:eCi[P?/
%V_ft\e)mc+d4*EoS30Jk>UW;4Ho%]2nQ^\CAHP.SEXBBRKDYulpO#X*jFXY;YpT+U"[]A)V:7+MK-mgjXZh]!C[GZjgCcjH\aoje
%9`Y7m4P];dpa'T\&(_NVC&(P_5h?&MA]8OmO`tLh>C@QANu7$D]Cap/s4c`*Ii.V2rKj].o96IH]N]>!8\,ruaW;+$**/#P=SXG@
%J-3@Wk2<Q(6$S-!_<7KRqCJd:(/+iu9<YlH8RqTMA.:$.8tuW^l7('4UjX=QGO?tQ!ki<%;m`6:"Dp0/E(/9K8^M]Co1JoCXm@!n
%\SgAL=9nLhTsNKV8LM%g2"%O"Oj06iBm('.niAk2eFkXZ8ejbTRN6Z(kd\ltY"l1PfhkbYI@VDM_rPJJYqNG9QB0LI`g?Ke?G@$B
%6Q/LJ#T_gAdt?k_QPFuOHjlf3U9oc4k2NM[RrSK_Z6L0F*)*'c7&Gf)O1IP9eA&gZa)n*3)oa5$=l*k_)L#?^cNk\],]8Rf:qHi+
%A&hZX)ZtCpVT/.^r3VYagiXQ1Lm<[c.7ocsWat6-^K@^Zj065Vq@FGDM9&XH<n5fHj#$G007o+EC..(kJ;a,0_+IIcg_Qu%Uu$O9
%U2P6[YdF&E_p(o_]"WQ)bK9<l+Y!HeQ+m3\+7YuuYQd#Oo0,BV?V1NDVBJnlJc\&)ic@fPb6&c8pp<J;=p]94p5L)Y#U+#T<W#TN
%@ocYGP!LQF_sp(k_7&N-DO-(#p8Zj$G2&F5V:WDlc7#*7;)S,i+me1g"C=;/(8Y&Z=(/bt\M!OMq>THNq%";"f@)*1*B1XCR3u60
%Wh,r-#O+H2%`8B-k+^/KQm9B_."9"UK*!Y62<!D!N#@G.#![AiEi;p@[srY=ZtS!n/%u+Fi2G^oGqO6Gp_Qp?$"HmdL32m30gjbD
%[o[ChRs-`Q_M@Z)n%R658(9WGhu+odW^*^/T)UPQBRok(Fo>&=!PlnG<:^B7>ci-)!p&+V^0U$CEdRd>((E[IYO-2<$h<qK[_-VQ
%R7fop`nSc8;P0RY0Ao(m+$VR.rmS=qB8?\VI:r7\^#*[0DDB6oLg$KClZ4Gg4gQ^i+!dp;QZ5q^Z/.*UZddInFYfJo%lJZ=al5Ck
%+1+HKiH+O(2rf&H^<ie@]8\P@nHu8(\!cdCSTeA"*QV0;8d&E7&IPH4H8Dqll%OdO`m#K1]j1uie;PXjW[L#hUT2=G;*+puiZ)rK
%EGrP'md;E!8po^3&bk]Zk=^5P`4'*&Lllbp'8n]Dmk7/WIP[@`F*MQV?jh4)k\^;!n4M)"]FI="0=U7>2hQTU.ps3`[UQ7@&dc_s
%L8TrTqa"GN;6NChViA/ipSC&<iGFh8Y$*5:r6C4tZ^\c8Y^VGr"p#:FkuWPB7?t=7"&b&72BAEDT#%`6^-4itqBX('"T6Vp]*&st
%Rnbt.KS/KLT%dE7o#TDlIsS,EKr&SAQ;7KNhd:1gR'];)/)NA1IkS8P77*tPhMkLLh"uQ"bAr94?YnLf&=LKF-P#JA9sSO6BO!UU
%/IO!(EG,1DFC-(em]:hLoV$ZM0`j_[X;X;T_0aA`'401eC`_/T+q%>Z<;07Kc!Gj<=_n\+V`A&n"#-[ugQaI1k01"naMZ$-h%tE5
%i_FdfT-*T9#M=HDI;S^"ZFj^84$/A/L)N5bo&N"B1!Ts9-0&!TA5kGkOe=u4,GXqlQ`g,DT+Qg+m;n(Gci.kNP@>U>HC6i+/c?f_
%*&4sfa2$0?5PpRlP;[#lA[6+Da"L`icZt[lT.CDP4.0u;<Zq2MULCIc!OPT6KQZnYhio`Ee_c<25i>2&fp?.WE\uB#OVFcp9o4g)
%]+[iuGSj$.2iPoALBr'jA-]LPMR>7/6R+,lF3r%K4^\^kF&JmgKuUODY`[&EOkeF+:`)?R^I\@i$`RJDcG,b#Dj`\Z5Q;^]iq>GH
%;(W:d#pAh+Q?AR^:V*%,<1=rgV%"q/5L?T;+eFI2noIC1HlFTj0EoX`7,@VRF#<u&E(/5D=Q\F=Uk8(Aia,fNW'WY&r3sI(Inq9P
%7\9IpZJK/<R,D:(iArT\_&H(p@ZW5DXTcfka@($ggL/"h8MX$UZ>KM!V^`RlW$16Fg%5iPXp@=S<NP_d9q[Af'<s[Q5PVQ3hZ3C'
%M,P?Bn#IjY7DM^U>k4^9"ZZ2M2EaambYI9SJ]ea4p^O#QDjHoHi-:&\pTd]*&1/,68WO<i2-aYf.!++WM03#*/@8mdiOMpJUPZss
%gFq4O&G,T.YJN:RLX%+C[6^R42kfD"(!)lP(_:]"*)_*h\,5WKafgS0QJ6E8@WsNV3lDqTdBI*UM)V[\:Zk$+E[<Ae;:]+;%\#jR
%HqY'5rNkj7=\46?Z;7>69<eA5jdiI7kaU6(M(I3GEk7o7-CtS*UHt"eWKbeKVMEh'$$s0)=KT$L>JWWYk>]P\N%\t>D5X+ngFUp\
%UY$M[9Pdt?0.[VGj,7RC3f[@+@ZppoQ3et(FUa'@KR2g$-.00tGqWH]qJBpPP8>]EO6aSlITC=l.o[U-as>8]86s<V]N+;&h0k70
%),'+i[IrqQWO+k(rqCo]f09A7=[J/`\?9uZ0;qS77G,GN_MW]bW9Dp0-IS(M!CZ+.4`jlD/5.pQS%CCZEFmgO;?:<*gVdi=Wqoj+
%(Jo$*DR0sANq<pi1.,r!]N>s.S.Ee)fa-$i3qQ%cRg]suoZ4/kZB&I5hO>D7`A![ARGcFo-8:0GA@=.g5,VQF05D5qL0r=YC!jYK
%cS&#A@sVgeLqN2"?kjJ0/31(k$5L!W.^L-Q+:4fNV5J&W4_Q&6YeR'X<G>T;j-[K]D/gqX'q:R\:U\EB"B0\d_:"25:aE#BUWML^
%Z?X7@?t.F_<a>*j@H+<?/bXNQE5]Q8KEUZY;`b;;=6llWa-dYj>>pP$B+#CM/DkP!e`CA]qr>,IFan!c]DoZ8Jqj"EWmp@MCn*Zo
%+,_[/;n73on(+4&o0spbjnV8##@=lQGW6XHZ^T)Rmhh#79\G0os8/,WXgZ/$.D("NG<eghns81.pl!UZ";<@8/RVJ7+^JtNkjBcK
%(\PkJKJdf]U(E(p.+>Wi*kLG*7FBs*g+As4'Dilk%uJhEb4:=S)@g+K'JT51&_:^MdN(10$jVR>3e:Lra]k'EjfS[r@1pJ-TS]p;
%DeWLS"(&)Q]Yle:8n,sQG"_og<;l(hD8]q18@C:?Gs@=r9?R?\m1p&4''f[eV";512cRg4LM^pp04%9)/EK[,!M3UkpfUu_Q87Xd
%^`)ek)'OAd[4B2*=[>phU-$.$rCVY>VKdDCMa-6oCj@c=nLXe`NXX)&ZCQUp;XiLk_'](4]"/p&`.:(IHFZcOh/G=3(Wt1:`sRlu
%f^s6m19FJurG7l!WaZi-#L:6W3RmPMf,VLu(Z!f7'Il92JSCgV)+9SQ64@k.iU_qZl^0Xe,h.$&c=5F0.'(=Mj-H/W3c>X+Ot[c'
%2LG(QRN52?]s02b1bY%[?KoAb%Ld)ChF\^WNC#2)?UFE9#XnL#S1j<:VhMbED>JtN+_Qui4SJr[d7"`'m$ORjZ%#.H+nJt"iTB;O
%8W0iW`X'Muo@t+:0KnbCS<lJk7^ZoJR>=/7phk,qZb6HFo?qEo\tc)bRjd^riqiANfGm,*KD0l7DZES4pfo#3.oCAea0=h)/9Whm
%30I86cq>"]KDIH!'VNrFSGIUfeOor1Ad+32.5A\o=!:+LZDK&'D<QG0G24rW9jf9ALHDr='P,K#j1h&(Q1hF9W3'\GDjGFZQ^/O@
%`=8"omC'@]g1kA#q2<?"N]>XomkTH9@C5O=_ogJDlt=G.-9A,bTbKtLkn+"Ejd-(]fgqM;b*%[pE^Or8SO=\g,;oU=6"Y5-n@2p:
%jLJ!k)&=i7_`I1oj,F#feZ^NCLT>F4,9eX)eJWraZP-gDFPN)(>Xo[ig"4KeA_Ro$[f_CAMKBalhVuc_Y;Z<7Rl*jsMn?bUG5Dps
%.@?RA\"["):"t@)m26ugEQrQqP:H,Vn%V[ob<cB/Aq)fNS1#gHBj/:\HnuKD20",XN9FQa#=9)2$BSDb$6DH8!Zhf1pG`%abTJf!
%/;^m#Mt#Wu`c&7Drb3O[5:CY"6!b/mR[s1`>en4UFTriYSD8g7ob@&8H_QW"pCLbAQf8f6psYl#983r.EuO.i#5QJM>Tl@R)m]h.
%?Z&Ea]PBp>c0BY;W0?+r3o#O;bDh=>)L.u_6%W;*Q(K](-_L)/bkf-3J,[?7Q%8Q:i@C(\>,i$4NoHMo<6ui^H$7#J4de4iau8>?
%a^^`4^+(Ui"2uK+p_92GMTh=$"M[*J+&;m#[=]E^dY$Kf5[oHbdRnWrrbB/nmU;B:#=N/0oDDIB9DKA`S]!D\%8#U<2]*u!cs^UI
%RpihfkE&jf^70B@n]=B&b"#sUPT;\EhSJg'FDb0TLgJZZWFTK]bO!gWr:&S#^6U_g5AOSr\dg\4b9$=J^9>du8;K:%1LDXjn2+UK
%E\;fJiBAt(pA'S1q(BEC[`>epdTi'UeBLHTZ'+PfMa\`=[Y1([2(EmXUiXH^>p=4cI(c/dre4+j<BsiG>*$Bfq&pJE/#8IB.;Bs`
%qLI2ePD7s#,<O;eE5=cP(oT?!b:g4>JE*7C6>^?0I$[i:Qk^;rE%SUROmBH-D@:nX>V'Ff._#\\ZVa+FZ"?ecn>^\oW&4Mo6:.U/
%e$5,73R#Rd2T*QRCe8s@=Uq.Q/OWtF3?Z8e?:Ur^f6XFoi'=,W@7>&9=(>s9Vs[eIH):IjdER-]2goeO3Ha)m#JcpWe@=VR\\"_G
%8[O)L0%3DkXNU)R/BWsH5"sQ%$Ka)Tc>o*kiB#id'qp)&pQbip/dapCP`u&C6qiVt67P"NOqP%-R/7.J^,:+lX.OdVmA+5\#_O`L
%H6f(EPn1n-:D\(fbaW3MMCHP-3d*uuZ#DHL:lSl!Bd>6b.95]l!BmV``/nR]T1$NfMR!j0Ts+8hO:eZR#*G.@E%aQkYpn9$6JWE'
%r>lkN<9=eiJnZUk67+2B#-E8)9*F-+0ggmY9^\@Y0>;X[&E&l<PZ>/t`0Rs(V8H#"CCJI1]#SW:PDkXr,?Ud&gR`U-#W\XB!iFtd
%3[G;;%rjh"_-Blu?-6q@Blp!p(ep^ZoLO/LYtp?n.R?IaM8d/JQcJ5<Ve5p#)fVqmGi5,H5(s9s2KY0ZL)sj]T9a38&Z$E;;OdlR
%'M\)(/<+oHO^C@l`M^kh6A1GhcYV>\Pj,um0>@4K,0:HlLc/@UHahaeb>LP<:kBeM.$K#>*;RJgci;snD0+q7QBt!W^fH];G,N@O
%(R*q-==p:h?GRWh3KTk<eafSBUq?,M.t7Fl7ieGnYLgG7m?#Q/JjL_l,G>Ru4cD<&Rm6-T]m?>6JfOUL$[t1X!W?S8*Z+R=GJ,=Y
%`,^NPFtd"A"c%(&!1lESR]7hpUc6Agn`b@LE_FES4F_)EE]^R4@^,@G<R8`u5or+njq&K33DUf#`8k)MemODF3?r:kbV`isY37(3
%A.g"H/r4$%GOJ?6`Xn'f+4<];pooJK1G=YV@%ZOI_.8F8.B"PFP%@klS-Lf>`i:OX;m=#XmD_DKD0r<apSJ!_,K?aH`j*,/5ql04
%\4KOHI],<TSAfL(>p:Tfk[5QD7%=s7>#t(V&ZM^jdu0jso^8n'faeOKhACiD-njFk\eWUmMSk`*De5@$QMVF2E5"mu*Fb20W98MI
%7PCP=H>FY@b;+EX"a>'J'CiuB,-.rDd":hT./ZrfS@,4dl%F=.)+AL,UmX^%=4P9UA8;L=W4if5np;)HojaUp>W1U0YY^HH#ERCP
%$DL?6ffJ4SC32f%/NGqhi&-'7eL=]^2uH]p?[V824UUj['bOnnn`TCL4kh(jdLO5TS)F'qj>%m;3!]_0RPQ)1!T<Qn4#&9UQ<l\J
%_3rXIEl>o]5.k).?WIgXr!h6VMYnk,J'C/-\jT\@Vd,&;h\dXeM$f%,<1X,Z>>8H2X)MbY<XUNc7Eaqo(-+j]LfjESl,jk+=XE\G
%D5X3*;,uiARqmTBThs[fR/?Qas7"Rn&;un_9TqL`"7DrO"miJ_B8O4(CGDYZc,Dhf#r)WWfhiN5\`1pdmjUE_`%RC(JM0Vd$!,QR
%[0.Q$%WmDBglU"MMujbpqJ,f@=qth<89TppWC;qg*,@AR@W:n1-M$VMXjkk(=]CbXmKc+2Bd\\+(ojPaa#!3><.0NN0F&:<ou(C6
%$QtMFO*.FX.8jW2/F4m)fCQ!XI4.;2jB>QQR)(b(=+kJ_)S$sHh:I]P;VUEEX([">'o5I*$bmsZ!@_I]Z+tGRWSpo0&&^&MP2Mrc
%piG-'V_dsM21DOkhf>7oh>g/oH<tZK.0=*n(Yf!X@gK%q\`hnCWZa*Z_`jJ7ef^@G>Dtl<h'4-]@G]STlbH`/Y"C<ra01@ZCDC$2
%d0!r9nZu<F&TR7,GL$C(,([MlNbKs9Bd1e,UE9o5M2q9M1nSG'O09f2ACJ]Cf7/$j5CCo].c[`[d'T,CET2#F.bs;`,fnelWI;eq
%6IB4OpO)m`_*:'k3T/*WV2!qD/AQVQ^Y\AO%IJpTI*Ynq,TMm$C+/C&NOHlF7;]/GF7o44l*.\[Z/S?SE'`fF'tu/+DZTIrc3CN"
%=p2-rquTfT\bUq;Xc-9EiUAa^bCPr6c9K%EaZ,i[WapEg!ZXFfPPfQgQuFj?WS]NF"FR7LI2[EnWO.N0pr$dM<m!OKj=ch\L@ME+
%HML%t'5U8*IGr`V3@,i)'&#^*bc/"t]3.R<2pG,Y79m@V$`_U.O/Zr)eUMu1>]1*[Gg%<E8#RSC-Dc2![k6_sYRt8+kIDuN`f`Rs
%['E$[%XSJ[RL37,,NBf%?.6rgN4?]7#a<?1YQc7J%rF?8N)U)$l,7/'*#<i,_6+g8'jM8GU#@Dn+R)Rps!H%!G?*0R!#''%Q(EPm
%3Gq25B(fA`FQ<)$J>Jrs;&C3kKd?-sMQQ6PD]ZYE\Dh-mYg1?YNXP&<@b6oT00p=%dj2b?W2&j"GGt@)oRm:%CPN]8fb8,WJrs/X
%Q3u80.rfIuU)]'W!.8J4@jdg=QQm.\fBF'6F4W=U/[l4R6GjQGDD8=4>['?h%(('O,*/1N^Q#T1HEj8.Hu4S\-nc8lB^q#&;ht2T
%g0a=qL*@i2RUKV'U`np1fu:!#$\=a-NoKAl,8<Y'M8R^ch2,A"Ti9O*'8PO/8EXU6/:!XjR[!Tg8c)=BKU(9>7=F(9O!aYk=kZmR
%Zim"1cZ%fL0\j<9ZD"-WdSb'',EAMFb^4r[MRBQkEk%#O&OT)Uh'DC>F;%Pq1CX$S+e_?p37N=tIh;94LoEQ=U5dGH@\>"SVG=JL
%_aG]G2bC-/5TF;$l,crjmOF$njoXYkAs&T$",jC&A@N9'Ud)Y+JYdfJ;"0ITS7m<EI,MXW6fahoPo9NBAX.d(;?Ug/_bW@`gDVls
%\36GkZJ)`<;HqD+%X3T\[F?ao9,V"-WF[Mqm/$;LS/nKrOJFA4as+fdqikt3G@nJAJA9Z;nL..eYGe$*R+Nil;a"Km86gl3p/n/k
%OY.''[<^84E%ls!Q&(&rR^NmlQfY6B%"TrA`iMQh3G-ZQnqFo^;:!@!+3hp!G?^DhBnfFt/<8l9;G_UB21V[i.V!El=3t0Q9iMTT
%M<cBtC9Q,!TQSM"[Kr6\Za+;tWIsJ0_\0,'.apdj@h##H>-f,WUt@>i+^.&#YQqJ0`u6`#Q-EQ?RS]"f&rh0]lsPOHq<fFmcBQE*
%Yn`uiWR_a<?PE&I4Wfi)XW\9D"tf6g/QOCK,*cm8ee&(X@`;X$9iSeeMDc/h=e4A&?L^.sjMaTPqpq3&&)Lcbpo[,\p@Hn%>?sXP
%=>eE-:;AR9OjM(5Ot`5bmr`4Hia[+BXsN%#<$C/VUs89X![\4o7$qqnfj_Y3Dd^"ba3%!#C!MHTc]-t-_).[f6^&Qh5JWSk;+FqY
%.<2N/`o=L$fUAYK2Z*GBdOCp,W3%($AX"%f+hZ+0Ke>qZIT*,O*_[5Re*m`YnhE[jdi?0.FBaR#*;6QaH2I<Sp\r'uQUr(WDCj/H
%^V&$r9Cn;#V68S>B4D(ENrjYe`I-PgCFp/i`*)``.7p#<9k4mQJ?B4n+lkJn\0#VnrW2M/Qjm,I7S7UC)>ds+GO!A8CPo3"gBGGB
%lH:]Q#,*j\hh1MkY!CgC[GbATU^NIVOG9DX/TB`_>dJV^3n!^Qmd&5uL2(`1d#T;LD"5\\<u?D<plq(rV&(&ZdTXJ>&<B1EgK*@:
%<'G,*;$#TQp*NMjWa[+-1%)B((;^;k'a!qqD]N!tj'#$EFU)Q&f&mX$QmH[b\lE2@2e:W*FB>.'M'B_8iSpRP"^1S.&)Tg[?52e@
%I;tp*"B*g;IPSjOi;(%Oh)M<hG=/';:h_Re81lP!m4bf&`g9W,Z9Ij]Kd:KPmtM^@6M<K1<]I*M6NUVtW5=+-^nqB^8/N$*JBT[3
%_Y(W.0+XuF9cE7V`@$s4F&6`NGHno6MD$n)4aMM$J=Yu[+o9#Bm.37-!N=j-:]in-9K2I]9H0s#K3)]XlZu`1HG-r!c[PNFc,ZQ?
%+p;dmFaj(Pdh^=^,#^fILDM(D#/B4VU$c]Z@-?9Amc;%??-9ju,cOaWmbs:<)b;u\04G=YL@R4?2NX15`lk[f;qAeZ_Wmiu='EbG
%f/*@+RTeFFkP<L\e?+a8;-k4C%:bnGrL.taOe3_dip802'4s#4&4M\Ee0;q)]]7OVO#lrS/s::qqY0jC>oZ.u5T/-b+hMsomS5:*
%jp.deH]UH_[ESG`-eZ(8mj.0gXH\uDg,J"4;ZrF5:_kW'g]3jSVkPo3YcBKNPgeBE8r`DL[AL;u!^OePKk&@ri^[?Q\OsejN(-*F
%+KlJ\9_,t>D_qiMg&p5iC/>6Xh!5'%cb%26i>kb]7%^:A*\M\FU6*hjAL<6]g_OG+5JR&6BX@?K1#s86Cu2So\Yr`WgKUV/TMOQY
%(/AR@9s(jVS1I?:\Nn$_=)PQp'$LTBFM[%.F`h&q4hRbC0MJZNZj91K7V5Ld[h2B3'TUlU^DBNClB+<R[q7b)P<4Du'qbRUF%iH(
%/s+U[mF,,fX1Rje$>cSeHnJ$19<UVUIKi4H@_BI/gR-O0:dP@\70mHD5/):If'+aM8@-8_6.&l."=^mYR+*WI>^6,Akj_M"!Bdg$
%*IfS):g;1`Kq*l;+iONJ0QjM"+EA?OOhmKOW<=s=e>_6D"O@-YStfAS'k#+T&OVLk3uO"iAaonX'94+t9TBCN;e32%*-/VAs%4?K
%H+gcGP9:E.an\>%c93?>#)D%YZ'/.Ccg_=NFVY_4j*LUtF>YM6j*Pu,=b&![6ak&PTdtm?T\Tr.,6flq"KOWQ.SgQ[C/"b[D)!Qf
%U.PFLd<T:dS5[?mW@/<:i!d[`^4IBM'8/;):J1*13SU5c#EB[5B?eHjKsC=E[=p*-!;sg%\hi5NXmg"$#"]kNg7jD39ZIr<?EQ9R
%ND=!f^aLRJ*nUNEbt+qL7f5/-&DsC9S=Kb'84R^d7FpR<lH1)0S@gm`G+QKkmH*OtKdF?c1uu?al.!do=O7RsR$gF4W1S5lXfK),
%Z8V#2.sJ_?95p#):>DFO@5<UVC)oi:dlXVX-dJ4mgp`a%;Kl7bcBtkhpi]n'fTn!0l.qSbT)G^tS`itF021lT?;1j6,N#@p%hHi@
%r\d`;N;N#N,O46l4(#K5nq=d$ke)GXQoXUm=Fs0Q$Uc]LZCOHh`J<QHq-a>(^91#G[k\Y$pVAq0l!$,-`XZ%c//Z`njC"G/+?Gua
%EYSuu2$DaPSfiY=Pd`g6d&Br4AqW.6]OQthnd'mUM\l:o!MJC/6EPi0BsTEr0>Kfq;B;*)KP-6M?!T$sg0mb@"H4e\6gSJ]`YWWJ
%1Lcflq7s"Vb)EtBN[f*>mQG<a7F=1\=ZQHblUGuf>e&Z@M7HTi!a3b2"r?_@0WE+R'21U4g>m/n.n1($8&!me<KL:Z(<"NDlL?YQ
%q""'Te">Iq;gJo:&&q?VBF\'urn%eOU'fCC'Ka-am2@;`,NpO?=$O)Q:i+$$mk[4ra9)p,rQ2bW[5VAV6&;_`K!8l5HcD"dI1G.]
%b`i&Unf`8GPT260HNb%qY]k&5f?Xap)dL[4glCq9_ailk]9oU+P'.bK=,>n)D3/gs8R[4T1+\0SDi93U)-9E^9@178GK?AD[gnq_
%6`HZVBTCHr_o\kl;qs2UV;9P]@E.sNeu%II(XmuFr-Anu1Obu4GZnFXlJo$,NbQEuEMjd'pI^cY,/4@:!^a^)PoJ]\iJF5u%$Ne]
%69Cus!+WT:+T.DLFS+Qk`In2EiV7KS*I9a-cRupfH_B1,*-=r-gl,8D.VoL[#4GS8N+(H69h_SIFG/g.\)OZXb1M7pB9Mc7`3K*a
%\[Jf:N;=ItSha6+fk%].7/#=@_t6bXUUU/AS-olb&M;/lL8)THahTdF8s!9`\DgbJ6Vs#SY`1HdVe%q`hGmgm3sVqP1WAJLE2G-Z
%%W!0u[>!.8<s][#-]e#`4Q,t3']K;QR2(PFE*6KF<ph>em;?Y^A99cAW>&Di>QUT*6;m/#C/IERJFSjS(s[N&/rfY!X;XhaH4dCB
%?^?+N3\TN7S#4tK=WqpHYs"@K_,c`ic1FgJa"9L,JaI9gfU?(Bn6/;-.`'<4*k?0D_@W[#n"Y5%S*ol!#lg`kQ$R/,[faM`).)58
%^S?$_GT9C])as+?0b6?1SfZG(U"s0*bm$2ETt16&_h)(]$^3iIi8nJC$&5^(.9/'JNcgU%J`'i%n\q<&nWg&>b4-sJ26'M)nL68F
%V@+u:FSX_tPUORq$N_1<n31k,BStOs+$N]XIfuO>2Wp:C'%^-`*T>Wde*T==N%4<I<Ga^;6M(qG/^lIuO'D366:[dFPBR87>0bN.
%"DX8VI+Yp#JTbK;qWDr4s2DWn8Cb<6RpAs<s(F"BPD73,-Pp0lX4&dX9e=N$l.dKD1tqj8oD:3.X`B3cVJJ\aRh\ID(7&SC[!ZnZ
%J/NA&RpgVV@C=j3*S@.h:X`u]'A!Zqaj:K06;&)G$QWq]"j^V)1pTd\o&km2:0V1%T(@CJ.Lj6-JKk2ep>**P?fNHc<[o[[QY<dT
%B.D8RiL2Q/<7IOTi*UNcn,Z=O6^-%rFLV&"H>O(+':Ksh\k5R:1&VV^]!=4>k:!7p`DW_uHV&N?=2Ju#9J-^=]Dt]4eg9*&!t:?,
%BMhU!@lT,n&*97Tm48_d9("*kKpd9<K9>g[MGN?b3C#aiqp:'/4DPG!k!6#h.JCI7GfKFSV;"JK`**6;m*kI#ZH\i#5t5Kh.4:u,
%P9*dDIc#T@S"dn*DR\JiW^'R5J[,2RO7/>YD[VV033+$*%=I=bq&$g0D4&SspX_rGCn]ccoe8o+9$8f5XB-`h.XAn'omR`Hi*0.?
%;J4u6b&Gm;0m?3L+KZ,%(GEB&Vqc_)hoC'JR]S$H>6=;kBFje6&HJJ<L'`;:D1sCqds517#_0I>"$heYEDm;FN^d<%L,DsQ.$'0f
%=,(G"h\RV`iGc"LJ1`W9O^o@NL%6(0T81q*N[`!d-:Nl/n$7s(;p,:oi*VL4MCLB;(#<iIURXO8=+ln<@""Z`K2!^&(63G]-drA1
%lfn5u,4ABZ<WZc'&C_P#l`YijrqSSd<E@.b@#;5t2?"FB3)tiHZti>pG6buN3Rr*^iWt+>!%P]ocSm:R79EhDME:YU1O[Ju?DR!7
%$Mds=<4\,$8JL@4&6YL>TGX0Cpff$bA1<T^Jgo\`+B!rHaqlQ6)h6]Y@h0Z!VfThZhlR-__;'F1Asf?)M_GBEC:o5!VI%2lY#(?b
%21#cX"1Vg,"4DM8E\eE/2cU+X.HMk'*g#8;Wr/=P1jbq.PDdQY(DJXTFUhou)^.:.MU_!94tdJA9/K5CMi+q:<2AYZ[L@nCZU)U`
%n&8;cmsqppI>:Gu]k(O#LS:jh`fsYQd;^u/q%U0P&rq`O@9M6njJHg"rICTFQfD"?(QLNJC!pm$h2'$b[#mdWhMCX17m<"+7s(M0
%R'*1]agaR%4$W(h2Fd=3aR`!.WM"6eShqCjMsE9;KQ*Y@nq^T-$oFsK<-qT>pIY5R6^,NA[/:_B5oW:Wg>Q`iiaN-H#atZK7r2e8
%[thR\2G5SVpf\H<JSO5J90a5aW9"]18\RIt?3?jTf+8)IFX6tN8Q(ZGHu@ZQ9T64""N[:I!\1HCJ0ldkh)-RG&#=CO\qV)44cc$B
%N6*d0FWh9KH`<B\r!K>N',SOnndn]n*CL'HH,Mf"qQ"icoo?E:f+dhFNQECb@LK%Q@*<KrJ&2*dU4TWOTj^J"-5;V-0O<?05sGoN
%C!Qj*X^:bgj<^[!7='(L"/r6j%e3H&E(;<E=`oLX;=^egOp^j_V0GktlpYF:JHYfZ]/.#?X<W3WE7cjW(du/_Wt<drH,DJbJ`)69
%a[$S6f\@JX`OWmE&Kk8KFdAYTakq("X(3E;%1K.+BNq8f!CiIc69gIJD`^Z#7A"bm7:;C.=(]I_;T(O^KjjGQ5e/(8U.P%=gkGKO
%kZ#$EU6):#9+OE;X+eVu"$NdQ+X6/%R?CcD,8^*`;ELUAQOR7)9hK+Bos8h&oSl_&%)P:!PtD&2OHq&h,DrYL?ASO;9a/1c#+)1n
%9hom53P5K^Y6Vm:LYKd4mse$r(oZ/8G_VYIJEnW0$G`r=SI6mmI4AYGG^0ciZ<(b/ZsiLeHAT*NH)P:6*)r'-`Zh7X48JMg^Mt=W
%lR=&L]d>oT.@7fa)#8:0k]ICF"MX<"=B_E8jRR;1Z0*+ZK,lsVl%>jYqSp+?_[*F4#::11Qqsj'd4."^mO%5+l?@0tTeMsM1OJRh
%r\R-/X$l:3.la2*&DrR*#O0_MhDXWW?VLs_ppeA%L(/a(3+^pu9%j<S1Bf>-=\&PW(;l5](olbZ0&oirl2I/*<f,8/\NmD7C=GW6
%\g"e_2ufaKWTP?JB`J6Q,@GI_hCZ2QI'[;".QYpY--0VYM?,DeSXj\D54jkIRUGkUd?P$llZ0.\INFEmMMrVDSNtc\)ZWsIdaTSi
%c\T)i6ihW\\%Q;a+sogV)aSG;\b"BP/C3nbZ9e1qXqR+`HK+^^%SM\`!'JOtS14stH7F'IiZB(S4EiYI`nAb6/$_f,>@m?i=GXT!
%pF>2\Mj].\l("pH_9Bn]A-[(/B+u3*EW6-a5B_^>BNp&o-V@7])5D)aZX_I,pc"MSnZZ\F4b[^@Jo]fAAKW6n1&DgdiBppB"*,T6
%rjL^o!f6>g"E+XBc$*=H+G-.*(g81*b[cH7.4@;'l/7$,C2RU;^0CA&JT^0_O)u5g)EXr2Xa;p7R%rhre]fbO@N2&`DKs)eUI529
%9[cgr;,520*H@-d>Z4%)CC!>1AkV-CeqhO>3*jou2WbITbISXNl2a\MiVp^(_]Mhmn$'bD;`S/[m?6(BEU(E\)+:#j9,58A=X\<7
%hZ9a1(!6,D#I,ctG`l[epOYXL#ejr%aLTjrB1mc\a(ecoSCdiCT>$BH4.:t+FS<f&rhah!h$H^72>#R7R@HGdR_>:iiQedlq>geg
%Yq#tRFsga*8)lNLmRRS]9)tdeq#9`ceuBo5@`56X:r'!7Of&E'L<6#^P]>_K[LB.k4t_%8NGI>*XNrn,RTa[c)O]C,5sVAO:dM6]
%%%%p[#+&&fF1Y[8d-GST!9!23!btglBQoI0$$^)/X!u?9]eI!GlnZe-?uW2SQb/Z'^\_IlG\^k*LD3V8<"XN4e8>jpe3qghFoQ-u
%%9K1:mT%AgT!GJtk";etY-A'*'c&Z".YEJg3*q(t#TN[shr"hiHP'7*@Y4[0,[pSh]X)*(CkaN.W2CZQ7!@1W93,.%\.0d3:\Xc.
%M_]332`C>H5(I`!CFHA_VLhL9e_$B?<tJ;JnC5t7_1@_S#KCWWG>7mrKH,:ToIm*W\UJ&k`:(<C2d"GS?n[sokgBY.]`oG7eO)4_
%+CN=.I"1)_rS5VPVH!O`ngu+t1,7H-_X7<P37L.0:[;hOGX<#7M3Je/N1cq4J668V@m(=^ec($"!o7?c4$Oc5]>]p-N!!55NQZ;t
%\=:(Z,9B1b?IibfY_ZPD5":>i0_EF6'B1XF2k:m`@c9))2bgW[P,nAs'&\D3dBFZ8*CfZdCuSh53t%K'N6Mq\?TnqGkk0Z#U2i`=
%g/e*i-?f`Z")al&Y6,;"(#$9=b0>S[a#2og<`7G2j3L:a2SQq0g?8Ql[TA6^Kn"Ro.**ESAU#4lO)N#;Jj@@qZRd*]qhm<N%EH'S
%Li@_C;'6]se;7m[^hShWFl;4f_rV.58&qmdX/n&#;)?+:A![7PjpkFN@bL%YWJMqCO^hKfcRU,KMJhq*fQfqr+lIK\cP:+B_Dn9@
%$.a+o3sErX2:6,fkhNC[.=8>Zmd+N5cS9$S&$/J9[Aug33=`uSY3g\GbB!L1]?t$SD>c"L"25/jnqL3UD((u$&U4h-Qeb+s=759i
%]"R0o[7Y+5aGf,IT%j+nWN?n4ah6kC:K[n(]6s?6qF"H[GsFjK)Br^N+%J6aE(@kKfa4GuiThC\M'2om%]4o_?M[V#R((po$G.ub
%)LFDe,j"]O8!,c\a0!A)3^@),aVB+&no=JJhJ"fu,;<0d#3C8Ec<'4?+[Sn`Q1LtX(PA7!bM/a&3O_rR_O6R.DAcZ":ohbY14(s`
%69^ll`cd;lm<omB;%G8U<N\okl+W'6ODUshs&7_slWgpuPCYKsL`N3Jg%9Rr"Ep[-)(6r*q"/.tjBdk84IA$U_6b8R&p5@*,?Vqa
%i#onWc*'cG7,FojUR[8`9>M?H,?)1Vh5e'0%(M/l61g'C<-_ScZ"#&7EpG40CrqHpen7J4M1VR^?j=RdCG(m1fX"a""t!th;$@&M
%LSubYGP$O<?3c(@0K!]%O9FHJ<IU(h9b]$,S/`o2S[`9GE2_I;a@8(p(8]PoNUD935C)\]OK-LS[u4"G<@Y;@oUtD%!n\ZWgM@_d
%VWP%m'YV:s4oP.iJ$(!cFF_@qVn2i7HSe_u9_P%\*\\U'1_F;='&c!O6c<3\<-N-i+r$lF++h'`P!R=JL+k?b&#"\Vbp*%,n83IH
%*X;n8U&*T2i&N#sKZrc;!'@.N7(XW8"hVCdQu&NH7;#W`U;it&[k*RrqBBj03Z%U1%W[bU^8rs*(qJ#Tl77Tr<&K#a!;08\)Z^Id
%O\Ujdk&ZmY&="N*1h]HjeTArUd:B^uKHGrEbO@#CI/>'<hG-jqrjL^-p`YdZH4,fFE7EcV%E>Iq_-/a^oU((rC!Ea0>u(;-CebIX
%[q^IQ,h(0IMFP#INiT?(*=Mi\UBW-WRXBje*U,R*#ZHO4Ld_29Vq*hdP&k2fL).t<!rB:FY+Q-K?%X0l@P(fJOMgWg5tltlpQk6M
%lG7VWcF!T$Wh_K%!%Y:Bq0HctolS3\'.aI?0S8=%Wub][d&&XGDCGJWE3@N--rW)ap<'2HQZ/0D9rKO1+;=[ZP2oQK`5@8p6C2'A
%D=dguJ<Jof2-ZkTYu\Xn`E*`Y&,Q9/;^OF!rmHd,,$A,JIJHMI1T(AVRf^>Y(;Fk#%`/prS]mA]rP_mpTE]e@=;"LI@l!bj:`Zj`
%aZ;N1k<LloRMIn9G;EN^^3;(7=S!$Y#>t%IRbnb`:h,a2hn8/dN<.$:/9gih=\7sl6BE;FLGs!gs3rYKFE:ZjH73,o>\&U^K(f@O
%`(T962q./<?`[&LBC\=Z_@nc^KbZJU'HX#1Z[MV>Tl$8i.WE,Te:.Dmdln7C;q-PfL=s1H!)h^WTi.ah>o_4QXcQ;6,GF9%P23"C
%<tMd&8uY:Tlu8j/)ZVi?<45%s?uL`^&U'J0R,eMSkf35B\`H+-$EclU%g#M'$L?De@#@qC:h;n[JDjn0)VTk<(`_tm>l3b6ENjA'
%lV7L\\^d\B>JAhHeeD4/`F6[lLkK6l6th60FY15A?hbce,A'2bZaqSLI@kGIW;E@orKi-CakS>F`\+X#=f.Q)(*ud28NPr"8P-<s
%C\AUNf*.usItYg4>k$@fLi][Fo+2#d3tl#Mq"hCqPZo.n;5Dm?KtP<u;*1uBrU9ml^qT%qDkE-KRT3'_DT`&j.WgaH"0n]^3"]hg
%@"q0M,DO:C"b9eYL%Hq+LCRiKg@jp]P$;RN\rb_YJm*e[EaHes'%gtr$-cTDinRl[/#[k-\&b+embkhI9`f-a/8=mS"*BO'"J?OC
%hUSo%plWr#B^TC3Kd'3:WElQmcZO!'&!>`_hP>0e2dPMEC!b=?S^l(8m;d4)Y8)AO[Pb-NBQ+j3!;=[go#osC4$V$TN\#b.c0!1D
%0O0,+ATdXK5RssD&H4X8JoC9TM&uKo02pk,9:[MO;F<*9@L)/q2'qCYcnnSN#9$Hnc<32)#XT71`2pJ[k3fS8$<GKSfK%Y^HI@$4
%[E:UDp$"oEj]`FQhn\7HCMbg236!`fZt/$ITnLXn[7>(ZbkN4,NrdD!)#!qM-n_:b=nMLEN=I0N90BsiB^91n0\l9M6TF[hIRL1X
%jop#=GJDI^4^p3/o3rf.p-(,@2^o&`H,7'1BMt8\_RT$&'su4&lR@itqr=Ih;>U8G.:Q&C8T>3CqkQ2g`qN'p@DI>`'VAO*^Q);6
%WnKcY%j>,KEs,ul1_56KJeX=!Li:R3`_ZX#s+9+$bsWHmqcJ(ZAQo$IfeAE2S61p<;*=U!a^gN/j83EfRiM)r&kl,SV't('i<"Z?
%HZBN`5(r7+iZ8S?:KJ$8:NHgE<%tr=H^U/unS(B17PRAi/J?"S7KA]%<A<*ol&8_1Ud%ESj)<5#+Vs?0ViY-gatl;O6<=DTjS:.=
%%$a4n]TbBD-EP03QpiktbipCUXXRKW5>M8V!8P[&9f\(tk91P\nE=mh^Q<%'dtdlHa-+FN&A[mbd&LIUKRcd-M'u],U+[`l^T!$6
%;@:`;K+4\rI$qomnH2Ml&BmMR7%L1;Ji%7BJO!mdc4DfH*3p>j)Nj=0:)[$P!8VY'9Y#Stdh#pTaM/>3_9b"B@l?pd^k:-e#<+@s
%N?r1##J\T)NGp\5!*02]!IT\m2*fZ2+p2O0/?jF`b\KW]9`a_cX[R(1qm-Hs+M1a-&nI^"4HNsS5m*#f!b$QbrL[m`5<toSN,>:8
%&GGO(Q7=);^crt$8ee;QbbSH;XTY]ee.Y!+2S+\&"J33c84V0Y]q"4I-bYf(DA,g&Kssa!<n10=g)TW;<q8KX1_--o-YHg)mEHjq
%7qu#fA3E0M/s5j<rY:D6VK^5cJcR"O[g*@2OYtk41;R7MHjCPtSGhb?.Us`*1$oD^pYrgt@L$bU72;d$g:U'7;?bmL63V1_,.mb8
%<IT`mq9*3^e+UDgq80o<GCT;CIe,K_.KE$'o!o_=p\;N'm=5-.J,YMDq3sVHrpTm-++AT,&\n::^\PqMqu?Ni^]",grR]s*p4*#=
%O2(MVIsCnIDh%MBN[3n6J+]H6iV,QdepmSAqet?kTATS72h1^3J,f5s5Q&FfI=D%\YQ!R#J,A7jlN2S-qnILTn[JPnLYr'm6b<')
%o\G#sgZO[.D-$]9NaCVjMg,'SJ,.gc)`U`<$c.`$C\9cKcQ0+A`Pll:P+O.:QOZBPOZ=c#TQ/;_NmOX<,N5$U>R)q9*8IZsBa^`m
%R?IbN>E5R,HHhA:a?b"CS=Rh4:4b,H!VETLY35t"1FoH3U[`BtVdE.Mb%rthif!tM0@ZPI_[q0G[rE7qbaro]WKt=m]6>99mq'+&
%N6iLhH?)&k`TK!Fk)\RdB8^.<U.%Y#,;;s?2$WGK3XTX9Ik\j,Re^BsHltkhrT6ZkE:IJtlYocK\!UY*Tq=Muf<aaiRUtAg,Z1MB
%3triMra!NME]A$'l=I"dUFu!%q6'7)bF/nqa9bA[#s&J3Ts=G^p=nP(.63]+c&\0%YEJ\^SQK)A"W/!L2KlM6`==;D>eALOh1S5E
%&-rfm`QW\aX#*@$2"PlC+nO`g3)CUD"W8IQ=HP$U7/;D2L^:=n++3k;**5uH'ZEpL@="*$"g3Q,P)+[U_FG0K(QG=Aj<M7D9i,Y[
%_WQc?)V^jm*OL;L;@7MW_)bVT$1sUZeVS&f40oZHMMp'p%(XGYm$$.2C0aM^45]g9=g:Bb8krbO"XV)fF*>_+ga\J=VfW*B06G@h
%dY*HFXttiZ"i3SdYsuk?1g3EQP0YoGnqNAV!l7(V]YVi3-]Z*is,?N2lJ$jZ*!ADg/K!N;&HP`1fK4JQU+i*DG,^7Qk;el:HEMqu
%FWKIm,6T#iTACso6N,`_T:Ba;S&!GeIM;5GZXE=AEF;3^cpLgDje*IVC1(Sk0$lRO!MDnq$#ia/D)8osXg4EbD`%]CRrepPE16Lh
%(8.b),9C1G"2Y:8RC6?D-3"ldJV)XdU9BpUFXmY+/u947cJh$Z^P'LhTu.]M^jTG-82+hT?Zfi2RL7;H)_mk],J,iSP3j"/%5+k'
%i__A#bZgjtX+:C_12\`q8ABKa/5VO-;9j4qZY>N6]-VKK^hf0TQf"YV3ON$%7\pKNjTTKY=q\C_(FD]jk9jJ9+J9"c/@!,"FL]>-
%;'hJ0A&dlnR@`^gbu&#0ioXZCc6ElKTUR>J,Meo[[-Ta\3Coa/CKu?r=$'&39#.[0^sQFhTh[nAEW82i5OojiIHs+FBi"O@ho3qq
%&HEK1nD7k9@0F3sTABaeff`.U%!!al'%M2<T^Yc\0M0P-ifVl(*Sh_=*eW:E7=DUIGQ@-bF1B>Dg$(pp`#u8EpJ%R53sulT%r>K-
%Hak[ZVX\WWl!i)f/'#*.hb&[C)>Z<u\X+5)T59--lUl/:BIL7,;-%1C,*BdVV\N9"jbVLuSYQ^*XF;i?[-U]=10WK1F11Qq6u,Y>
%+$;U4>OoBL(HL@Ng9-,o2mA/-F-87P@37V9&R<u"H9"O8`?odGl99$deYdg4&HC0G&D</YUCGt<'NHl@$:q0B+Tj$P0jZ>7+%34e
%"[.oX:aUIoc$r(TpcMO:_ui3tH%`;r#/#(K[(CDCjRJ#H.5aKG%pt]4Z=pJbd6PNVJtf!"M?5h@'Ma]B'mFZf[a#E;diFQ!c9($$
%QfL^`Xn:;qT=/e_r#nTdc!p#eC"^nFelKF7+=lufc9!?Lo\5^=oImG[3;,Z3fen)W/jmapX>K"D(J3eM*/G0T<jr&XNJ6mhM6)Cc
%Ju31B&MZ_LA)0hFO+*%%s)n"]1`=@N;4oXt/d<)%E7<E88;P\VC+^_:,5@-(a%MOfm+@fWo;[XK]H*2,."D!ikp/ZgdVrc1:Z2qf
%E,iB/C*2?LJ1'4^r;8.&mGLs:6[]1#?FF#rCAus>R08F5"`+>5(OPkt>MdTj84k%N36uh!B]kNBg*O>IZ>!Ut_VL3^bn=fR$:EV"
%F-22#(hEqkm@2=5I_%P#HS^`02VMtk;PE)B$EbBg?o9a7IK/oiRFOX'Bci'GXD-\hO19PDfUUWBo)4^4=]F*4(,MZMO&9i(L%0pc
%*n;*iHq!oD@lS&@Re!HqHVN%_Y2&Uf'A:^PE0ruM'\V20PWC$4Ya2=*CdrgLdS0HQ?Zm%"8`jtb(\aJ9;?Tue?(Q-:8dX0_5uR>P
%7J?mkr>SBDosBD]]F0gUUdLQ$PQcm%9Ylo\o;NCiY""*DF!q%uD<X=,[:eW2G)k]6%Xt5\m#7(:EABg9lZUs5N05=\>LR)2'kK8-
%`G/$,-C,tm]N97q*)lK7O-Y&k<t,[O>Buo5H"9dZd/*q2?&MDVhF#k9Ach)>BV$Hc%Ohl&rn';n7qDQ@_u_Lg1KanTE\J)_Lsg6t
%,;\u#b0aK3MBgL']V=/Gf_\60enE&,(lTi^=,`\d7H(/4LB(]/E]c\s.s="p&R-:,DdODTs7G6_fAeuNs'cNEPKqPV:6F3'(Ln,F
%L8'n<3M/76*/+j(.AfN`A(7h*5>QpEB_$r=G2*B*%=2,LFeN9PMYUNoi&IfH%54c8Ekb_V3!!p*VXV84W+/42eNA\q4$:[b9EQqZ
%RbO#X%tf^^pNCT@h^hMi5'Wf]kU=Db"+6a=9aElaPVQ>Q(cTWj2%j<gmY:gIT$=E03!RMDKDmo.>aBkI+X<IpPOSWqV1]/]eC14R
%`k5FqX<cpDc'g[%FaX33@q4"1lS@Sbb"CA]&f\nmOUS)<W+YOe[]"f#ktS=?CBQkmU+R\VDY#FSYa"gs;O;^tDT4/*,aM8,i6^J_
%WKpKu[Ges$2R4`#I1UPI[g[*?!LLXfL,)6pKSt\SVQ4_Se:coFO+-*O:rX\YFu1%_O>?#,&1"e661*;a.=__/>qVK#9+K)KA<!Y(
%Q4KGI.i2b6;!H7<J$)<?KPE[0aL2\H(2_AsS60;,C,a=gSjaRFCeZ/4'YAU70RnASC_af.9_-i'.rjW@S`ti;/S6C<[IrL8>#dIK
%6c9ZpMr<c_GRjC>2IO?;=Q="<-o&>8]cVt)G[-&d,q9-W?R]$uKll[#_4=0F7?>VcX%EPjKTPKDnk`j[L%L>AEhrJ<!M0IG@a@?b
%1$o&t5k`J)<8f*2S^p!%25t@Mp<B=Oh=o'qLH1NqV(`nSF,ueZ1[4/Qq(R-50@sh@p;OmRXF;m_9l(H@B"%U%5"dGg@1caQl<Bdr
%O<2IjIJCJQAEMI`Y]3?p;[o:4^`rj)emaQn'mDiB*!'t)8(fg6Ue<KD=R?`=/J.Ie3Z+cV,0pg2.aFA+jd<6LWD;a7/60Uu&(^Zr
%kft)/9au,)-DF=^f(+N8IT=N1(&\kN?)2/NNQoq:M]S<'$`Se#XAFZa9h3OGO!;?]%aC58e0*O*"3uO&6=9J^N]ULJGVm2??))ZM
%od&=,$1,J@`B8r>H?.%-];5a%H[,Iq?je9!Hb1.W_Qn2#S=\X-B'IJ,i5Egk,bYE?'.o!ilZbqlG9@=f&[:b[:^X6[!2CABJV`_3
%`F"q:jjH?V>[0b<j%O>cQhT.;_K93WBbRg"YN4rrf:*@"DPt#?<FHa3DSZkGgG%/dQX;T"T(godHA$n"?OS+]RnLk@oj-^u)H=D.
%N_BSXBJn/4a\tWn!Dl*@F[V_A@DQ&5FIqJdYbWD%0(&?k;Cj#G]khR6)uXR_:""arW;,h[+@<E/L.25sTKs<(1K(HPp;K@3i.EE2
%QqTr*[RWajBLp1ME;$3A`A:_TM/sNEU>6tHi7a<g0NnK:qrQr+S\,'1CChQ^'`H)cr.8X^P&HWk,D/+2F^9crj!;86@.26?+kLR3
%GA8r_1si+No?]H-#Grj*W>m6a>a!3#U23>.g`8kKb[@Csjrfu[`;k*NmZD?R.FP-Oj(SKP%SQ>d<^aZ)ZqG]U3JSc1U,sGbW$&i(
%]FkoAk),t4O^-"!c4qdnA0`srUUj$#85J=64EpfHH*lK72!.n+jM:EWM"GOd*_\/Fc1UZJL.;`g)t5Yn.s:a76fo!#hTF)6?0er:
%P3(i-E>dh<4WXRW6"n]jLIh\76hmUSML6_G)S23YLWGKUVLD.I<J^JNh6$Nt\*F"^DNut_q,\^P>30<5O[2=bC$a\[h;*UGpD]KK
%1FQs7I`1iT?nY`8^g+ri4&='9"2':&ii:4I6%l:mJ0HT!b@V8FFWEs6oV/6,P36F+U(reH(<0#\+uK47e[VsVQ/F`F<[apd>JA`h
%bnM@j"B$FS=&[FG`p@<*LTpNl8.6Yh[^9m#'0Brh>m"SF)(`p!qe!`kX7ic6?)dR=ZcN#JD;L9NKTt]#_DZPCZkKe'N)aej;d-A>
%k)br/ZQJdNhrq-:"]gI(?O5Z$.&-AaN7`^XSMH).9>cOhq<6)"g2:(%[Zhq4=[H\!CZ/ima$I?U]DB4FLsGET('S/L"4ugOMfJkK
%2;X?KfSJgZfQ<8:;Z=$1ko9kRD(nt4G89J^^LH3qDIE^e5A4ONgA/njA+Kc9!j/['ApCQ6TFSq#V?HZ7PUOj\"*fSf(oZ%G^Oe4t
%d(i>;4_O^7!V)q#nFQ]=M9a/dnc5hhr@5)e7IV,[7*>'EC&-PTmO%P<o?8"$:_=TETIP)pMnAP4$'gE-S@_Ro\dN$K;`NN!=kpUq
%?$sBFbIH%>$.Es'#$imp!gou#oGC;$fq]#m@2(fqoBEB,QgkC.KHVT?h,MA^No.NQg[f$KWte;Q&!r4HWk\Y5Ti]J:cJO>f*eZ_9
%Huhai06S$&Cu7sF9of/)bI@^mK?6jpp5[.nJJURja!A29r[`ZdJ6+m(F2i"^_r-1Kp[E'8d[B't?Ig9[.fMgIZ'3W;DmT1[2a.)!
%G=WL>",l)30S(JYVBinVr))VVHaT"N:8T$Y?r'"SDSI,koF4%J.0dVW;(q$?Qpmc3D^H"V;V$W`P3S&]+mS,Z<h'OrnW8?e;if'Q
%_<;aX]4-6=HOE=lE0)U-9`3QVDX)?e[7-Q;[o!ebnkAp2\gOkY_t`lY>oY2b+AJl8^k>ht;c;0j9NY_b"7Q%tgs]#,1F`&QO;1+L
%Y]nhio*QUaWS#)K%4pi7n/H-O:.P-Q8C`4tL1n'T*gVi5M)6Bn/qf,7q]JA/RBho(eb0fD"tU7>01(S+L1`XJEYt7/RStD(]\Y2n
%3'](.@ET"K"FkLSO$#.1Yo=hj$g<5c_p8i*XO5ZOJUZ(g0':EtU>DoV+bY*RZ/#>+)fG:Udi@YqB*$p\h'C%H-+[f@G+7Xb@TO_q
%qkJE0#?"so#K*8FWMoT3%dWXZP=EFK3p&fN&c>,r6;=/N6r+%l]"an@mk3cG/.Z0`CV3O`;3ftdd%LSTlXh#)2Y1O^!l/*.](m3c
%gl]W9igX.8->RVIme\#n*(ITR*Z@BIPkTf<:EIN/3B):B_I>c.G<9mk;!DS[dMdE#V2);tS@^t3DA7M-Yp-[#n5'-QGAoWW8n"i9
%K*O.e[<Amdn1heI!,cH.,MS!:+*Y29M20l&k/CnuXQ7rqiQ#cs/iS]#Bij)8%]eRPA:,,BJ\_C+l?s@$e[k8*SX`&VBbfDo_jMV^
%>'>"-KuJu;hIG?B>,Zl@o_`Wn/k%.ZGr)1S9nlJg@gMtJK^e"rBC8r?-#SJ7Kfu'%Y(4,u*i\L-/+Hc1(!>K75iYm$,A"AQjn5M,
%m-4"5NB(#QkqoAe#qZ:5HZt[qBu@Qg[47oDG9tNTeFO8(_ph_Di4LAJ)d"-I+42*>Z8"3&aAmXI%=)@TXhm,A4`':cof5@OQV<Np
%=G!9[fe;ZR0F"Rhc8BA8PV=^C-FD-BYtEfR<=H,0NB0ELW7_oi?X\jUL,jk9q]%O]]4D\ec/&\5a[3glYTiA/a[pn9Y.YZi^DLBC
%l-;$f:od0580WTSp7/qqB(G^KhPb>t-D@2B!gFoSo;F,E9LX4g=Jop&+SFMa^._2K"ApVS=-`Q6IPX.:X'4]M0*f@2#u)ImC%d+m
%J6F?ToB8((Xfs_e#%n*o3_f_;?b,&FEc(e?p>34?\g5B-qMmE4TfsBj.d([3jl>uK$%WF/%$lh`Z:rMN5].MlA+77r=h!2LXX_M(
%G7VPGdo&taeCi1$BCF''L_VF@4Dpq=`uoc_D'A<>_h*nmBc2>3KO]d'FaJ-=5stt%0t]9?U9*9bc0`l0>/-/73@_Enoo2=8lYMnk
%3!<'uf]q9,1,cI+&c9T1e<ImK-Y>k"^QA>)0)GM`OPqT%j.(?'!'Uf4Hl,#rQm1G2D$[40Th/_ti2S-u\(a0],WUJaouuoDb4=LF
%DtCo&YMfl(S76U?_/_u?o[qVkRZWR3i<<(H<q4\k>4G`\bSL7J`Y!1Rk2q'(raCp>Eq4ZDL7]3')3,i5)F\WtM./\An;SP8l?_g;
%B*Os.2sh%\D#&c%`np*pO4DTA!:=/?ITT-S21uQGP7#^X?[@?_?c=/&r#9c7J5"p$+2GW6+Rp0nK5pOkU;t&6FAS+@:*N7EauQRg
%S\\&i+2_^)p9g`!lM)U*Sm+kR4C8JhK&[+gT-(hnB>0a_V5kE!'o[O`^[h^1<<BKkJbE0uT8PoqMNqssT51IJ8Lp`*Q".`[5?ER;
%s3;YDGhS(L5<joTs)7[`c-=iBhA6VLs7CMRk+B@6a?Sp;1pVI)G8[5-H[qOkl6"LW`4_<0"d>mp")?<kO8bD.8>tmqJUs+X2-TO/
%eh7[Z.4BPU?dbgUqHn4/nF-K]M1=%hp%cG/.:6<V?iTOWk3'3Od2rRhP-<*!5CYl\^aMHVE2I$!Wp?iqhI/*%s74Rq#P($1cN]5d
%YF@41(%6F<T1F[RYG00L7:-RjSHeVYY5f$8l_tY;(k@uMl,3hArnaE>jW%WTLDnoTMR6WB(rntnFs(('4GZB1r*-m`Js'4^&*JB$
%eP@8N'bZ?O"5m(6c2RDSq8on]aK+!3-^,>*Pl/hAncu/H4>Q&siU:_]%ZF,UnB146a1A%.M\!*Z%/]+I&UBuuSegV"?%3H2IJr,K
%T"a82rf@*Zc2<(]c295EnXk1hJq*LWi`8!#b=>(\UM3=aHs"mb("HNU36R)SiDW55K<u>N#ihQ!l%Kl>AUJlBf`8"c1+][r9CW"%
%7[^fK`,_5%jc_#J#NER8fE4hco#CjGfI9YUX[4!;ra'LZjF&"bRQ$+hOa2]Sh")1[ZrFo\p/ueR)&n/i8hS8nZd=)Gg'C>ipMU(i
%W^m*3QJj?"9:$BH$CEe&a/6%7;PE/nZo*TLOV+62p7f><XR$k(a0;-V."nVcZ-o27a;/ermu26i;5NCr.WT`oRTa,t)k]l^@4LUB
%fe0YKU`n<8lrtf2/\>r<Sp1%Q5>jh!Mq1"-RANZ2-[p1i\mk+%o%g$ck/jIDT/bGL`!!Y#Ir=p-9fsm`E)auPlNoPpY@+N7qbYd%
%![H#.))4=F4-[$Zmtq2DGNQ__WT&rS6=pl?^B6?U=em191PpAJ1GjU)]15;q$GuO4OR[IH<)US/br:$@IlMp\I*nR)DH@%9Sa[6+
%JiW>Q+"Or(AqK:5,k8b3bQHWSqU0R/$CN_)BbVFZi9OH"l]8fI`=IDNp<)o$,Ad"YXo#Ag]s07g-,CqXCrUQWKdQ,+j/^]U9Igr,
%0QE!6a-n+)#pM;uDtY+urVL#3^Z#e>[h'oJp\`WHe&5X_W$[8V_-(+#[mr=DY?rm#aUncn-,<sUHtcfH(p$X5j_5%);*"$OS="g/
%@3-HdFD71AT;Y`]k]sqUQ49mOE/?FQ;cHFk4H/Wr2T@4Q/5W8*##[8MG:$$HTa:arpER^`a`/LgY,kWHs#H+"i/YQ:,+(,]#D2$D
%cDgt6nt.b4.1IU55,@GAJ<$t:.T"2#5b*2i"5qf_*ktYhJr/;i5,[)//h<#R*p?^pg+T+*_"@;_rKR%S@CEElZMhI7K'(]`Xl_(H
%6Hc*cpYVPFLElJ*),(QY+@\,&P3Oj+nDQ(O)>K-&.ku2F?8T/K<1`6r,G5r$9:*AV0MQ-&=hkdkLsQkQ"`/n4@9F[b3]Ulgj4(jB
%>LZBjf-;4$Dlt/]'leWW#C-EqK;hKeZ=PHu"@C\i:cdM?"sNE*%n:OD]@jci\N:B>@9)i0jnT/-Y)u'G*.smkSVO$tCrqNRH#1U2
%]iM3<[eS#KJ=4T51C<KI^<%BSLC[$V%cC58[A[M['Q)j`a7"j+qO=sWf'8KY3^$]n,,]NB9N!4"8M_p]n"=UXZUl*A!qi1OGp?3^
%>II>W<-ML(`DAa;K)/nbB7`h^D93F6[=duBD.S?VZ6./3R5aa3(QWIq)9.e!Zm%3`$ko2U96CB)Uu:k#Ns1NAATO!(<bM*D5+/YJ
%+6rgp;k)*uLH8]%VX[4Q#NrbR5P[=joc_"oFJ^X(,M=ZS/u_p1?iZdN1bkC`1o#O<:KHM2>9*TJ9?mTL'A5'8'95@=^oY/3YPg0G
%&_JOIUb]()qD=b@`O+_?a`E_9#FKn5T0$$^?r;Oc9i.8=&%fp%.H6mQk8HGV!a't5=4\*F)UsOq91kRt`^aB/14*nn=9sKt0i0P&
%Jq<#.+)7[*_tom>4pJt[nK=#%7"rc!n[u7.bRpbO&NCl%l>tKrdK5`DB%?Eu/]\GQWslE\@/:-=@8d"_qR?`J.;AG3%o'mI2CLc>
%Y]a3Y9,ZO>f;]5/bkk_&j6+*SSN4Z1F'rK=`2oWpeg\[t;iSqA13G#Gn-#On\N\+,_:'B7!aD$0cl=cWO,bX=U-`*D*0XMV^%C.g
%&YuKR$"#@e4B]Aq#,[5'^Q^$;Qm=8^ALUAIUU'g^q,0m?.]eQ__MP3>VlVH!kjZJ^_,4G2U;,2?[JN799;cS[Q#hB;[=U;H(HPX+
%0_mT=QZ=66c@=aZc'mno3(GjIlP5@M3]KOjg)oYJGC8-uIg/$"_8MLX!3Pn#V!:OKdHB6U>)YILHNRj<qg<KhJ3g.-J%YPe&kDF5
%Q3U'D1i\T`ee&'BBkf8_U)ML90BMD6Ql%Z.R^U;8^3#s9rHb#]'I_G\>4]/KeE-Zc\9"IajD?sF>RkCC_32^QA));5/F=@7.uV"s
%",^,/&ceK]F;LKo?q98D+XtV^'6hg&>iUAV7efX)/t]"d=4ZQ2dmAC'hsksZPtX\\,Jc#o1`gp99$U3Y%\0P#?O=;t>ON6-(cU3Z
%cRUidK:lMJ=fW4gVb2=2j4Hlns!n"V[jDO@1A[#rNc4/Jb#Gf3e[+k!W7(3oSQsqH_b+ROmc$=SG>@bb?Hh",L&d6oT62eeIK\6i
%A<;DLZoh(f[523Y"qCj`^O2&a!Mn"WBSVH)o8$[IhAi+nT/Yh-F^Ir5<'FncIfk*8:dXU;aetT%LA?)Z1nU!D56TVbG`Mdb$Qnhr
%08K#klLC\>;64J1feBbG]IB7H.DOkt7j/-kZY>Nl..,%f/Mh:9c3C.cG<GKf?fZ.90P*[_:utsSi[%3aYHIK%"9Q$3$c*@aE%c-*
%M5Q2/bSAb#;OE>[RHc-je&pt(XPa&gY6@25=.8jC1SjrEA=DBVmN55iiNEFSLsq-pMQSdpFY##_?boT`34N.84:BT&jlehd;_Q55
%QE9h#&rjO7SOt&YJN:^2Xu\Yj1=jRaUDKC#8n#TcTmKXe<6O)pN@oI$FV@)M)YdiWF3B(.])(]aI<r](EDUY+/PA^-gp>796N$I;
%mNu9,:J^t]S?Wb4pj*3q1sB9-XOpoKMRCqu9bK^dBiJ`gblX#[Hk+ACs2t-ph@1go"*jRi,iseDFc<@hOV?na&h*H5Egjec7c'LO
%WB[qWRuja7&%F.N<%r1=><ksh1*hbK9`M@r%6*[u'VuOI.e?+_LoPU5f^d84D[7PU+"!'eh+%NSpphRjBX!soXm,&Z-RFE\2c-KU
%`UaE``7Qb(Bn@c6bV"'.GQdft"B53*!<,D#Nt<16g$H).9X\a(4;*btbS=%g5ZUN!'^#Yjg87_/[-AA*3_ic(m1j_u_(DsF^t8,d
%n0ga:n+;J]g8\(V#CBPH-?DcLlg^sXXN!eIFc.';Pkos3?ude3(of:?g-._ica+93i\)KGJk+YC[8a&Qj7,Iu/BbQLP+//1DXk9'
%\j*hT/Sa):0Qui_i37e[A$(knP\E14Fm1A&s,+!fFkTG?gB`"Y-786s,(B(lDHd=*9c;U8$IaD&S4qbV+\"LEpuHWa#*,TMb!*F*
%7JMd@UOb,3!d$P%:NNWT#r$CQ+IN3h.rfMDbtAZ,T1.HJFkQLM"N:V,IBOf0RKSOf6D,l+Pl)gMmYDUsDep2hRE.d^)WFP(D)<+m
%hU2M4&Y_$oDqSWMB,VhOEW;KR!DXm=r1HQVRj'P`Ng9?6Z6ctX;]DtN.#kd0mk+bGi;#2aqa@NlZ<pQP]+KI.!HFZ%koj8[$!&C,
%ZEe_6_cAc!^'%gD9N#8q.9L>i`"+fuf:e-j5;(8lrKtu/FVJVH$m:lPjksX%KhX?]2-M93(lR3..1EfDf&S9hSOaD3qpY3rA[gR/
%?EV7eZd66](mQn.;dgE)brJDg\,PpDP<_<h'u'\6:^,0_QU=AUI9`H<_kBc=SrR5MR"jg$NKki]Y=%A7Q>F8)LPdDeP3g,A<mEA@
%4j2>I(kN[j`.b[OPC0t"?]C_QBf8I[<Q,&C_$b+M(O#6bGRP?]im=Atg<3%I6Zk=)Sr)_t<u>ih"$e$(\NAh(7+8\9L]_[cH\M+M
%/i+e8cqW]*'g'3_&a0Bl:QlmhWkZ@q]jI4_$e.=j=RF*YV,6=o!HC\Bh!#>DGC@Boi#M39V:."jGhk$q?naIM"#Aka4D[;hYYLf$
%<,DQj`8RitnS_N*;0H0EiY[7-]Tbi;O9aqE0_mF#r*!1>bW!^h+;*9iJ,_L?LG$u'E[_Z3VXh-EB;-JS+"$/GiB5rb(tMlC8X*Zm
%3Z34]SBgEpjK/,O^1*IMg+WqcTpGVXbZ:\V]%+bq`>(m%U3rB#+PeY[Gm>nta@CAV=lH-;ZFVk\':p6-nE@scmW"4cK421$&M+D^
%pbFRe6V[?Tq:'kUJZn6UX^ERd&-AJ?A4R)UKHdW[\,A.h(ub6XURu*D1pF'&.+=ldp[+U3$75hXVtJ\m#GZGp^/5o.kjXsA/u=EA
%HG%g$@'Wg6j/76[AAS\h*2%X2hJ5t8<^j2%eb&YYlY\F30WlH*7FO(VqTJ`sr(a>HN1.f^kuu"dX5*qD519<u>Q=<KkS2I`$<7[>
%MO'*#iOI^aa)I9W/NBd].qp,.U><S-[:K#Ma>2W9KUplsf%t)_L*(Ee0N&ob7`@c%1>eR+lHRXqEo`<('j1T\a3qKmSG56Ab&aqK
%Aeb9PO)J$gbr1dM9?Al>C#51IPE4qo8+S34/q!Bi[>1@4R4ZUV\r7/YFQ=$QrQrs!<I\R`Wcc?m>X9:,G<*MR[eGE6G^36$f;<dK
%WYBkbiIU<D5Ict7P?hTqE.u>R7R+&(4PKDeHQU?]q<m8<h6sK\(?E6s4ME*uU\flA<r"(!U\eF>H@q2/Rdn._O8TqYNB?%Ve(V43
%&lK$DX_-ZLVGaMtB5h^JWP/ml<"j2Dg2OG#hf2ILjZ$N^j.d2ZW'8W@'k#GdLWMiE7LdJ^-t]Cap3W"A`NSMB_&1qCacf%Zoe6fC
%L8f$:fg;#F5lTe=KZ9X3!Du`[?R7q:Hf7_\\*%(uAtj!C!=oU)AN?g#pirU4pnl<5;3j7\=C6"@>ms.uLfKhd^Lr?I',M&'5.+Br
%bN:L:Nb=/5;B>u/K\_uMoc=Y"K%0OIT<O&E51%;t#5<aicIZ%5n"@cN.9QLHM3P-D+5#br"9G1%lE@>oir=H\M6HC\4/X'J&3L9`
%L,;c0rtiW\h%@GTp>N44$aG]'"NZHHm!Km@9,olFDu@]^na@'"XE+5c=g7l4n\Z0hpG0b(DHjj<7_a]-grKjsjSiaDYtUV1#NofQ
%j82+mOnq]fgIuf\h+u]eQVsFD^@r6.p=&*-m'"O@6ZWm0&!#[F`t-YsGQbYo6SGd3rHX"u7df`)a^ND7V;+:o/mA5?qST*&2GK1H
%m@>e#L1ZD*m%+7D3?goAf<U9YLuYb!S]=&sGW\k5!hcM2d$tjU[ri$BW?[1bnWSeRlHJ'u9OXbc(ooU"2I=#F$7unu,VVgW?,'Gc
%'bIlc,tuR%6XUoo,&80Ok`V4I]5rr%*l?Dh5`@I2/6I[MBC7cS(pr6Rbt>(=BS*-Q<kaj@3_[g/ObXh6j1#Sihc!&Ql]<=U5S:J^
%KKE90I@M&m@t[ZJ/%NFT\oA+fng"qf2Psi'jHcD/bCnpKPDFCI6NQn)[>Xid!kS>7Vri$)G]E;o.cO9lW)iqe*+kT%$S0+,O118U
%TW+mX\W\tuIr=Oql#Z3Fm_:O)e\3Asbg!2i1P!9R+i)TD>a./fOmCk%Cp0U_hXIAjd3:DZL^00:qCN:FnJ?.`$qhZ0SXC[*Imt)M
%lB/i=0ch*t*F`^]%*qVk8*%?gT?]WPhaS680ZLfJ-'[DMZC5`8<tGa]-d7tUMB(\00qAb^BS[,!3gDC[fCbu:W/FpQ]iRl[$WC!_
%Hs4(">u-81amjJP?X6k]g/"c\Kc$eM'@Tu?ctDaV[Mk!9P.?e,]/0L20GG/Gl`G[gd8lg/#:4P!)ARee;Sc75p2uI%e9(ZMAcrt$
%O@nR*;7Pf]!s$UO$\,Q8eNXi11f='a=F?4,?JV+2nFtBT/ha7R\6orN;4K<"FRe"R1R\m14>Y4BR!<J$(&8lC:c$Xm=[&@28I&;b
%>:a^[^tab2gf4i#c'\A!l+g][^Z)<E/Y0ut%o.tHKj=O=_;AJ%0>CISah$A145R:b][[ZG8#8/Z7WKFkAU5pa4UM^mVmAUhGb@DD
%+IWjT55SCOQcA7Aoe#hB6!+.X0SI?5(E&!D@81]!S<d(n/nVNbr&p1fU!>Yof%jl)l*2-M9e#ffb89Zgnr\B%%Q9QpRpngY^KZCC
%42,4.Z'>R@oD.1rg.F'<O_f^=QTlDg[5>UOAT?<sg_5Te5QbY5RK4-Fd=?%%=Tj.OpIbdR&B^Me"a!+<^c[C4@B>($S6QfGn\-(d
%/*Edc44SNp?1,e4),/B*CsI61ORp)"/1kD/N#;H%'F!$X-$>UN[Err-W\&L]aklIkHUr]e>B!MBC2]CurK`0bSQn6Ap!UK"XX`>j
%YLclkc2<h[R>PG>9M@A+`a?l=M(\R6H,Pbb.pDU>*rElm:V<?KXMd"9OMd"\_Z.d;I/C78mcuHgi95NfHl;56a7#IDQ7pY)nZD4E
%]]j8Q%h_^X'SUT+'`-=im(gM@5!<LeReJDXPSlcJZtn;4&BLGnRUsM?e\p<5\)Q4,[nZAVfb\2W#_##6&lq+LPL&:tS*UI5cF&$,
%+.*eaX&V\.LE=i2I:YLWB6]WNaPT,*Pbut7HA=noPtp$F(:=:s,MF]/*bgl'fBUlN-U2cjk=&4[^/'t(&gkkFVhnbB+\J"EMC.MJ
%.1C)7)GDYe15C_^B>=8\kI$rfFoN!dY0Kaq[pV`BjmQQW/jGQNQ4lm<`q*)ZI"]@pmSWi$Vjp)6HS>5QkGI?Fe%Z%rB;L7pM7g.?
%=N(IGY^EWc1-c9H[&hV+"WpiFK^hARNM%=W!4C@0OPSqL\9R?ph'*(SeaT/N"-[To'h[-(Z.uP_9pt.q,5")L2+6#b-afKL=+dka
%EV1ubna@hE8GmPY\@-l<cUF4s2Dlo4\BHm^LWr.16'Tapbie\DZ,TXLj1AEg!Np;e.c<D`[BQZW;/YJ:p]QbsVuG`qcVY_^RreQY
%B`'9gKujd@0[V]9-$fe9"_GI4D$T;cdOJ1eSNeK'L2e]VqV%6Ee['aGJpPN87S%Qs[qAcoNdn#,9[r5;V4?6;V*([kVW8\fK,AO`
%`[G*(V<5s,CBD@M*'Hf<$YdG.LDf^0rRthr]_U>tXbTt4Se2h[-9)d.p,_BS`+qYpMj73ofaDEqcW]RD(]'2hmKmW:r@kf6kK5F]
%.P!e@buMA&a$pc*TiGqYS<,_]kPN]c7c+H[T>A,+%H'7kT-]LB<Xc58LHJ(kgkuOc&/%A"Ka#7H/ohA;p^rR'-h&6`*&q3aKE0M'
%!=Or4GStXQ`ai$k9V%r2&$@I;F-q\iJKTXB!^j`=c]9k25QH/OKF.rO0*?lPZ!m=cf]i"f`Nk`B<j(8>9Sm&9MUpZi_NtMHSo$h(
%o]<dq<c"R-O[#1)01%)Y9A^8/S\h;6GPup/:F7Xm.]V4F3Ic3_jEtf[^*[:_R2s6+kBFe0DgrO778\7NT*2.:IrnOYA6W.:W=u+p
%@u"G3/'Um=Go4N<1jl5&X++Rl-.++W/7Km9iWR/82`+Uf2iZ.*dsIM?IH/hQh:L]kq!gWUR5.0.X*MF3lWM_VhcZ9Dqmdm29;BjV
%]4=P+oP`/7DAu7t7W;g7P;.N:<CNcF!'S;a&2?t%&iOZdb7K.)!.rMW<`I;Dqt@WY1VJ8M>Cc&l>1m4WMZ:dMZeM(a!&_dSg1/cS
%h6qf86)K1Sa<\MG%D[p:@#:]2]!W*LYp4jqi:b;;@0-^Jp,W+fm!86nc'kW5c0)`$I$uF?1XMV:<$ZU9;[>=Ib-pfrB9Q9AXl.hW
%q`q&!9Q=&Z68p]`M1R.rVQ%Y]D=Ju5peHuY`&uUa+-1q3^:KGrq)[R:DM80mPJ`C?CRuBFT[VAf2^rH?'e*NG`tbK3ebFB7d7S!n
%U5Psh<##[&U6$k(p$Y83.VIkiA4X(\$JS'ZfMIJa9M",eHfac<P76X,6on,NZAnK&4lZ/V.t)fImql!KH>3GMI7C:4Q\^Li)MNi-
%B_ojAR:\ajShp9g3K*rVbs$`V.6,MU:Y,%h+ZNG*-2r\MF&*"0*_1NY.5fp2BPZ;ILR!d@h46(F9\#As3P5^/^UkJj`EA*q?iq'B
%O.iXOn+Ql[q^26;eQg:`8H^E(._sfXbMZ^@`sT;b;_$<$hEAWTrIHJ%%0U<W0)r0a`NRGei0(*t6l\.m,"2L;-)<7_c-gTG:6,$g
%>`eQF)e%Q2O$GArWUi_aBmqA;2ZbM#THiVL.3t!tgNhK=C#MqD22pJR&Hh22mJt]lN<\RUUrBn8l_FA<(K0,eK*Rh0eV7f6bsG6!
%'GjrNEcfoUo0H5;n&r_mkktFY;3Tm!e?%UERJ0a\#+f$:l.a7"\\A:8JSt=,&*775:X83c>05CTSJTebn;R*>eIS>5GN'Xkk^fV\
%r&"!@eMNX6`A@-2K],!s^L<'FEd2=#RjF@`c@'5bUj.iCTGsT83Me`ObjQ+C$*3n;940cI\cTcV"Y[Xgg!Cp81\5fKS\T`>eHfut
%$`AN9&&kDo9&d`8:_2#YQN_2?E,1>?p%k)\@H%Q8g5i.JajclQ@uZ>7g,q<cjC<2.BI_')*rGd.F/bW7;JRHF6gmjB7+>.`6rPj2
%\M_ohQr!(U0Ml5$RlNM$0o%2VZfC_jdKn+&d4NA3@t=ol/lcuCX^>IN.#nu$9W$%o<nK0fMMogDY&@7XV:\1U$R]7Zr@b9g6a?G[
%?#:%0)C9auhP\=_nVe:gQ1P+25WQ$6O3b**/UrXc/[$-C#N8ESH,LlOSgp0'QuK2]s+#2P@b_>[aPWVDk((n3kDs6n3t#\t)[qZ5
%YPi&f'6k^$(@KA>bK<^.d-4O-;9]PC!pqr9PXPT!?&Gt7L'LG^0NA4thrTMflcH86PI3_jH3-1<CCW9*4TRkbH.>$.8HonQ+2;u7
%=;@pf*h[5s,c`\DcqVcD<!PBc35I-eHUCsIUHUM?p?il.Hf%?koWe=$,?c+692IJdb1o`)8-ba!a6f6i\stUr$/u.ZeqGrCn2!Ig
%i>QqdYk7VZnu6BU$gqZR,9W\?%$m/k-.Si;TdP4;g&3JdfP@X%'$;);]3>8-NOT$`lUFkmX$boG"La>99rNgl=uq7GEQcP3,f'GZ
%fe4n]hEc&5#@3HhhG4q[bc_1_gICm;_31Ip>Ej&<Re#9Hhh:d/gJk@N3DEMG,#+UB<4<7_1*ZCB$+Mj"MjI+o#dnI-5b[W:1>e?D
%Jih8[>aB-B.PC&HEKHUV5'l"+8s;bI!(:":HFB"5l<ap]:o9RRRf,:@$u^!,T"K7U7[].:q5n=G]haZoTg#0JC/o`;'N07_N8<02
%e6&X;]HoNrMte8SJqf<LY]pmNMo"G#EoscM&YG3#V]dZ<T[rXA;Su2SVok!VP5'336EJZrRQuA=lGe0_/p4o@RkYlgHRI:-[sMsc
%`a3q-Gu@']C2(M*\nhkQrZ#h3^S>>tChpeBMjT#P9-LFLp+Xj6Mh")#UH[=fBX>I25lNlrcNka"$Obpnjbo.d'Ni%[];F3a;IDdd
%ou#9ab-j$+.%B9_?q&%k]O:9M?s47f66p>$8IEo@Q)Y/()0?J[1i-WdP<i+:Nk#`#a_Z8U<ABVZg(!&Dc]2+"lRIO:;arJ0c<jOV
%^j9$]'WW3*?-5mQDg8dJ.IO*nX11[NN1bC@]E+/hN4,5MBQ8aND6J>s^e@mQ>Bqqd;J@`Z9?lid7"_&nC2a5WTAK/&CU28sf=SK.
%:`5(kp9Jp*!'41]K#O'W7pl><CQ8s_4Kb"@/PLid<teCX;mCKHqA;jF+0cP%aNp%PF'>7).Gg+Ajcu1&QNp#>d+`a[5_(Y1g8sro
%iQlm8X:0N'S:^mSBqD%nj$lC(YB7^H.M&F9'1S""kNG5kO4>Vo&:(30P4/H_Kg&uj9aT[#jo)MkkF7A`7ME@QrWiBl477l0>)sJg
%9F7ML[I^f![Q#aS"fCP*o\>4G0Du5<B4;bcDPE<FY$[l3`+S#7U/1D"LGE1+6XP>])cdY(I"dC0S@Dso82DC!<6i!"/9<mW=2,/q
%^CkJ.;Bnk^N<J5%Zii`q_pob/UrW(S?]]SD!$-n$bcg[h,6t@45T,H$c)A]$UYp@`%o\(RH++0nS.H+B41Q^U3rT]<N5S&Z`l]Xa
%3Bb8\VC@^5?JCRBFtc=$@ThCE1D*1MPq>cAp<q9Q.2;-NHr3?b`tOT-Asm'Canj<7L>g&?N-Vn44ED9KpTL5D&iTZ/Rf=@]J9c!a
%ISa&QJJ'"Ih1(I%;`n`J^NPW.M+hV%o9;;k(i'B1H!D^c3UN76&603G4*,1[$gS\l1f63)78,6Kn9](6(LLT3GLFleCpt/2r39kP
%.Yu*B->lJ7:J5mCaVWcO9]_%TF8[9T)+.(C-i#J/fiiUS_R-=?VfG#`kaM$A<YQE\7#pPrqqG$M;)5%>4`eAk;B&Cs2)rTHO#@oD
%q<b\[Vtf!0PT^AVEC+!-0d%D!JABsg@AV)Ij@?lI?N^Z]Q[Mh=+\LfT#N`oRDCdl.rQa+js3:F7h))f4EJ=cmjYPs9Elc!&`9cG'
%LfsG--XZ7A^flR),`;8aLe0!n"acn56-p/OC1epqWqM9%Dc/`SSk56X\]KQ0^HXP;>+)#;pX7/t0^">\2Y0@eqmBe_ro&A'])IK"
%o+1iR5PrKNr9M,oiLg%+J,ECJlX0[uJ,)Ids61%YU<\^0O7Mt9`tMB2DnH&hp]&:=O$9MG4jsNFs5BStrQS*jg<Pb-`CMt/W2?8q
%*=9WY3I`ZsJ/!]0_`u'^WWIi@KPjaInU]S(r8ZCU1Vrq.NkugRO?`[6-[bY1rl3jO*nlW,Aek+P`XmXp_]SkP\tacLe*t94rNH7s
%^\mtYrQ@G*(Ou,Ni$gS\2gDc\p[A.T5Q7S\eNa&"s5JP,^N%4'J*5QnrYPUF?eU#(5QC>)nONPiW0dMQGQ.0:rqZTdfDk%fs,6K0
%^2E/LrKmQ\TDnLJHLKip,,\f*pCI9rCSLbhY)+6Xru3UucX:@@a+$>^^8V*2p]eJ+1O+?;Z1rCTqN1bTFrC9)[^XhEK]AF32iMa5
%]N*?NU@m=h3mPHg!043Ff'coA[D"A<:a;2reE^;qs.8-GLVN@<1M#Mo3aN58b]g,bht07_Su]&R-3i0tPgLXGAeu;nS_k*O*deS)
%KitpoWQg$E:!#s5lM'cF64<hB_0[a5:.Np0,ccrdR1iu60TOFp:B#R&bi8g+.G%)APHHS.EH$s9p0o"I8%gc@\kk90dIlu$h1,2=
%IlEE@b7(-/r?'(jop_69mrMn8Ir9]7LnY75oB1[))0>cUH%i2%Vaf5Aj)ci3_';=+)]$M0S2'0n*ZZ,*@GU1_^%,r%%g;=>l^?/X
%4f\K%^[r%d__9Oh[B^0*>lAOlJ'O2QDa+0rdp@Lu9DmC+r4b3tjT!/^rlb??c5HFV#9DprIso/J`rGlg^]*JIqm-0-5Lf8AJ+^_Z
%n3<3\rou/NroN&;MuNptWNB)'1]`l55Ji9p=O?>Bs&[7`=@,e7j463_>*T9<a9<&4QAld=@*U3E,u![DV2=Q9#1f%hadA-HN/uRS
%Jb==fHIICe%JG!fXEj`S]bC590)?q^AdmRm:P+i6<+*#o0hajH)[;X#PH/nMn)Jch'l/Jf4a*bC1=q9bEBe)hY5C#89Q-Gs_7U`]
%!jJOfJl.bthF/'1a\Sp\jh\UiVYW3#)Uk^@-5D[3qbW]S5p&uu1]07+.)=Pj7H/[AOS\VYK8j:@2);(a,,$E^]h-;#f6TgiT0;F*
%0GV]9@BLWYMH>d.+D0h<Q/^LIOb/<&m<KA^V+Ng$57NgGD_]o4;=tK$%=)Vc+O*snkOs5GW2#U8]TU*uC^9MEYM>6j69^BYJuM<b
%Y!#D&)rS5s4T+M7"c(DOj#'qu7&)sbe(b1Zq((ZIR0HoGAG^1?[OZ-(#M<86k)^)0Nt@7ZQV8VU3#Yu5.:,*b@9>(+Na!B1[tB2k
%Bo%6:&DcK<Y&k\YGjlkM);X6D"-_7Bcs5;S/cf`uG!4k(-51Z_CR03CY/BA6kP&.HR9!qb0NiE+X9XEh0Y%2f["5qehN7DeJ<B<#
%=/c`(,;E[\!")tQE%ETd_o4qGLe`g-pA@&<C\TY:C$dk-U,hK.=H)>XX[_<V?WN8KTF/7]b:%kU@pjTRJ!n;V'5n#53OG)(`d"@/
%K6Mc7VsY/*"gp$u+k2nX6U1uZ7(BJ*m=Z78dqt2/d/`B_d]"jH1fO@reoZR&b1q"3o#]VeJ*Q""71LH'-ca?EAt'9!.\*n+5.'0T
%.Y*%g)H$"ea3I#=!>$^,*ErP`_Sh#j2Bb3CaiNX2PF(h5hR@Y!:hBZf/GP(u8_ZX/IcHP%#-HZ_0X3/1$[W`Eaf(;Mgn$bIOBPpS
%VKOh?cm]oJ.^m6C&E0@?c59mrg'J-rI$c=;^a&sq+$!S0@kD<gV&%6j_^]4%^/TJc#@j5S/!r;%Zt%>oQg&<Q(BkkoOjBY8N_??m
%Cb+[lU4*2m`"!dPdArkJ[BLG`'PJf9$77X__F16,ITr2Er(H:geno*U@LHTEgj/W&-]F]^ptd5fZkV9,Wm7tT5(6-U#c8cUB6;7H
%[`1V[,C7LKnGbr/>4<:,*nXjRDY<c:8tk<&pIGbB7'\M\\!F(0</#eJUp;Ck;4B+46p/p<h^Kdt43O\ncf<)3C.=Z>fsitHlm2Dq
%S&1[0L79H7@%-I/7eHYsmfZ"mr*.1OI"g!Us7\GmkOK,pN>3cLo5iE[_S/7""P/G-V*n'0if@8Or?BC+*a%*"MHfShW#R`kFkMfD
%LhHa^*G#BX9R]E`!n,Yp_T`k)%oZ(-oP9KJME&PfW)eeHh5#;C]4g^q9:50XG-i`[D-oS`DQ5*YT(<+!_[bnmM,b"K#*C^%;k8s?
%HI#G.-cK)5Nlq6d=fPMKI&f2)j3.gA=e&u]+SD;re>j;mTr-Fr9e:>SQ@%a0,/+.fTRdQUY0pXQJ^m;%<Ff?gHdaF60K/F6aJ':%
%=oTGW0usP)mbG&(h^/JP%s&>kPee7Qmo>TWP)jN0A4RcA3BU[pf@$MD]Fj'`DqSS@#*;gcP(7S6Jqc,sK1Cl*G[fuM&BP0r!6s5\
%fE:"!i=)q#27B8("&U;1UfiM2'M/,*]Mo=)+ZVe2&+N.f]]W.21J4*9M=NGVEa.'UgJ6<JgIZu);:(-1.RO6(U79^jDT]diVAm']
%&g,oOaLA&%0d-.jZb^\92dP+Kk%>*bOr;GhnBgsPLA?isF$bK"=Of>a*T/fD-57Gf<c*_X=KeNWlr43hDe-pa7)nFR!?YIS$E,Qc
%d)=APKD,Mj.Qp!ugdb;uRDIM$L`^Mi.U(`:-mT\IZ,S3N1^YnX[iK7hU\_u2"\+1l$OX?ckIWl[QVDDC%M-NR"Bhau_C_X7!EP3-
%J5r^KbMb[60?&?IH=jXCOcQutk*,)#&?aYYB,%+2:hO4bkYkra+DpYskoin%=AG"S(NF#RPi.'U7;<!"F,38G:i7orWMVd!GfEPf
%B+$=c,\SltRua>9lFCekj]6Fb_qt@3Bj&VV&#GY937_?H/J,7`s"!Eb_91/a1_Dm%8W%CBe[6(<<QC_+<S"V7.Rt/.>E&+KnqS&S
%322V0,(jApjQt_RGqSG"_eWig$56sm(sjij0_n9$Vj>e?556T8AL[;(C:Tr%EQ%MBmM5CT$$`6o$PN^:'Tfj+Z]hu7D8kf(<4nbp
%CQXG[9G4)XJpiY4Xib9bC^S4O[<H'=Ba5<PPr)4-:S$m#9cK/DThbF^9Fdl6gdc$Vm&_;^*)D+'["3q7?".Sa`X1(ermiJPc:%Pi
%!T_=LR(`-sLqoc41+H#IIK!79ml+N5h'$*IU=1AMUI%YAU$T@2Vm!gTkFf<JAhebpSNQ.15750GNARX`,2X*p,\hD`&58et<%1]B
%:*fK38g*l#0pqi'o)9p")ebQ*1bd)ke@2h<.;4VTcbmge/]d:NVS)ItVp7_j*Y#rJ9;[:E#bs!,)0Xal$FtrRDWP1/&V:T+<`9N]
%Vfj/-aAo+E6*s=1AP0['<b=;tPD*8W*s=qu_8jiZ[/p]k:J'.DLH37nD6)d/$_8nG1_4>%pf^ese[>H;!+/s*V57nL?`#,U,mDKA
%!_A*Gn<HWaP<`N]!,)r[5a.Y*MVG.ZXkK&_#G,AWetSYi*cj@6973$%NB+KaEAb!ZiQU+O"2n.j\Gn2O@l6YV+udbq<\.gXXM@Bs
%DDHFCI/(KhM1.EpW[\Z8n[Wl]Ohd\W5b6^uqmp**;"AQmhF,/T:Oc3scra[Ug&'?kptB0FB'>'M]j9-Cc^a<$:rlNFL4*u_b.JFE
%@T+t6`0nl*b8@h/[&dF:X!Yj&l4E\lm=lr-]u4*#O(7\D6+:-hY>n+[l+CYYAGJK%Pe&W%#bcI#;(Ul76;6E5]e^'T+W4d-EMcSY
%jtT/hk;88gm6$bJoB2p;MI9lC`"+1_1&"g:3Z'5'%`mrl-G1J<6SY*s0Osgf"*"c-88Z+?=e!e]ks3A/-ZIT(Xmj=k<O=+6iMHSb
%<%k\7k0d$nW,#D]P8?Yd['ITDSN!c0QJ3g:qD^)M'p\kgp#L3]Iue1g'4WL.YJKa\Ld[(Ph^$5G*036a]NMnZW?0E@QPt6*;r[*+
%!3$cm)bj]dV@"Z:4r-fXd2#!KdADL:[oO)_;?U=uTY;j%Z-$r5_HC8Uj-h.r!DJj9#t"6L81!7)CZTQ'F?'Jk4<t98-bT&Bg#X-B
%[5D*\F's//M'MlT#G7RWQ..>PY<jBERV*tAM4A&fO\;S3,I@i3GpM:AG[p.(?@+FjN-nNjK(KaPLneOOKI+Hjk(i^cA&llO`Kl6`
%Rt8]nSG+8Ymq+AE2F>0Ug&[g<cPWFP<[E?B-V^XZPCZT*P$e3J0cT)d*nSL48!o5g1cL?s3h0W?P,tK.1//rPojRB/#:sH)'%S4[
%"m!pn&%I):o+5>GSLeF*d>"Ok1A&(=Ia0\f7Z*QPdr\08r7bJMmKGPq0OaS7cV^G;-AdV-=`g66WN;O:(KhWA#E+-=@]DXCoJ[Pj
%e<ANkeSr;tpo[)VI_,YQ$)e4TMl1J3*R95?q[NcSEN48,BKKWAo)R2a;A`P#iF%FCei"AQ&sb+bC[H6V[A-eV5cNDC!<Y0A2@WI<
%$l6CGAs!)o@W;X<_'!,XHf09V#.6dT1J*N$pED9eZ`FL!@-ki*9-Uc]rYS=CTKI8_^SK#6P-,;GPq7d,$t0Z/Ar5X&4YTo=ksr]l
%,$Ri,fB&9I'@M@,Zc;,"LVN$#:'+P'Qi<q>A!]$TZ!SC-Kc_DX<]GmI>D2,;noU;?VfYN'4TlCY>M5>%lUF&&ie$FbMS]Idrk4hN
%ZV(k1Fu0D[mn;gk9HGOrGAEN4OX"VEG&L:ha*P#f:QFVo+t2u+,s5\=]:W)>(?iR.ND_GHSpGUcVE3Q/,@+%tpY<nbjG70Z!.M,P
%L>^bXfG@T!Dm'Kep.m`'>WAJ@=/ZL*PN0+p@b[>MqMUng4U.PCC9Y+pnFgE[pE@f^%h!:siG8?OI;mAC'SF@<^iS.*;]Up;S&qPR
%UJZ*H_%lrcn#^kVj<`j^iAA.LG#k#MjB5"[4R/\n40>FVUn5`sb>5V!L"IV[JWYS2=T8)>X?X`dY'&u.2I$5S4HOQM4K+eRqc`GS
%/Q"pINM2a"D;$,P7L(*aDsWcm>$OhOTHC[$U_')KK^C[;'B)4'PuNkrf:J!gPd9q,<$\dkDQ@6"GNq[f\&G*qiEtmcc_<T.b@W+O
%JBST2Qs<?mNcti7EhYGZ8+kXLK0ua_N!Lu=?fe.*&\-/e<XEfqA;U)U%%8NL"H&F6Eik*1'T#i21`Yhc8kd\SbaFT_6p=WUm7u3o
%7_7=cM*4:WDHp;4$=2O/M\sn4&8aPY.^]Q['bpAP#Y[[;:/gG(--b5\\!iY_jF<:]6F!109r+ba4O%:TeXS&HP&Ta>TaYg!ohK)Q
%lL^1!p(t:97)@X@&2Gf7I;DYHI'+N8U2lT9jCH+Re]%\XPM-SgF&=_r\2@J3e]nT!(IDeT*,T^9VnE8;F\]gQ5G`8EC$5<BS!/_<
%JJ0@i1T:QZ0pjd%R&7#a\I5Do`C]E#BHB@h\"u-"iKV][+Z)#urs[o'F2V83."EjehTrM%PWB)$;Yc6<2"kIVfr%FpG<X)K$UcbF
%qu0\?ThF#c\*UqNgI2UM\VLtSZ"A)FlkK)E-_g%#OOtUn\e9NM((3m_:--9dMrGIjSkd#N*BqRNj]O3rZ_&<df&:1LD/61:8SdU9
%%*2U2O^'sC&-5<tMD.F7QBoDd^=n1?1)R1HSu&_joH^e:[`".d\Di^>Z]oIB&(L?ZJnni)BK.#W-JgpD(\S4K*(BHcCJ:.^X;p@@
%8Tft$a*tgSk*j;V#LZd*\#TY-EfF\epNJX!)Kf:]O%=KslUHjc*:ARr(oE`Hk&*uEqF$_R+AE*TY-N=m6$\`fmbHTuK+I0]q4s7t
%/M(2EGZ@0[<OEmKmmhqeek#@q$:/?"C)kbKlWNEA5aeaG4+D%Al]7'OU68U9M=%!'bdnf49*O5FAkIoc'YE^?8deo^G57WKoZnKU
%rb)8hs!<Kun%B#$=*.M086GQN=-K[G+4-(bkol^XTi`&#_K_slB,Q`ZNbBpsG?X$m`.%_7Ub8cIcu(0_\PuRJ[!#EP47;JS$4$\E
%>,J'qm"VWV"`Hd]O3(ZK42r?8Pf8ETE<q:'NqB[Ph5Yb`]5$4T2`XnHl+HD7<R#"+G:VZA";//B?3NraTiU^9H\O?LmXbi]h:+Pf
%WVk&7+<tm>g9o637U!!kCDFqg60MkC;Jd&mVHEXN>Q/(t,lNl2T`3JN8TOe9P8>>25CBSGV]bIIg-NQId'O>C0T]rS(DK5dISfI]
%"*[ULgEJ^SoVAKH0a+p]-gI4lMhd<Y5m\lm0*g(r-#'@\VesVWSN4clD3]K7K`-sIeC8g(np*u>);"af<Sm]pj(h\[C\@MIR%K;!
%7h*f@\2tC_b=l?KCp?1rb(psR'1&"c.5F5G@"5)UL"JD`G9Y9o:C?=,i0Z`h@9diD\EKrFQ!U]DVq1A:i)<2`i%Vb$Reh>^;CLLV
%c$AX%:ARiLF%6QOP#O$aj$bqUhBA;A_K'VWn<I8H.X-*'fnil;_)BfF!pO?2"3VCtV`jiR%Ohj?m/ZV&;_j"X1)t3DoJB$E%X9&.
%'UH2"oG"BM"2'EIOLP=P1>2D"T(NKo?/G6n/H\Y1bgrP`.mU2XOc_1k2qGG'AIphGFen;s\gMbA_Nsg<BnPD5\j9Y6O[HG*YQJM9
%Uq\JXkG1X9BnjY%lj.6\TT<F.AWd;ori)oao^I[BNeK[Gn3r:n/HEY>.$g`0Q77F_ItVdH!&*k$UaX.cQsFOK,j_W=e9Qs^'G4pE
%kT)m1,'T(2,@Z6kpp40;,-)KGXgmS-=ZtH7=;@.#\6@4p.`@HDdgcj.*X0ZQ/mfD,3Fu@u]15K?`?Sg74lg,g4q08S<=YriM-8u.
%rc9S9pD79Z=4Q36F>+=(s%sHpL,.f=6Dp'tDA=:('<'MV5[(u0FF<a;^(+a"HUTeW5Q,_95+ThsQWBU!/clGNJt:UKf\cd%./fn0
%"d@V`bmZGkSL`E5&ZTC0fckg\\e#I?=6F$&P;o^I:^!n7/QXc_V`N,o'jQ/MDI:NcT'*YBoSLL(77%7bmDsi,==6G"%VttlIqMpt
%L)V9Qh5B,Tq/nAc95oF=&=Uf,6.D;bs6NA,Of[+j0$GlV\7:+(4NKHgQgX%("'MiCj-E;C3(8G,LqABD-j"nFh6\:LcS%^d9.1hk
%88eoESZ;59\PLHpG^SQbXd4+de?Sh%9gqgo=9ee+S4f(HO/165MI<:d(t*W=19s>c1u([:Z-!+rK)TQt<(oJXEK7gK'Q^0*VaU>i
%^S;qYWire>Pd-a&:4J%_kE6-Si6..H9-)[C8PNX1VI?Qu7'?;Z[/7=aJ<-a4>c#t^#i(s"k#n$8.uMIBDA$.skKUMMp\TJECWX/!
%?KHLE=prC^`G-^a0Cika8h%po-Km"k*^?amKVcSRmm@2&no4@J%?<d[d=D.t=!Vdr:-hV,r&I6+.aQl=KO%hO@#u+GMP%9V4ira]
%1[jFbn$`c]XPJ'Ik=Z!V>2mpg>"\*LaidBl[8D9>g8&?&NnKTKU=HokF/<?3PshlUPufMNV\gFM!G@g_a.T*G7(!B/3*:94.f/;8
%_t><Tgdk`sV=M.a@:4M;S5&[T'^N3g(4VQL<`dD";i.5XU!`SL4%a%0=?GYbGih/Sh;-$M+sg(FAM@++Ya.9.l)I37*rY1ep!J_M
%[H<,%R_E+nJ"I6@n;ipbe>)r[haGqYb%!YuD_NK,cAJJkq4X,ekCR@#[g'KXrO!$6.KL0-/_QO3-cCW%'Bs92#[_p236ktViHHdU
%ROZV(aDI>6)r2Q^Nspl>U3)I#!<[kOk)#rE`CM/UK?3oEiD8o4;23[;g8c$n`Hqnt5'tVP(61^Q^*sm:>4i/F:/Q4n$./@1M3h4#
%!l!rcR0MCB^%.mah#>$nCQ^@'#K;7eZ6?*Qj\bW/LmZ-,JJ!@[F)oW*'EIHu/$+-T!7qAf<qXLEF'.60Om(gj=Da<+g_lVuBqd*<
%4VA0$eYtPkp31=!0'\Ed,Ur.s=BHGTae7Pu2+rVTa4%3q3Ymi\=9qiUhjbp@*<jt2g_-NSAT?lUDC^<1gjZP8<f"9)982&+pTVYI
%O`E1NG\F=ipOm,d3ZXE[R3[V[:9pi?5-CbROAMIsBf@DAm.lpGS4dCi7$G\Q4DiI1H]eJ'24>M^j(i:,H1kg,4^na&0-BeL*\P+<
%fu!.__WCMZDf5GaZBF97aKq'n''Z9OkRh*.An&84*:h-5EDS"nR9dl`a#Sk[cQhcm<HHnSam5u(9u>7-D6'c)AjH(`]G:G&%8k<r
%XWq/e(6GQNa&rc@_&Us?hpculO9b5lNGt>t/*Pg(l4-Q$,52oj;7[*hW_rFC-J!6ZB8^REAXP'32j`Kq*TR8::$V=Y!Qo7M9,qpi
%f-<uFBN]=-6Yu4J]E6Ig,>)5SS1$rQaX8"WDp.Ml7C-9gAUcZ'C7-<+PHtMbP5\U8Y^jN59.GNkeb<p_nJ!e[D<dmq$'*1EDji!f
%Cs0BS1aLVo@H4S'e.7b@"]fP3FR"ZM?<mdneEG*X1g":J`;D`\E4O6$hEbT9NWnPUnVFKG3KA^4/Wm3hH$IC^6M]qaUb+IL9>gNi
%+;OJuo)sLiQMh=92#gKfiO`@2>k#J*C#LEQokq3oP1LFudjn]1,XLWGGAfs1ZcW$ZPd\?(7$"aXiCN+sIuJp>l)Lg7\GbbNUZPi4
%nlp<5,0MC?]G"XCIIs\C4`^KIh.pn8XJX@G2nE.9e,ufo6bh8gXQHoa&>pU^M5t6CHA5"2Eu#!:>@$=W:6$scVr+3&`Jib\W_<_d
%e*/?sEBZ.e0H&.5%2oKV1?,>,4XRb!j3b;\$YpH%k*[IICQ9Seo,^Y9Srf#cFc%bJ1D&.%8)1Xe`AIp>3\r;ec>g_lH4p,X4jWHV
%Qu`KX(.<[q?dTQI6QP2NS/DT]/0=*<ArTsJX;"C.AXt]@%$)G^6jaJ:G<beaCPc2rOGELBe:pR+b-#omj6cqJ<)'pb>dH*l*/tZM
%JTP@;KgU`#>0=;DPO@.hpY8]K4Rq+cA!`;J`'s!oAAF+i<1f!jTea??*W$CRC76b$5eUGd&P\<p8B(02+i\8OH6lP[d2OtYf*3e8
%^;:S5aM?q0%:)tF"@/_C^a!"p[(MoVE0#P2l*?pbjp\s"aOR:R*"uNo0tO,u+0d_8S6`dHAI")DO3!T[!_a%O0Nd2SD9JqOJ>mpt
%a2]nSJBskP#=Sf%A*(qX<Ok)dDUhr[=TXSN(>%\-`9o?8^f0=/jfF[V["+Mf:'&1kA=.OI7<gBYk)ec]5+U[X%gtr[2e6e'A(uI<
%3-0:iY]V^!EsLkd^V"l6X*'l,JEe%V\ZDR85NLd.*qHWo0T1#,QnsJI_=#k:QkJ32[M@4WI[8@i!T8"L!V2m#Ug)tBB4tpT&FQpL
%o$Gp?1R_JM!D(%gBnkj=*ar58N4intCk!hj<VK8;`,c>(q:[b2h;Z(Ild.F,gteYu'>(AXFpp.`o!7"*+aQ^.Pj.i]hTQTK3S&DG
%*b-*QGW5:Pce]tp>r'X&G!Y$Y-Me]Fi_8pu;-f(Jc3qKi#G3AJL%osQ1Qu9@a+OLQ+.Q"(CmJ\rnqjYmedAO'aFI%aO"!>?\C/\o
%.@notmLhZ[Su:EO$V+:<^I7,Hc@oY%p+7FV&"@E8k62G\LP5JB8R7tQN,`maRe#*^T=%*.Q'757"I"2ZnQ.9;oRNJ$@E<5QH%"BO
%,?3@sVd>a)lBgP,Tb+J&(=C[['n1`=>m&<O_dFNe3`3X4)Cgf&*4@r%I?XNM]XM^9%qt!51:h7@p+7Y6>2fYN/M\g:;=SU3bJ!jI
%g=M'CUWpNKHu,T@e)&`C.G.U0F.8F8#d.?$H"hS`IAGudQaEF<,'AD'=i^NMqGqK&\6.[E:MTZGII<E!]EK8S.a\,uJ]_uNB:]dA
%g-<a61SBdtc(>`iR!ZX*e)JA'(TpkfU/8abFMYU([4Tc<A#VmVq/h>-ciu:L"-)ot3p'@AJX+)TY(QqUS3"L^dS?*<9.?Wn(b2R9
%oJP>S"GE6soa"L/%06'-/_a3tgeDUX4Q=3YOg$%Q`UPCqN'7J8O*Koi>_S/FbkN?5anlJkq])XJeQ+mUJRS+lY7r3mheFo?eCVQ,
%opEnDK[hceV_PZ[ne'o5If)H6!l[`mQSI%NCm[>;0-W/pD@7+aA8fAVlPJcVQ376QihFWB;f5ZpB-T?fR5jIe\\SqEGTaSneJ2co
%i9V\pOf0r]0Re9FBtul*4.SmhqOk*!A,"%/[5<Hq>Jg@]YkFW7i7*Dqbtt=0g<QhFO\%ZrLq#OpF6j%<$`e.rXuZRC_Kr(9P1)[@
%h1PF$lDqkTHRdM/B;S&0j4UA,VEQ80=:\t:F@Q\e+U)2=JnEi=Q,qW[qgWo;L'3d>=7n%a0n!g99moE\-LKNWnudM+@?tOnf)T6T
%/U6o*("+6@r,f*`ZU82[a-"erp1;SilN_Ie*QYng3nu2::I(SeD@bYRTmgu^#O2$KI>R;(H/`"ai'b(C7J-`jJ1LlAMIVN0EYc5c
%elGi)`NY3&f4$0C5uS%oK;DKK*p`h@,4WG_7aF,.33[9k+i8k<;$SPQ=p]^#WM):b\%WrIc!nKq!m1QjfuA_X;Ccj+3?3eW<(Kq+
%+Si:OZZN0NP531:!G)lC(aKpc+TbEN+SiO7/u*ZWpsu]AKN&q([6#&]8l$51Ro:JV<gZ5K7fR1$@eJ.6**V)TG>AOnW"RBl/TQ+T
%[`H*7aW$qjJE/jfY/lD$P5!%\c"LY]RtI]aBm.3aFl"0OD&DqJ2t=TB9*ob0,K1<SGPI1m"l=lgQQBMsf36a3Ka^Q]U42trBBqZj
%N07uPob6C#Cpu.t5o/Mng6CuXN^*#r!4F$TBcF98c4iP:"p/o!dulXcH[Esoad4]9OQ0ooJf_K1RB%]'Wbq^77DENoU`[(@<F[JR
%E[_83=nAfk&TsEg_F;&6Q"$,1$EZgp\f9.-'1_P723$SqlpZ"dWP&QMT-CR:WJd)95r0O1AX"Uq`#-*ClY'22@/#dg2"B'$<f7<J
%g!VH^:.m&hd$tY#W-i[o&6tefO2P%NV/I`gWkbf7(l?hgE@IdQg8f+fUWFu^e[dI#:6pDIB\b>UW0de!3Tij4l-l>-QT:2DoVB6'
%f:=P2+&X=P6#B'4:PNX['a[(`3u.V?%Tf;J%Lm!Y5H5X^ST?:'lE>fls2ZqcH8@YQ7fR-Yn@AL:'NRZSl3Pd+$455:c(Mm#6?q!e
%93m.fFS:_W)7,>:T!XoS8]%U@ST)-".SLf&W,i9cV,/mTD\.KKDD=L5.G'abEqNs)08Z7G(%koB:HCise#0_>e'((pK&1[RV,bf0
%-/br'lC(9mfU=!\e00dq<sDd+C1!<4C2e72Bf+(*!K]I1CJ=g7g!]54%q@79=eQaEU8G=YEl+c,Kmkr,s&DakY,)Fu-*sS_Qkh4f
%gLNa9NN>=@F[K!]Yk!F(N]O?,W)Kn46-4O:dstYDq`.4&drg'/ik//Od?lcBl7-LmY>gIrdLi:*k[rUV,g"2,I-pIeeck2]j(+!R
%M7.$[MYZA)\j54Uk*HEQ',r[Heth$jNdb$[3T=PM?)S+=@/`Z&d^*Ma=lE,&9I;6g#8#.7.IpmpfjK"GWat&3;;=MnVW'7,U*H'L
%f$g34=u'&7E[WY)^L0.5gXFD;+6<0qqNagggh++[QF4nTdi\IQLVI"P(g,c\eV*K%"^/g[p\p7aq\1]4g[C07&boj<@pj2Cb?:ee
%X6]c(k9X;bG3t+>#^54C6P^u8?IhM))J)<_LZW)%.rqJB@OR'7*g+;]r?PBi-IZ>k/S8`aM('"'h&.WhaX0_mR,bJ$.te3'qYSV6
%STJCGVp`<pibpP\5`47*eZF?J>S#:f^8O?qc:DOHag=m%,c$;t]Y>>><>CUtZY`kH,<@)3Jo8F882o7(:W"+%,UODp2)PhgfU9kf
%XU.U9\m=DV.r+)mgtNp`n8u-uLSnETqK@p)l5FF)MD4fk;3c,&f4cd=@OG)[O\(%.h4LDXnNk^dYaX+!9dd%Rn@WE42-UsDVAT9f
%23ZuldQ/nd[9LhLN72m,[Wo17&pGsU0n?lZlMW=5\k?e+_Se#RCX'BO&RS]h:JeK"/tOgf=9)TO``%7__7H7MhNU6KSsgC_aieMH
%pUp]R\Z:&a=qI,T6YMHRfuuDB$Z"L;*:r2QDgXL*];j$7Agk+Po>e6hJ2'5KT^,T9Fc2CmJnAVs<)IY:PWNJnceFcFQE]NB#)dU#
%`$@(#AZ8<8FV4K-"#7[h$N3!ITNL\P04[:kEqMf$aN(b"1kKE-`rooG.a!VK#7"\]lFGOT26nM("'giaGqdbs_m%m6[l`:0ObA`,
%c025k!Y5TX4rL(R$s'k"^Vr=X=,&0mc<V37Hb%JTaSGR]j514)4>Rnc3l/;0T9V13S*>EGi7S3P;7E&-C5YtrSI/j_E1u(ogo>h,
%&3G2\;qMbtXS*$nBZXf)q0$8?Q3iT:MoPW*7Br9Rd68m>%r%db-nrPe\7Kim45&1o$-^ZKEbe)(OAt&G;tu`OO/SC(1VD@,0Je9`
%,f]ttCeFI6rr]TFa-GJZ9CQt6@1Q5V^',uhfr%j6Eo"!>;uoZS6PIR3EiD+MNM2Gb'r7n_Tue:p^$V8FgTG^Nl\M&[gJrjN*+Cij
%[]g*]8mR.6YM\&G'JGTW\7)2j-<2OZd"RgXZW*qN(-hUlXfPra:P-,4emWAh@kCNYA>P.0<).&>H/FQj:KVU@^)>t3`,LLW@1KZ/
%:S?LgH!c\HiV@/!b-'N53)U<<G7u-6P7O-2g10TIQj'V"h8Su9WQ2!X938=ZbU2cAak_4`X-5+Vp3GHKApa]^,"jTsG!;co5K=Z]
%c?a6Wa@J3MWBO@`[(q*lJk3ia>rj`8qm<s7?DbX]cV#s1iDPk-,>3:1A-C<0CB>GFL(#+uP[7L=UJ?g->0H`J33?fp*+dfAE1kN8
%9@5nP>DuP"CmOFTNk:C$h=1u!Ys@Gl0Edb0J.r-,RrT302m"j#5H]<RNOlMC82@p7CfNBb4Ce'nT=<jsGYj[.&clC>W_qO3EKsW<
%:pEKr^%6Cu><\K78&2p8Lo4KXb+i4dn[pglN81a"W-qbV8%VX`GTN.B+&%,aX?b7E]P1E"A<\.W<f/AjNlW4uN>"#@'cl.Kl3bja
%$b\eZ:mTQYQJoUC=?SV#@`.3OZ7=(oPm^u(;:WT7K>G6f&;J)#!ae)e4GVeON0cYp&6">s_)U=ARst0L77)"\<8JM3`Oo-3`3HZY
%8a5,66BO0iP.PK2N+*'[Fm7q>^?>0aA#hL8oOd3U3sVs(V35Y/Yu]n@cHF,,C\$mei(lhJeQXitl%?Z4_Z5ZtZsFJU;#qiHHq");
%dI`m]FojtnoO'&[=kVA$?qWs*TTKO'muV=::i;aEOXn6>WjMDbl>HB*$RIck,J-#E!__<X5[_MU^o9"Uk08XOWhBRU<,;aq87E)S
%_'C]Z.CG0d=c`NFf)Lm#RHi9q=t3I:'=OlQgnUjFNdeAWeF$MrX"@2)@V-1*<!bLC@muM;k@Ks[bR1fC[cFaI!T4<)hCfpi[kfL8
%2;n1NJhJ^Lr975c:8F?5AB=4L`;f<=h*5$l"AFN@<a:7=`cZQ33Gd,-DJff!!Tm1FED82IhV'4k.;tL8cH[R*RaFRVA-PG_g)[mF
%Y4LX5U>7e6GFN.96-\46H3L+h1X2]+a(iAk[fD:i6pN^@S6JeJ+3OsZ"$Xq*6:q#kgIHe#XP36t<7AK=F)J/ci`D@"B=Su5X0g%&
%CP+icj:YktUo0i*Y30-V=Y6Qr+89ojZ=I`]qLT9Q-2Mc,:<a$[@7:r2@`;.IK"Kl)XT,=&1gYTs$orXP7cFp3R<q>b(@s!J.,uR7
%(M#D4M4OE(OOjq5\nXMDMb<nEn$K?j`!4cY`DpL>%[efm]WM0"*PO<4kaSn%:gmue0O'#u'D[s[Z"JG'FbdV%,6ugO.^E(KEIH,L
%Z9<Nk[h4=#0:c]6n+*i3U<uI_7cOt#?osY&3*3rKA*B4\[PlPZ6#o$O9^KGRo6UVATr1rSCsOdpNQ]tJKM-Qd?&m:9!o"#r4ftPR
%'1W@ks1F;GZH(U2`jd$X$k$=KI\S+sih:tibiS[Ag[`kFFEGm:__U+a8iMZ5-Dl,DSU;mH,=cHVR3/n'+QdIKNN#*N()D`AP>T^\
%"RP3P\BWDXK)K4ppl\a8a6VYp4B*eD5@&gL6ESNheY:$J0eB27,p85QL@aEGP)/Snkan@nr$&@+85oRggnW[MiR@C9d\1d3dCMV;
%N,3_Yem!-NRYabjNY*a4"I5ATMATAFhC_Q&GJV@rNcQGE6Wl"=-IV33?7Zl\Cfg"V%J_SeIIWMj=gt/4D9)?TMX:rnN>tT:n;F4\
%b:oG[W3"9fF(nE7/Gk[^9\M)ld2t`amYq6Ckg#DCl9@]-W+n:P#"fqlq[,PCf&rg%)XS,F2lg[]iPjj,<_@0NZaa/i$oC1o9!$3=
%<PbqK7Caq<M>W5`Fq7a;jhW,5(-cY*A@YmENS0oGg%F.K(V:\0(J]gEE+-ho[-64Pq7*34]^L2:ede?>3<:5'GY+^)/'CoF%)lBb
%/uEr_A_JRs4T*le/Xd;EGNC[U?W07gV@i^"WK<Hg06WWEaNrRip1ftX+[1(une/]5h7cl&pJcsOp<;1]Ad.'l:n2/3ASuC[Yh4JA
%^-93d?@*HN=Og<bO7rH_Lhs2lVm'9kK@FoX>q_;mSba.l`T&t]^c1FRK0K.\r&'-lOKW/JhVi9b?TB#i@SmEbdH/-#k#O*@I2XQA
%i`!IQLPP_5BMtN3VR1!`[H3aBI+?XT!0`-Se4e6*KA$4/S+jt`C;rkO+mFa1IN+ILXWYV6&-Mt``3In7o)T,#aUYXb?d@Z9XoT6S
%>$-oge<%pSZbOR.2.X@k+FG6uH&'8q$1D;!s7co/N7QYKVb@&>njZUH,.GG*LTrY&*fK^(O[_u]\o4W$9]qP$.%*VPd(iVp#no",
%TR$+bcWZ!GP;q:3OdZ#e7D.aFQC]X*l2W(EMu,l-?pjtNA,5H&Lff*\NneE!#b*-M%H!0Q[_cLg52i#nOQ*BK9e:J^$X&4.F"13Z
%Tr9Ud-Msg$[H&m@KiQnqf4l,j)G]>G7QXkQIBG1l;/srG'kWZgr7&fI-_2r!(eI'o\^.X=:$_s]Wc0Eul>rO!=Q8lmBd^Nk&XN!O
%Pdfn=o;tE+Ypa\V_6!ru'MVNCB@s:b<8?*-3.,.lAfiea]sGt>Vn-]N(+@5B`LB",,'I8?8`c<#0qbWQcFVX2l0Bl0;Q"Z'[TScX
%.A`1>>7)HrVS:O*\()<P]>BeH[F$-+:qJob[-CP1l8<D!#md8^Of[[t7iL`hOJt5].9C-[$FNi5b%405Q=^2h9SHD`q70kEAca+c
%fOODj<@4+pM$7-O$@4hH!0N"9C:CSk:M-br.q&,LFKWVoH25.sBuomgRN8NU9NW5(HS)7D1p(tY\^^tVq<YaSQV>HVZ0FBo8(_U<
%HL)Rj+qN'TcBYJqr)![d$/S>.')U6p!nH0&gmJSi$<A]4NQ<"lFoJ7C_Lb%C]MU>8CpIFtBuDunR?,!>;]*iL.Q=f3[:I@;Kc>4m
%dBAK_LU0I6A@+:uW0`Xh-=ldcXB;>NO\@35#R*hdbSg5YlWbjkD9s_Nm[4`OWqQ<g<9&G0Z"-M6i?9nh7&TF0jF]Vp\Dtl:=_]cR
%?'&'15SgWu0%0#Aps*Y!_<2T<o9+C=+Ul^X8kQgEVTbe;2L?C+B??d8FfQ$D\L^JIc0O/iTj9([@=W`>GG!K5lS)V]iGec4OLTq9
%!&_i-7ofklFo8e*fdJD?h$-db2J^A/+l<s;Zn>d',f#5?5k-fO@kFi;Pp\%j1L20>L]rE)G9.FjH(N2l(2KN4N]_dtO)8rg.)Q1G
%$N`sag-Ms6#&b0:B?%Lso<`3]am'-9(m@!2PGf3D?'u=!0\#;#+C)D,[j$r%-qmXLTf*BI>l2g4MeT5^?)R76hf:&O0+k5[=>!P$
%6VNj94usg@!Ii2boRNL%OY;b*JZ!6_n*F*VjSo`<X*U!eNkiUU(&*(!GTpW(ah9MZaU#D%[X,HU\$ruLl>bj6\`04X/KQo;n4`"`
%g>$9Li,sZQr3Nm1/1-`7%U3!d%Aru8(6*UBi-aWmf&^FN9s(C;+f-8\Z]CNQSnITK@7DrN(DDt[Re[mh-,BhDpo\c"Rdn3^?2Bt]
%`KukX1LM9*q%>g)%(mWER!#;Z(0?sU*IHbE`r$El9D`J!ElkB6q!0?TGT.W$"sK<\PqUGjEJ+qWp\0K5=qDV@,@<\._O#h"+joO`
%3#CV4L@:UH+ZLWMZ90H/7O#Q'c>`]W;#t#>/KXUR[-H0tCjL6!b#RhPiKVPmA'%(O$O%-GL_.gRM*9gMG'1[#,;eT_[aT:PJK^.+
%?=<-T^5c@IB9pQ"e;p)]*S#:H8D;\8m<-U-KBXV0#[?KU6\jek$98Xn%@&JQ85puc)Pa,P)Ka+S5"Aem'"6*IN/Rc5HqY7jqG]S1
%7Ta[gC.^n<&;YC4=LXP@!1/WU^+$[GfOk=K=5^W5=?M9&T,T`"nLna&V!2U93D@sYB(H4fYO6KVXuiE3C@*c>>:LV,[;0;J3HWJ]
%EJ`0_8[^ZD"TYI=2"l(_C?'lXUj(/:MbKS],YH7S*@Xah,FOH`g/!g(ISu#j-&D!D)"?1;Sl_NGM0?_FjePD8Zc:PJ*6cYu'\\D;
%2+l7$6o?UBBe3".(^5e8ZH[fkLp01_@%YF'lc;3l,d?CY$@GNTDIV])Y1h]8:KF@#&iJ0IW`(dPgX;6TCW^DW2L.;[?j'?rM!/UF
%$-EB4H)89O9-T)sW@NOEpt__t;gh&@9H$%BY,YMaTV9\T9q)h`A6K]8,=6cJkrgum><Ws^I1CTCoh[BDP)Ch&14tnhbj9r8b[n,4
%&kpeI,%MT'Re!Sqr.V,WeUc#qWYueS@U*)P`TRDO/XF-&MN?Y05qI(u?O@XH+_`\iJ)3l'.p7JGk;66(H>Jh-0Zkcs<Ufs?_uTAb
%^IB@FRhktT+eqp$c-l"NC0V?L@4c,H\L7&6n:.VQg==q@Y.Z;ol$(4q1^2Usl7qrOQJ4C(0-"'4:h),U*s-U.nI\M6=oeX#4*BD,
%]%&W[9T-uUCfm!l/rK1lVC!&@BPobBAq:R>^([BucC?"Sfh'pN/a-MqMcF2nef`'3_2-h4WtsDE*G5&Hg0.kS;3)2%=ldc9iY*pj
%ae8h_9pTtkDd^^'obJ<FLhC&(PX9o8'3"n4i5%o%_VBhBRFZnp##!SM*X=\NiI_$-"]F?iZ,&9DWIA5d*+e&I+U+_VfY8`J!t\$%
%Yha4,VV^_D[f+\e8=Mg*)hDGpiP.%5I.DpubtEu#,IH7(.Y83]cWSP8L0cPO0NrV')\.<#lm:A9<G?W%I>;l5Z(NRS9gRLno)(#(
%./!GAqiN=jp6?Y,#(s8MlVGN!Ssd\UA0Z)hhOdTIR,[YId/4r*d.q/mbX_TpCA!c(DkP3Ho'F;&RC$*pN:67uMf'j0H6hPPA:-HO
%)3MIW'o:1n;tT1t\lm>*?T\?h>J#T%FZ9J(2#pp.LbOi27bU74_&2nX2q8o!JCbY>\.pX27;Q(0J,>d[*/aAjENDg7#X4!6M`CV\
%bPkf7F'&GNN_KjMirZ)Nkr:iWN(:OUd,F@k9>Guj!rlNZO%IWMeP?=7hr]ti8<?XLBimSsr<"eA8Sk.b<ek4?m+O8#Wk2%=JW)B[
%cZ/-Gr2?XZ)C`8ofiNl*10k`"cL/k46WriF3)AiK\BFtp1l]ZrEcKtn?<5%;)ie%P#Z1(#1#O<LZbG2lkt6I<*DM7'!M0P/8YJiu
%M@>Y4G7\<U3A9j^&_7i@nob:2h$<dm2kN61TBh')+,,fU\QG$>W>TuuVFCt+?T$4W3SbWS'lc)K8<_ImkgsQh4_NX!oMMGPmR:PB
%YS-e2ccp-B3?a-70EH[<6RpUl%#XdrB-rj98S4^<O1HZ2o\lIF;KAU&NRG&d9GA)so&mM#Qm*EECK_t*V.tNW1q$XG3,-GKa?bEd
%AdGM+aR;fcA;GHDjJOAi&N2)Gr*3rN4]h'EIuGpV`t&?opME@,&j5d<,H?qTdNVK<1rgPF+P1>pP*16F'h=,i!UdTp:U=^U.Act?
%M/uDVUa(Mt:?rO,4JpdaSO5\M?->oH(CcWb>@[N5R;h6D?*E".RtA4^SUaM#AamKN0;EAMT_/1TY4t=!ldC5F$JOO'+`)J[Me$6t
%5UZ.cQYAHRkTRh_B_,OZp(S[u5!Xqdp<0+PD=bqsWRf<4a]fdNi`YRVm[mh.?..7Jf`/9c%V4[W_&!V]'Z0ZLqcfS:RY1R)nX@L#
%!M+Olbl]=JHM6]al-W0+TWde\^_G"*)FVoNIg<I@T'a7hqDcP9<9HU3`rlcOges^;mJ+Xe]ne^I5T3F=3n7to)`[hPNs#DR64k1n
%UMu&)[m)@jmlQ5?aXJ>D^>Z=bde=bS<R1p1Ug?gl[O\*UhQ^ClRROZOT;%-V>sJCD+u82,D$pVh!5!*Ml*U^EDDMXf=Uscuohrs%
%_!,a;[I;m:,:-T6_@g".rn'8-?j(N0#dBbY4rf_j<?#XhY03"$<`HoRq_b\cLO1-h@`4;&p!G=1]G!.hR)nVNj'MjTp^QrC>Ab[`
%KRML]n/qs,8egEJG.g?2il9Ri9`d.J=5l2oQ*u/3&"@RpSn%.'&_S*Y?+_ZXFsRdP`LK&^`'2(&L<=F1HB<8q&q!0E4]-dKie`N^
%J?K\+cP-3'k<*i*VgUF,.9,2E+_so+GCgNE2RT/lSB7U?R7p'7FMD\)WKa/TYpf)'`#tJJ9kj5!Eenr-@/jqr%-iSFU"]ICLE.PS
%_%0$L*3%XcZnt`^H,O$e8L"6I'\&eY46h;$*_O4X2XiN>E#2YUs.1@k(/oWfd%a,#j,LFs7E\mHK_<e(4^2V0oco>IAL"<56;-oI
%7!J=F:V7f2>Ar#>g1)>S*/Ld2>Jr9>$98qC2:%t%nVOrf6QC6^;M&`]io=`\<\_B_MHX6_i6X\n6HC09+t6Ph@um,b%R3QWSF!(2
%mkMD,I'SL\9*eglCBef.`14VJq'hedp3&KBZMuc#He\WSo:6!&M;I!C0.EM=.N+@me'07KW+[rD6/^AdP?8agk``GGDFUL0QfYO/
%g=RT=bj<5m9eU5@'JMdN7!"gXmOj?]PB4`\M_m4N*+51t:He=37+2AiTbh'/MQ7@Rc@fdWE'b,2m8$ojO?\cgik',_=uA&t5>`cT
%ho`J?kB;%!WT(1dc&b7bMCW$Tp-]t$FKn$lbO)1\5t4#7o)nlfIfE?;\]=@<cD0R8PA#Ch$f0'uB'.GLO1Woc>X2^;a5G9HJC@&@
%N^T6u&Em!)G+X9t`Ni$:jSOgM%$0Ir7*7c"+:-!9U]dEV0VH-TJ]FDKd?m)a[K[aFFk/NFnE6a#">uTqjh?W,VQo`r#.;AapUSba
%$F_(;Ri4I2-%1pYmO3s<oZk/V=n+QJ(i*/O/]]r_K4eE!G?t`\l<tB'o*J\"Nj3ltaM]!;l*)_6L1(OBJ,*C<7^>N=Hb5^_aBk*]
%]1%?rqOK?BJ%Dq9+(Lab[K*:cHASJgYFOc'2]VagH(UY]5IsjRoRM'#ha`o\)u)(<N1226Y+-Hi>dQm.kP.I"jjFL&S(nRdhH!'r
%HD!1BClLMUK2g`JRJqfNpU-AmgEiShK#VjP^--E+oKQ(">@&^m[)/lOU-SP=U'_cY:SXd0oi.ini6sMf/u/Hl[Y7n\M8P%Z9.3'j
%!"@=b1?FDQ2!9m>H7YC[P't*f0h"g0Up^GLAHBnW+N$uJijPri);_dG:"^og7f;#Q2A5Gsm02.`QK0HV`%?3*TL[VgA(/?o-nY9A
%`9DM9cd?,S(7`SOfb48Q=_K\LC;i9,Krt.&I-u[8o:DaNDVR9^4Drn:$JekjCEl-R8*:g3N<Db3l"2]Y(S((0Jed&Ghi-=A#h(]4
%[Mf?U"rmn=a6C5Hjp)!l9/ph&A1GK^,LU/ETmO;R,D8Ba6&bn,N58P1O.^,A1;T_7[nt/N\+H-mdcEE!.!h1T`-'FVH-)c+S]K=:
%`6Lu`1A@s3ntY^^+Ds6<<M3&S:s?%:n[OA[S&F]hWL_W(&?GVtVKN]T[Td*>\s;KFEp[hBgi;/FE9,:,==.(?!D%F3,!'h]1,rcS
%.FAgXGsi*m:Mi$4HeGlHrhV@?mt*&*-K3*hbW^`^AuRjt!9pYD\Jo!/YkCRm3>+$=!9kMiI:\3GmOjRbp)#@SR^.HZ(TFJc4ZM*$
%4VVEMHma^^n6ekXm<<B>#8fO(E;NDm=!q'gLTIg5@_1^=F@H!fH:iCk5OQ==2^diCkr1C,HV1XAOt=4Kg4JqQGse=q,7dt+a&HTl
%PbTk&f>W$%rutU(_0M7B#qBT3OLlhMLaTJB?LkK6)T'GXC.b4t7#s)/flNqu3FNguR-Ym,fT<7:VkK^51fX>NLa.G\hNYWZ7D#6'
%>Io.@pqps&4-S!XL"@i=kU$Zq3GrX#Rj[lr*jP$Z)iqj[kNeper:mR.p(aSX<s.dbGc]`Ub>R-="sYE.G"J_1=GI`ZS'J.jbZ!pd
%4V%iC,jZU-c'_^YEXBd!p8aNg/U\bRA>THb1d&+=fQj2i6i,*>%Jc^+/ZV%<4/RZ9`"o"fKO\HS<l3a:LQVWgHMkVCmXd+'$ird+
%n<Q=IQ(LSCFnsEO2?75YNH=!.ksI_`\%cl`G]@3SY5Ook2GX8:CTY0Ih$T]W5*mC.Y$ej9<N9:_W$dPujNYhT!2@QLaE4jfW:'i,
%s6+IZ,e?KBp`CO'O+]%s:^!U>4<r&'[@=f\9o004iWP"d-o;JaNLE31k]'h@^Xc;7hi&/*pkSVF-V36=kJVSc7>VEl9[0oNfk%<4
%&un)QVaLO4@oNmEmn;YgX#8/fQZ]oV="=7]+\+(0Gh[=_"MpgQ=RC$B1ae(D%lP.mLeV)SZ<ApiVUj3je=TqVEo/-"3/;5^.q2Q9
%EG10]`d^2[*RVjZ!=l4qX#!(!Pp1&[,JrV-V`9Rq."[he:E7tq;01J%5].)9Jc07gQ#3)I8?>U&B^U1N=/O:*$bH1U=,5X.Sc'#@
%'3so)Vhd)W&pbn_N2Na,Rk(#.c/O,.W_qR>rU#%kU\N4E(M,Nla]j7t>Q07,)<H1Vk[gSG:'c'AGCqV!SS.VnXscDW]WN;?U3X*5
%qW(;FLs&IDe\lc*<ggQ%]Q$ZPEiSZp7hW_KrX6g2]H[X!N'j[8IcR*"\hX+<cl;`*$DWeDNV0%]6RRia54],HZ.j&$*>k6HU?2$^
%Gf$;0[l<_"$/<;Nr4pu-B7r,C`,cke%0mD(D$.HtTKPRE,J>^.Z,#\anb_D?Rf$"acerZ!\$=_QoHu(XrQ,Z<<*(RF$mWE0SqRZ1
%S(b+re%HASVj,rliL]eW'PJBRP#*s:lI("c`(Jl'RCbn$EKWV.bEWsTk+R5E9bLO(oLp)!Qn5PU6j"Wpa!V<b/ssG>N%`dhL.Uim
%N86UoO\d`p]e\\Q.gumu%8kPrp3Z2'nIDCY.j(6(1&7cI%LAV5H#.k&+#/jWpC28E>9\!+U-CgU"%L3rd$qs?fWi#S6]\4jBoC4:
%N;!sIqUIU3p]@)b8YR`L9t,Kh4k^WikRgmu*ob;;laa<(7gQ-l'B(#hHke'.hBNYQ_7:Cp<0G(u_7/7X^Jo[*Jl3<-1?qN:9mXN1
%Jk,F'1<]IGrepAG[QZ%TKsB_79dKRk#[]1)-M;5r"4j'S1F=b'D;B*=S$EXlLt?DI_$4GTFY.;8hHbkbSVr5,9i,If"Mn[eKs"f'
%_VWT0XE@E:UeB<.85;59f,YiAi?fY#ejP7!8!MN@*BV\1A[@*FK?kP=Kq=64J52d&'*hc<ntg?H&04?Z`*Lm>Y$''T+3,"`8#0]n
%F@*m:d858i%jc9gB"=`_Qo($+?1$gmZ$%uIl8_GsU8J_@VT42S=)m9X$Ck<RbW<.Xgk]QF>*S?hGk&G\ZW"f/Y0MJ6SkB*d6o/un
%/G77rXV-=f>$&kSJbM\\f2Kq0HAN(U!X87-o'6i26;pm"c:F]dq=j3hVierq7YUdr0\o+8l>KB-59!*k+ts.B1aSPa^NiJ=&QZkS
%Va=U9!Sq_cbLWC`*U@7GmSZVZ-L=RtK,)D)Kp-_LDqTU_hb=n397#(G^7Vbq:``'sERXWcN<7AZ)j0YsFOX)MVhk,\ZLT&P";An)
%3h`4Mie((&IsJbfBLXjT:nY4pGh\Cf8@cD?M:PPYaq^.[fb\n4oH16!2lhAh'sB;i>)hlI;i?[<qUj(9'#%BfWOLAY=21N>bcbOL
%U?L5>VfZ+Cj]q$dNc'isCk4kc9uF+*Cn<8FBtpIH.=.Ih=1q=jFaGrI;[j'\<Z=fK5O20^;*[\`%sk<EF8G9k0uV9#A.@gNl1"bH
%Ve#P5]D)Xh:M3fMFoHqi<t0J7PIH9EbrFX$))Y<GO<n?H>Y_j%>/rIgmJ3IB8t+S5X%5@uj]9"&Y=AL#^q'l$[7%9G8@q1HelAg>
%Tb3V9=[Ki_'h'd:>.o"G..Xe&Kcs10E]]<8,oJ>]48F\*QaDp]0s$59,[MiUDY&Iu[t+8%F6Pk+DK7#*Y&qlD4Ha/I[2i/P-*Z.7
%nd7lHXqRY7nSXKPK488ui^*t9ZCVI$]$$"&Tf(cmkCZ'Y[KnP$,,OEVT)3-4j'tjO^<GMtHJK&IEu=c1GMFfEh:!8BnYSZRC=$mo
%_l'KiRJ#I:#5?JF=h-KT)n+8cb]i!\Q?b>>5nQVAK()E\R(LkE#"&.e7j_b9?,gdq?3YHD55XJ6R_H`NUaXm$d?)YtC%`;'fkFk[
%<kUW=-50%L$T%6B<!jK'_D`QT-^n'2Pa\6G$_+La'rO*,%g6WI1hQK2s3p(p>r0os9D0B0Dm9?F&mZce;ZfmqMI.rG?Tsni!'\oJ
%+LQL9Cc"d9C.^J/C)ENp&t%AFOQACTEb1(N$iUF+EQ8'(HQ`d&8N@tKjL,\p0kj]u3P-P#jIhhBaQ8;UQ<+d,L#qo:W,R(@MrJeb
%RRj<5>Xsu-E6[8IPfX>q/lKkO@o"[([#0D7_*-1efPM:^=pE^3k8jGUINnQ-jZlWu,^kLYg;PE47]$NsVnEt;*E=_Z"p3m=IiClV
%7h5BUTRA@,Im$ea^7MXSoWX-[@Zk;F5H_@gbGALZPoQNQMCK=s[6&A@9"jn-l3Trag',4F*A;cBLtgHQ^f'`E-cE5nGA$P;FU$/p
%-eYdO<<eKEigOg]1O]tn=)ZAI<2U"fGq&%D9d5'DdgA2V'\&IX'>qd?7CP068Q!k,6p[3OBI[6RP??eSTQu28MpQ1,:*KsP6G"Qe
%6*.:t$ruK^EF7=@Mpcr)&8)`3K;ZcG3uQh^eRZQB:`orP,NU[T!QU7a+Kr9;1F1KkZ2/W(QRa:[>+/N4/7(?j].h#Y50nZ9T,co1
%0uOZ+X==h,c)cu8eh`6dBCo-09%QTM7HK3fr=UECl@ek^c!TbSB12%A@qY!==%JZr&27"VU'!E-AF!7^+_%5KCj]9ZKA`CsA"B'4
%7k_RYHS[9OQBjl8H<'_qf_<dh"U5J^V,b^Ebb*nG5M9`2O#SBmQ:nZcD.`L;g#TDE1hjV]%WJ_*s.1Nf@/ZH1f>Nq&p[HuNbq,"r
%F_O%u@_WL]"qaP>`YA,>e?IadE'bouQ(a*Pr!"7tGgD/$n<0Fn0rCCRBkk!Yi+r:FosVE$]-#45H)qf]h@W#TdJh)8=Ga-J+F1Kb
%i=M(B`T)C#,Ehak*gjjC+(o%aIHd<k@C#KcC);!G'k*p'Oe!b=S9,FGEp4atj">,/2Fpu8lfJY1H:At?1AbfbGh=7h.B[<PU=;Gb
%-fp3*fagH&!7N8'25=Ep6FX".6h@&,-"TA1CKr-5c![rTp@DF(9DiOH0XVoGhXHQuCEEmHeGW3Y5Bbh?*kWePTD'0+;!Iu0-Z[5q
%ORksB`N`UVJrhL\=>LPFU(L,1<+HkY7/UeS0?gmYqqS=V,j<=!%$*Ru<D1>b[ROQU2,c-M&_/F-`$D^)*+V['n=)=g-b'12fWM:W
%=ZKoH20DE\&#QY/&&,]tQ#h=QDm#`OcsEb"4<j.-dZ/L^a7(XN<_f9I+YJGe?-,tcf6Rt%Y*!tZK\N#+.pA-OZ/0[G;pE<mDu.,J
%3S-mM$$hBMQ;bJ#La;?OYWl!obX=Q5oaY1K$un+=3t9P@ZdMCk<Egr,4jjO[SHnRXcY6YRAt+U+kr4j@H3JasGiE3O"q^rLZ(:f:
%,.YH'(q-9pnLt8h0:4Oa[R/4e:_]IVfNR)tpd)/4(!'BAm/a'/V8_RBR$&8_COT/W&-m[q\+a9Mp2aT%/&A\4SKt-$`Q?S2r]5FR
%Je,RRqBX8RbC69h;X-NF:!J=*\fmZbm5:AaJ6+"dUCaEe^B<>TF-E?br"LKAHd:fOob90$AZ7$E%:HRV!h.h))FX4X_I/ol6WicL
%DK\#F%;1H]Pl+1)c_Eh+[7]'Vq:sq$*[FLPBGIl"RR/u2UtJ['7mI:n+:''/nS-R]pL+i^S#PBPSSh(-OcaYJBUENFol8_=bEU/U
%2"dXdX]58,2[uQmoZ`'*0iR#3\&\J&D#u*P^*Cn?_)h696Os3>*rI<!7#O[ebR;4p8?hl[-W,lg>]">F6o9U)b1N9UQ3$RcL2+Do
%;"DuG-.V15*U-bRXkJ%9:H(,dmqB4s6"]MMH`E1dl[n0nm1%eb]WbK>9kN!:QcQRY7[lC%kN]l+jB/Qr-@VZZA?N;&n3pSdOq]eb
%%6^TP6C9E:5Vq`2(g;L"I_-l),=\5;j/<4t]d>j\&4t1dGI0&6>m5GkW9/P<Z=*4'>ImebE9Ptm/n6>t'95-ZocAsTH%mlEd0P,?
%"$V9E2.Cjg^3Rcq,-<oaAZ=-%F;*A89FsohY(m@"Fbuu#Nf>kuiPXEHh*c3nV;=nEpMj!$R2OJT6PP5tL/LiXg".S%SncDV]$^(1
%fTXRslA;%qb<1'LYuA&pTVO7.@O_!?Z7;hbm.m&RmGO8YE<u"%(aKR:H"tJ/K7On2n;]*XcNg1NiXK5X]Qk?l/#gM4On&B]3o`%i
%D5=-3VDNL/0&+gZ@t,>amZOS3_&,s-?b001IZ)][HOI@2Z!17FUDgfF(q#gnWFlua3%T`&;Cc^'])?`;UP#tOP*8R@&*W,ZCr(oG
%AbuFkG:btH*(B@W`..9qa'I6mEJ,&t81VN-4'J&;6,GN`,7smHWJj@?Gi8ch=PW8ul1oZ%X00U(N/S>FN1K$=abs_N_#Y5%/[/qq
%d><2MM\u"HfEBTPNDX;>(b_`#KeOJ0L6InjL-lHH*&F;:-*`7WhGI&5LhGb.$/#$j.d6A/*r\HH82qq0T-Q'>(Ejt?Jl*q@2Hu>q
%f>uRT7pW^sK<gYD"VRRr^]mX[h(ja>Rgan0eCQ%kMSYnDO6pmsk<kQ=MqBX0Xg:Y-\sYe,oR?Wrl$k@@gPfVQ$uC=/G?_Ru&a(e]
%l]F])6dO2j,DB'r94C[%/feo]<&0O@ZdPL)&5,_^</^?*E;5fC=3eoECrHu1Z\@(PK^<[oWNP*&9EjV!%'WPsTj8/))Yu:"kCoHO
%<qZ<#Bo,j3PM9^qf;nasY%<c!-r^i@KRa6s0C=r8/_TAHcmVKlW/k,Xbno2p7&cT4Su-o0.$$HFg.5o/-+70[H[9s\qpB#Nng\[:
%26cms;!b,n-U)%&pWnrSne]TNe3r^0fHm!S$/bnaJE$/jV8."Sni[@iD>_D?d[8\>!8_oss$K'M!1o&:Xupj%W8_7!B^'n8Q]pZ0
%0Hr5e\qTtR9.J@@`<m'S!'JYq&$(:AUq5o1(RWf:6X)<L]W"lWLH8jSc#dZA`jrAaQBJ'\B3.QJYI'.D,=C7AF#$pkN[%_Y-[1*B
%,"PX/q*BD!kY\V)U/fbIA4EYbCm>[9R9[!B12!eT]k*n%js)Um"PF+'',e#sh9I,sH6GrDNMh'('02^mApWAE`A*o<mPHNcH3^D@
%rSP`V/J4S\.M>6"M$KW+(O@#*(n0e6`2"M1UppEj?&3DQAi8R[n-_-p0h[Z9Q+!O55.23"?VP)4.![2IV$qlGY+7^hR'2Hm7'5:2
%"M2,tJA^C4O=]k08`jZlJPC37Cb+^US.IN^o#!LBaM3B!0._a]SQ78bK.mWkFN@+qqc"Z(X:"SV)msN^lo:8cGN:#M9NL=$9*@>J
%]Til!WP*.IPhDX93C9:pP9N7g35%2d\hQ1j:<beL9(@VXBf\qX+dk']fH^_cO@po0HYKlE,p=EJ-c".)BbV8=6=otWd?07(KV1LU
%P3?#FoRcJ/$/]/SdipbDFcD>rPP6IEP(Y]#CcFO>Z>`n"1G3XP&Oi7p/Ct96lFM<&EV6<V)_N+r6equD.D1aOjO8dV!TJuoSY=^`
%EnuL2f>j2T%!I97l!<D65M3.Zf`*Z03;C$(K=\c*gaM'ZYgF!$M!TIVZ%!"3Zae-S;,JFERsm;HZG6:GM:28C",j6]Ec)HYANE:'
%VSV*Oahb?U>I2.ba,)ABOD<16m.3IGP>\s2o;WKj;*iIe1VACN(i=N$-bH\8)kN`OJO>hqJ"ZU+A'65\e22qk:4K>i9J-H_SOMMD
%<(2QB.Na/\\O\*_=K<-^B?Mrh/"aIFTAf_pNeH36L!/4uZkgr9aKt:568i36j0t.o4-cDuk8_bJb-`pE!M)&8*YHM9kCY6QVHStj
%%p`ORN0d%AE/J]B3-H5Xm[3@kNZj=[^s6LRcaDLN0,+<%W\tI'ZP2?0583D>r)B9A;/[cK<N,.XB]-@V*RM'PEKeo?haQp+`bs-"
%PTWmMV1Aif3^6YpDj)eIZE-<T(Ko0'oQa`.-IpQcGRL/m,#eVg$/m.\<p3sYjEi"ghYAGq0a2e_91('IKk7TYNqFRWP:c9&.%)&Y
%qMT;<h4Mo23%PDZ?qsZG,D"Gk13Hn6ilB"?.+,EpV2@V-/OGorLVluBP-^#5o30T^R=+lkYF1u$a<a%rmAjO*mPn[M^t/<2TZhe*
%Q$VPl=CuZFgZ5atlIc0bZpY4VeBCClUf"V._d7)A[`&m&)N*?K27Z,9/SR##%7Md41c1,U/6T"XK%'41o"^ok*>2N*'[Kh9p8:CJ
%_PC68<`?^DdhZ.d3]Rk+apd+.VOPC6"AL3)3:K["WL:%LP/q-QHCTD8;IH.pKRh.1">iluD8FTcK[P1`AH3gM5=DmVTaEr?Qjf4B
%c1P$6KVm5OX/eQq:ne/*GA4Jk8M3k^@*j"U'%"X.`k-Qgf+@ck@BOq_T=)M1OdR9=cj.]A]GH0fZpP;3L^eW3nKHK..o2E%Su"3<
%aXuM*YRBc1erjQH)no*d6qC3Ub7a-JSCK,8)gI!0MUIp-Y=j$5!$bWD>.@TZgS^'=<';E1-73HI`CktI#OLPQ3B(U=Z4S8fP+[3J
%CYa*:d)"QWAh0.T0cFHF^tXPk9UR$@DBqQ&[70LNcCjI]gq9Bf'f\_loEpK*iW<.+R&@)c"Y-ZZY2X#iVuY.baZ<fRN<0%.GTO56
%'o2tr[Hgm=DLOs4(SMuf?0(VTb3oj9af']\cM_[F`h+U=GWeRND7E6RVLd/,%Ho6F9Ql<)YaiV/ak=T;$*mT*1<2"6WVWV)oRV]P
%6h+BJiJNE4BaeU`'\gnDW=bC%<O:K:,c(j'2RhHlmkL7SB\//**7c]Tl6@CMO<J1l0f<fDq6]9u`H#g\74'H+$Rs>u)IS+h?:9MR
%Rt^_Z9bR+ol;GriYbBESfUK4gkfr.F)5EkaNYHKB$B#;OM]n89764i]@D1=DS64H^X]lf)C!5_dW=l1&a-X&eLf1gs4(1ajN0=9-
%6>K/8i@oA"g,l<KE,M:]cfJ.1P:2/),A<@o<m/C'47OW*;F?^S>5)hr\0DgRm'<Q!]u+oSUXN&AQf.6Jr[N3ujWRhTD(BrpP?E]<
%kM][P*iU.jc7.'0ioR#])]=/e]k;/fi^T`2]&1)h4=Zkl.36dBP@\,DNY'1aq1^9>;)#hsM-oW39Q18b`5cDa9M-`^qLG)KlIt&V
%Wm[=S?X$]foO6LCiL:m`fm)4ci6M"Srl<B/B_YcBcCO,':=^\$*JZ3#_/TLi[cEBG[R(;n.AhIsIi5'N(Dc[<XpKtljc%P5ZnrKO
%GL9uT\VMTd/#YpA8aT+A%kF-7ihLT\5@Zpt`7F"G9/$)6&FIK;7^R+5S-2)b?Le@:9Z$U'8'B6i:5,-dh,^J@a)n\3_jD:!+!g0S
%5_0:u\r@Z$8IJB.E3g&1q05Yo&U#ui^d2edrl-j%$nGoF+5FZ3d>nH$C8NB/hFl$6C@<IZ/m$0tXK,&`l!.OV];(kU>3nPIK+=Bi
%;DVEf+.#TUQ_KL'=H.t^Wqs+(U4JT2:lOOh7TD>2de)fW=914YRd4uI`*;>.nUedj%e>ua>Z8)K;/6[U..6WN\b>hIjsr?QBuS4!
%lK_Md<iC@M]g!3\aMb,02$F'+.Z$+bhmBEpCh*fO_NC(\32+O$kVg09eG2q!,Z6q:>XT`I%`sbX#q&ZdJX%'X)<5>[k3fEXPr&<t
%n`R[aGPT^K!^q3Sp!10gc7<L@3YX(o4.`%<``=f[]!k4jJAqn_eS(N%X$;)m(F@-e"(r6I+Gd+#S[i0l5S'.%>Jh/.*pONX6tCB>
%cJgnH#o,rZ6ef@Q],f/Qp`&=md,'@3E\Qsuceo5S&<#dXC/*/#Ng=Q;<o?kI&/'M50[?Pajdqd4[Q"#+9iE-/eN%WK0`?a>;hnT.
%\k/\pMNpf]A4W/-=%^Y4s5MgW'f`kA-006T?V(NX0\!<,Na-/]*HgB2!/$emj^`9<*RT1&5%O=P#@/,(W*!Nt5EB:*Th\;RUFNa]
%Umlh5+l3R#Z3.'aI&5?[HM"fNe)Q^G8cTS9:D);A)F3AErKn[A"Ec<f#^,hll//'WWY9VTITRX8pst)AKpj@OO<PLH>g%;e)?g5`
%\sAT\,3>idAdleK57$BJ:!3GrdpOX>MF<O7P8khiaqdV>iA7T1$Ff!cT^Fd0A*EamgRrV=VZ)<[j^(/Sa99$pB0j[0=DZtsRHBrZ
%4oL?\,Q"M-d-4UV7BaQM9#O?9I(k^S+Mk\!Pg5PO'8Ft$R52IgZoCj>ZqFP>)bLZc'5"/3Fso4<l92H<]ek#5>3H2gf%=d]^m->N
%#d!K?WON%!2Q.e\O5Xl&Ee')#ojl$ADu)+9QUGnc-o%S,Wm/eRJ4kJNP:DkBjYs,HN^poUY#r/^6[BRUp\XUnm%W<@=t;sa3F\T,
%\A_TJ%/FnP1-N</j8@m[FC5OuZLPXP-4@t/!Or,.GAg_Xar_Y(V-(atZ:'RV$^0HE"-nq]qR*I52I82T+ZLYR%dOYo=UM3PgQQ57
%`k"'RoI9ADMZ]S=WX=mfI'n66K%"UR(A^>.jk>pn[RCQFVjjO:\"^3X/oB>3#SPU:o/'.BYK1T.p.G=\7VLclN9?[IFXPek`U5j_
%EdOlT#6j?R5=fPGrT)qIs(YHCS$CAgP@p%KqsiIlmV`_@NGd]ABUH#cr/s#2`o!FhSI)fqR5`Wqf!Kc+g<<!LWj8gYA*DoDOc%6H
%koig19`kn;6LcN=lFL0k=_#hngT?P7'q-<IUhdC]l472o$$`9W:Xr96Qpf"tghi3Rkb-rqf&p)7G]0DNPXX`(Gp-jDLbf?R'go@\
%,o5`f'%0@5?#u3;BLa<U\n=;?OKgkjGNjtg,ab"YSC"YX_@>cQgBL<XWT?1d138423&nsD$dfo6],N*Ig#pHEb`FH@2VA()AS0/0
%F6,-A9sd/Bgo8RC[gCaiS3S9ZJF)e0l)_(q93c(<_KN$fhIZ/+:@[dqWDVV<<&IK9kt!I7q*c6YNis62cX@:5U7/oS@rmOBekgZ'
%%2]6NZ27^bga$Ju39W6$$T[m8QdGl0?\k1W1@)j$8BR8l7YTIdB[K!dE[?"s`Un_SYGi\-VKSa@o1RWkP^po^)04488Isbq!i>Hc
%(iDe9/HOI)kY2^.Pte?^V"+dW2NDh7%U5H5`4;17fg<#\#Im3]O>,*`Ng[h3g<$R%,2<lC0Qk<QNZBU#V/Lu\asOUU)]QF;peKe%
%&,343i;cBQ=9q@6i9;ua@QHbkN6&sqjBU\CZR>Rkj!,uA_!)(0)Qd67pgZC*_[6eeJ$&2e\.L"HjNTLjHM&9CD'bg,V157B`bG6%
%<N0gNcOm"RrE5@!9<*f\.7C>4=3oD>CD.'!@K8u%_!Jl2.$pFX"%D#VSZZPSf53fFX!MW7o:=q-@F-RJ9TXSX$'`q5G%BELAmH<u
%X-5uEBQ"oQDq$\p=/Nqg$TB^3gh#\*>m&HV+l:-eZbC_NIPrl?%1F"j+k:NX@cSMsP1>cDGtip8mO;=L*Q'>QD:23_e9R2Lp#ZUZ
%"cam$=CMA#T#Ei@L.p=b4U)pkXYa81XW;Io6CF94fV]WCh)>c\WU@T;H<hpZI%BL!.%"/D+=$FhEqeuu6aZ]We]=8Wh4>`pFU:*\
%LmU"0A)4!9l=q/OHPRcq;omc>X],GSj5pV_a.s=im/9g2f[2ElNt=(%DIra+<Qj9umA5HqC^a):<`mLi7P0i4fJdQH&NYr#(T3g<
%-1I;dD*aqmVf_A+447EN[@"]5,4#G`'-YMH9Q',C;QccLX_kXAXCWZc""T$CUm>u`64-X`>*iZA%=De=$V$Sq/]u_MR<%n\;]J4+
%V=:!$,Xm3am4>IJ:Yf@A%<%!0,9u>:=Q"+6eRQ$1%C[XD>fF<lX39/<.><0C6.44$*%ka11`_k1CE&#q#Sh>;pOc7sZc@i@@(R<t
%V>b%SlSNHG:]Z>KSmj&o'm#QqC@shB?st'I#1nr9S:ccMI\F:"::BO?edOT0(D.Z;X!?[0=S/S:HK[%P09R^^Q"%+=jGC/MT;>YW
%$pA5_0]C*[I/Y*\>W2D<RF3i0kro`0&6UsSD3<3"GB4]=-K,T\7G-$6J[E"$BaB*M!I1LMT*?5G<!fq?C(P&r\'"8<.8]kK,07<c
%X\ridTR=^*a]DQhSdX[)kQX%G2ggsVjSB.M&,KYohTBgePdoAfS@43f&_]QAjM@5tG:aF5ETWRcAHY6d]^CAf$4b9b'tP$4G:!LQ
%E<2iVUDg#XZ"7fV,_`'@Y9c_[*\!?E:5(FuKCk5li.`?hIZ4!KI:.]!'$!DfU_^H$0#`skfDd^C'J-UBd^Xa3T6+)2,Y36`lTAJ=
%KcnWs<-@H#jT)+b&$[/g.KP'.._l`_TRiJ_C`RhT9`nJUk=rsR5_aruJbR$p0O],E[Ae]99E:!P"SU_uTb?T827=tQkf'6r$u&Ho
%O=oKe^0V\Wlj*oOCQ6h.J[K,%8!NP$&d>mA-..eM<!Q+tW`sn+<Ic=_E:'GX@Khka'YCMiZ&6Y=D50C[;AGhRo,n\#OS0mqQ[EBW
%/]p.t6T5.a/VYRfNd=\`?Y;k.kIB83Xn9Ubs)48^_-?6r$H@^6hR%K3P!V9D[8Br('hYf<GI_,?UB.FU32G>s_*,A.URMh6/`fA^
%/NGH^J=)7l;![/gmudi6"_[#4UWgE-+k3JY(VI1,@FV;6"t@sP4b$>)'A2.?.o8jiDO5J1qsUB1Fr^%)Tr]SA&-6liQL=:s7&QkR
%Ib=@'+'+M1U=5cN($oJ9OYV%8op,$i#5.Z\<DA;a>r[3XM/?@gPdjJD.jm6=^>2G,)"_ZolpV@CPsU[i#XpUs)t&SA,%[6q;AkBC
%6Cqk4@6+hs-X;3D]UDbqF,k">WVo\_:U8`p!u5EU9Rm^!@+?:!SSl27fc->T&XmHCXj0+00Brg32j2c&=p62HBL-0*VZL,#f8u&#
%[#'s.2]hhC:eHrn"CMrfdRVe:9l]$hQqi6nQ?a)jlFuBD%Se$9K5)]Id%k?MK+"o+-S@NYGEG9dQAad7WYN3^AQh(m,Yc!e.L&]7
%-dbjVZEb[GAK[#5Q&5i_>LnG+a@M9nMrgK[6Znq:@.qr](#=$V>JrU&fgie2GSgpblX,l`O61>d-H`V>4`"l'.7/^7ig(/_"7oM%
%bS=\tbN!8+jcjk;7qh"bk6PMfQRE<\QL!4Es,:".>T[$NXtDR@0V9#.mUS%=[=KXepToik1C;44;#D+P@&Ze]+DJLT!;Ee@Q[?=W
%Cp0dB0qG1^$N9;pm%9&(^0d9iEi$;qD['H;+Xh"MKpp)"9<>lY<Nf.hY]S4Ah]jH)E6oVg+5[OL9iYo]:#X"+j4;AtC?jTBO]*',
%nP1S"LME+r9eRiT!f$+UVkEgA2R5l]EiZQ=VY-N2p'2<DX#nI,6U*0NQ%s4CamRVi[DX)XPB=+E4]@>cUu@37U6OZX?5@p,_kKIl
%.:KG*)5Phrk55PZiiGu6Cf"[4,HlmYB:6r(6pB'<.0*tI+!nA[Mc;!W"MCd'M2+*J[-cH/j!J-+B+]/V)?[*dL>jjd(&%0MVL'X+
%KX<9i.l5Yb36iXj%F9\iUI-un`+L#10VChaGjmkkSY7:LK+.6]MY/9c^2C*u<:i,i=6o"0Un,bn]GY<%PddBa7tg_k@4<]l;_]r9
%X,\BIVI%u<H4^FbV+h22S&T&tUrJnkZ6?khGft+YWe"ZoSuECGo6GG@d'b+F*8;\cmA(e*d2(d`?=jo!L1M7;,#EEm*F4aAEXPW7
%51cN2R=N.@-cH`S8'<-ZZ"Yfk;jgTonNr-bO-]HScS6W+Q"=i_H/$Cc(>`$K+;5n2H`/s$9=+%>Mf&1oV9NfI9pY\:>+JZMkIQ?1
%E]!UOL:7::@_g1-L)"WKUkp%\7E1`l_gI)I\[8sWFDV"P3Xe\:0+e,OmTX>Gq+N170<%KZrl3KaaZ:g\ThEHH)a)_#M">Ms)\(>#
%1&>KlC9hAne.PT0YE[^Sb`9P'di+$$o_:Wk+O0$uohKAl@W!0E8"UL")knHPHAHhWfDN5=ED>^X,WErfc4@qnG_hR1DIM2>/.9lF
%:9X3jHl:c]1?LU$Q0Qth[)TqB9Qq@sPccU1EqJ];UaFWB]FmQ5p]/V#Z>gKq7-j1hMGJc\h[(==MV%,a&)DLpq7CGh%()oDgc@I<
%W\5s=K&F]SLsa9r@nSOB4S,Rj6,oi1YI.;UQ\*Si/(!K2UE;Y\=j0jl'+H'&49\MnUns0E>oY9(EbWi-DE;N,jj$:1/2EtM!"B)W
%]T*=ii&apuN;p[/$ABu4K^]gK^In(G;]sYkPs5Kgp$n-g/\;J,+(PpIXhi2If[bPes5hGMrSfd7&&7u7O7,=2oAc`-DdEKPrpI\U
%++O=T_k6u"n^Gg6p@\/%rr2GG&)Vh_52kO/?iK;JY<RI5rbp\BqY8&(J,8RT-ZUj1"^c`SX5EpQk<Jh[KlY'"~>
%AI9_PrivateDataEnd
